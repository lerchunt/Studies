%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: 40-cours-stockage.pdf
%%Creator: Adobe Acrobat 9.3.2
%%For: stephanie
%%CreationDate: 23/05/2010, 00:05:10
%%BoundingBox: 12 12 600 780
%%HiResBoundingBox: 12 12 600 780
%%CropBox: 12 12 600 780
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq{pop}{setblackgeneration}ifelse
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq{pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1184 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-13:18:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   xmp:CreateDate="2010-05-17T16:50:23+02:00"
   xmp:CreatorTool="LaTeX with beamer class version 3.07"
   xmp:ModifyDate="2010-05-17T16:50:23+02:00"
   pdf:Keywords=""
   pdf:Producer="pdfTeX-1.40.3"
   pdf:Trapped="False"
   pdfx:PTEX.Fullbanner="This is pdfTeX using libpoppler, Version 3.141592-1.40.3-2.2 (Web2C 7.5.6) kpathsea version 3.5.6">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Semestre 2, année 2009-2010</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">ASR2-Système : le stockage des fichiers</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
<</PageSize [612 792 ] >> setpagedevice
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
true set_gvm
%ADOBeginSubsetFont: IVTBAA+CMSS10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /IVTBAA+CMSS10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5000803 def
/FontBBox {-61 -250 999 759} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 694 716 444 461 656 678] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [61] def
/StdVW [78] def
/StemSnapH [61 64] def
/StemSnapV [78 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/QKILED+CMSS10 /IVTBAA+CMSS10 findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /WQCAAA+CMSS8 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5000801 def
/FontBBox {-65 -250 1062 761} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 694 715 444 459 656 677] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [66] def
/StdVW [87] def
/StemSnapH [59 66] def
/StemSnapV [87 101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B08A9596FE72ACE143EF> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8 /WQCAAA+CMSS8 findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: YHBBAA+CMSS12 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /YHBBAA+CMSS12 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5000804 def
/FontBBox {-62 -251 978 758} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 0 694 715 444 459 655 676] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [60] def
/StdVW [76] def
/StemSnapH [54 60] def
/StemSnapV [76 86] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B08A9563F93DCB7939BC> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/QKILEF+CMSS12 /YHBBAA+CMSS12 findfont ct_VMDictPut
true set_gvm
reset_gvm
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /AUXAAA+CMSS17 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5000805 def
/FontBBox {-58 -250 939 758} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 0 694 710 430 442 656 672] def
/OtherBlues [-204 -194] def
/BlueScale 0.04796 def
/StdHW [61] def
/StdVW [76] def
/StemSnapH [56 61] def
/StemSnapV [76 84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B08A956680E0FDEF79AE> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17 /AUXAAA+CMSS17 findfont ct_VMDictPut
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
%ADOBeginSubsetFont: BDWBAA+CMTT12 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /BDWBAA+CMTT12 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 5000833 def
/FontBBox {-1 -234 524 695} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 0 611 623 431 440] def
/OtherBlues [-229 -222] def
/BlueScale 0.04796 def
/StdHW [58] def
/StdVW [65] def
/StemSnapH [58] def
/StemSnapV [65] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B08A95D5761C3CCF9381> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/QKILEH+CMTT12 /BDWBAA+CMTT12 findfont ct_VMDictPut
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
reset_gvm
true set_gvm
reset_gvm
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 12 mo
12 780 li
600 780 li
600 12 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
43.2816 208.019 mo
286.478 208.019 li
286.478 25.6211 li
43.2816 25.6211 li
43.2816 208.019 li
clp
43.2815 208.019 mo
286.479 208.019 li
286.479 25.6212 li
43.2815 25.6212 li
cp
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
204.076 205.147 mo
206.347 205.147 li
206.347 203.545 li
204.076 203.545 li
cp
.320134 .301427 0 0 cmyk
@
201.215 205.346 mo
199.874 204.341 li
201.215 203.336 li
.142977 .132937 0 0 cmyk
f
209.258 205.346 mo
210.599 204.341 li
209.258 203.336 li
f
217.746 205.682 mo
220.017 205.682 li
220.017 204.079 li
217.746 204.079 li
cp
218.3 204.073 mo
218.3 203.537 li
220.579 203.537 li
220.579 205.145 li
220.043 205.145 li
218.836 203.537 mo
218.836 203 li
221.115 203 li
221.115 204.609 li
220.579 204.609 li
.320134 .301427 0 0 cmyk
@
215.753 205.346 mo
214.413 204.341 li
215.753 203.336 li
223.796 205.346 mo
225.137 204.341 li
223.796 203.336 li
.142977 .132937 0 0 cmyk
f
.40066 lw
233.642 203.671 mo
235.653 203.671 li
.320134 .301427 0 0 cmyk
@
230.291 205.346 mo
228.95 204.341 li
230.291 203.336 li
238.334 205.346 mo
239.674 204.341 li
238.334 203.336 li
.142977 .132937 0 0 cmyk
f
232.972 203 mo
234.982 203 li
233.642 204.341 mo
235.653 204.341 li
232.972 205.011 mo
234.982 205.011 li
233.642 205.682 mo
235.653 205.682 li
@
247.51 203 mo
249.521 203 li
248.18 203.671 mo
250.191 203.671 li
248.18 204.341 mo
250.191 204.341 li
.320134 .301427 0 0 cmyk
@
244.829 205.346 mo
243.488 204.341 li
244.829 203.336 li
252.872 205.346 mo
254.213 204.341 li
252.872 203.336 li
.142977 .132937 0 0 cmyk
f
247.51 205.011 mo
249.521 205.011 li
248.18 205.682 mo
250.191 205.682 li
@
262.047 203 mo
264.058 203 li
262.717 203.671 mo
264.728 203.671 li
262.717 204.341 mo
264.728 204.341 li
262.047 205.011 mo
264.058 205.011 li
262.717 205.682 mo
264.728 205.682 li
.320134 .301427 0 0 cmyk
@
278.194 204.609 mo
279.266 205.682 li
@
.267102 lw
278.368 204.012 mo
278.368 203.567 278.012 203.211 277.567 203.211 cv
277.122 203.211 276.766 203.567 276.766 204.012 cv
276.766 204.457 277.122 204.813 277.567 204.813 cv
278.012 204.813 278.368 204.457 278.368 204.012 cv
cp
@
1 lc
273.904 205.682 mo
274.629 205.682 275.245 205.078 275.245 204.341 cv
275.245 203.604 274.642 203 273.904 203 cv
273.167 203 272.564 203.604 272.564 204.341 cv
273.368 203.939 mo
272.564 204.609 li
271.759 203.939 li
281.948 205.682 mo
281.21 205.682 280.607 205.078 280.607 204.341 cv
280.607 203.604 281.21 203 281.948 203 cv
282.685 203 283.288 203.604 283.288 204.341 cv
284.092 203.939 mo
283.288 204.609 li
282.484 203.939 li
@
43.2815 32.0759 mo
286.479 32.0759 li
286.479 25.6205 li
43.2815 25.6205 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 /0 /CSD get_res sepcs
0 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/fi <1C60D8A8C9B08A95C25036B66DAD74AD46B5B96F39BDF842F834253CD4C
A1ADEB9A0CE94EFE8DB1F68D192A95D2988C5A0F87E4CA5D52818F8C50896FFB
54572D0C952AF94DE82BBF1247171C97C42E4670ADF97B62E189FF43379C6931
340074287674675C2650EE76DE84E7DB3D84B7D> |-
/grave <1C60D8A8C9B08A95D352586DE3156C55B1A274B2B72067B23772C04E
1AA6F3F64A4E2C4CCC0021626313> |-
/hyphen <1C60D8A8C9B08A9596FE72ACE1431602C8E950A714EFF1E32E0047B
A53475FB05D2A1936> |-
/two <1C60D8A8C9B08A95D352586DE3151F07BA6FD0F15833F9E3DE5EBCDD45
5DEF0650BE01919EE999B921A7C37AE1B5D94321D0F127D5E5192C6CE2E6B353
B5D27F35ED87501BAC614D7A59BE22912F5AD166806F5E6EE1AA7FBFFC339CEF
0888D1EC027E5A1CCD2996E81F48AA76D7B767C44F31ACD5459E> |-
/colon <1C60D8A8C9B08A956F7E0F54872991DF347094B5E5D359149ECDE86D
C40C2BC3764C7282E4AD953B55F12F433909E6B0> |-
/A <1C60D8A8C9B08A945A1AB9ADE1431F4D4C7EC6910270DA9965D476F0AAE4
82DE422D9ABEC4C624750742D8C70AA9971950580386F314ED979C1D8C4E9F49
E07CD5C07FA8> |-
/R <1C60D8A8C9B08A9506528433F82F52EE6DFD61638AFF8ED0F6E49C55B844
252187C4223B835F0F6A116787EA420C965CB8E30C149867A675CF2F9B5AE335
3EA84A90AF77969A49522919CBE307334CEA60892148BE48C0E8B31E79EC5C01
77D75D4F0C> |-
/S <1C60D8A8C9B08A95FADDBDE5FC18BC799D54DBAB6B2FD6F8D2178DDE34AF
1C8993814A6AAF2B6819426231E0A694EBB80D61AF56991ACB207F6A717B8C60
363F1D11BD5A11BA7379038C82D6A30738FB4DF2FD4DAB0EBC2F41D753458E93
8C29D3E3CADC5A69AE37164B39C6625729D2114A7C1CB56B24075C1006FF6706
7418FD8777D420BC250C3658249492436E1EFB81> |-
/a <1C60D8A8C9B08A95DB28430F7014161FF34515CF999D3EA4393D83487496
48D6E8920F24BAB90D710F7C9F3E890E9A0684F1217BAEF01D7A40F03A22268C
4E20C7C4C025DCCB16B66C64450FB650053DA25871C776DF6AD29418625D16D6
B7A22A18A58C6A20B0A03AD67090E136D2A623CF6DB32892668B9B6250F2B3> |-
/c <1C60D8A8C9B08A95A487F5C1974CBC46EDFA024B10BFB82411DB9E6ED2A0
E93DEF0A35A251D920BFDAA2A7B46E6CBC92605CBA9B7BD58F9E0E0F22DBFDD9
F40F67CFFC104E724BE31C70114FEE7FB1A015AD23F1DD1A43926E> |-
/d <1C60D8A8C9B08A95CADB2E0FDF2144EBE0376508D811B328E7D70E2FE0BC
E4BA97FC3B326C454ED63825D1C7F6E07AD0C407528F66B2409DED9F38D9EF56
87F6097E025F5B999DC231BDE6827F638EF77F11FD1F9BDF4B0BABDA647EF1DF
9C80C1204C783F65116933> |-
/e <1C60D8A8C9B08A95A487F5C1974CBC5BDAADE84D2519473ADA857CF323C1
531CAD5B4F52A3607E2E7E14D187064DADC2B60F9198B7518A01DA501B426BBD
B66B30E2F7F9F5FC2B656F5C44680AF59260F6A73D520D43BF83BC3E70663D37
160A8B27AAF5B392D06E> |-
/g <1C60D8A8C9B08A95D352586DE3156F009F9006009F639A8258D634C07A47
28FC89A512B81732DCEC6E9C982BEEAD774A0369723BB6C108357241F27F5FA8
5A7410FE95C47BB0D587F73F0CE300962C85F2CF522AEC6D33B60BDBA1538F1D
02C3AF684A5F56CACB3E4CDB89627AB713B34ED63DA7D77D5FF5C046631112D3
BB1D955DDB2E28B394D3FB493F888A13EC7559B5D2F28EEF4492C4D6B068EA9D
9F4BFCC1277B93AD0C07BF7FC92A8C7BD166D5D34860A47802A212E1590C7BAD
1E3008AE30317DDBBCC90A770C2D7D19CFBC181ADE76DF145BA68F685903> |-
/h <1C60D8A8C9B08A95CADB2E0FDF214E965EEE6A31BF20ED8726B66B03BF8C
D150B019AC29E18310BC01780E8A4925A7599F1078EA84900F159B6E9E497F48
76380A38A2040C85E44373D7DD24F2D570DC> |-
/i <1C60D8A8C9B08A957F18A8F05374566C54B3F131F13F95C22E46A72210C0
1F61090D743E7C213D1F57D26842EF5CC50EFFDF11134D> |-
/k <1C60D8A8C9B08A950861CB097A06F6CEEF2C53ADF9F6A03CF1A09EE2294A
157F8C5B6BCBA6078F52A3BF5064311BBDAC6C04CD63CAE4075A8B52F7BD4BF6
D8C011F9> |-
/l <1C60D8A8C9B08A957F18A8F05374566C54B2C94D26200652204839D8E9E4
3E536042EE59181A> |-
/m <1C60D8A8C9B08A940725CA4686523F5E4BA492710E2BD7FE9B58417B72F4
ED76AE99B79CCD25919E29510000C440C68FE168F218555923CA26C1D5B5D915
C804F2218CD86095C0A5A448A8B2678F584A249A24E8F3CBD1A38D8299A9EE06
81CDBD0859EF09C19C7E6F6C918736D3> |-
/o <1C60D8A8C9B08A95D352586DE315151F0C9B78479922FD3E6C9893F15D45
86B2140D4A4478EAFADB947B582120E117287CD2DF2FCE24199168377CA0504E
0C0BE83D11C4F89E14A0860926970E4FEE1B073415A5894BDDADFBA30AE560BC
FA> |-
/r <1C60D8A8C9B08A959122DC3B14EDDFCB397F3EF6B08D988D22D83D5CE86B
8D2CCA7075727E4338E5AFC13950BF9D54804E4A8B7E1CF3330648> |-
/s <1C60D8A8C9B08A9513EC80F28A41BF87157FDA4623F5273C2BD0C4E6D6AC
0CE2C31A91DF1BD8BA9355DE114E1B20382A66DC7664BDB6776A450E9C22675A
0D0CA24171BB35EE2DD06BA8801270E6D847E65A096EC93AF01A345A28D6D17F
8D9EEE450308A68A824C28A0F8262739B8FECD34860AAC34A2A7057864825C85
CC6017F1B2A294D995C85740D9> |-
/t <1C60D8A8C9B08A9589CB49B41630CF5E51AE136E9062C16038719333849C
3269AD8A1B72076DFFE2F35CC12F3F72FF08F607A1C4D8933DFEF117E940A58E
989DE0E131D0212EB3F4DA90F61A97BA63870873D14909B6A1B3> |-
/y <1C60D8A8C9B08A95A31DE9FFB66A6565D5551F906784D46B9447616F9DD1
2B9A8805BB11E36465513461847268DC2EB0903E82F2474A8D998945C2047545
F0E6D0687A549D97BBFA68FA82F0AFDDA7C143D6CF3253F639B0693F9B314351
D7A7A92DA1DCEE4A91> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 12 /fi put
dup 18 /grave put
dup 45 /hyphen put
dup 50 /two put
dup 58 /colon put
dup 65 /A put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave 26{/.notdef}rp /hyphen 4{/.notdef}rp /two 
7{/.notdef}rp /colon 6{/.notdef}rp /A 16{/.notdef}rp /R /S 13{/.notdef}rp 
/a /.notdef /c /d /e /.notdef /g /h 
/i /.notdef /k /l /m /.notdef /o 2{/.notdef}rp 
/r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
48.9815 30.0731 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83787 2.3651 2.75454 2.12869 1.41915 2.3651 1.96161 1.6319 1.41712 .121384 1.89191 3.38074 
3.31025 3.07348 1.01566 3.31024 1.6319 1.53732 2.24889 1.89191 1.95964 2.045 2.12869 3.31024 
2.19801 1.89191 3.05424 2.28135 1.89191 2.19802 1.01565 1.89191 1.45399 0 ]xsh
43.2815 38.5313 mo
286.479 38.5313 li
286.479 32.0759 li
43.2815 32.0759 li
cp
.870573 .840909 0 0 cmyk
f
43.2815 44.9859 mo
286.479 44.9859 li
286.479 38.5306 li
43.2815 38.5306 li
cp
.539757 .507073 0 0 cmyk
f
.962158 .927459 0 .00399786 cmyk
true set_gvm
%ADOBeginSubsetFont: YHBBAA+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEF+CMSS12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/fi <1C60D8A8C9B08A95D031A4009E0FACBEB4A6A7089F11EFA546F417989CB
17C919D209E6E421E2BD0EECF1724B1D1D951D0C3528F6B77BC71B0B45AF722D
E10FA9A6B329872C276CCC4D83EAB298E74E082542FAA8ABE704C5E50757B67B
662539885467CDA4A8B46F436FC2FF1BD93C374> |-
/grave <1C60D8A8C9B08A95A31CD7D9F217DFE59C76D2880ECF7106F53C49A9
A8970DFA34F8245CEE6CE38F8FD7> |-
/hyphen <1C60D8A8C9B08A9563F93DCB793945E7BEE8284AE1E59A20EA03496
C304FC3E64B5A357D> |-
/two <1C60D8A8C9B08A95A31CD7D9F217ACE8E4C5480360774D2BCC43562146
1448D53FD51E7E4D1F8758DA684C0F4C4801EF6AD05D0C77806B6EF55ECE0534
8C68F66C84579DCB94B484174112D2726269FC492CC2E429EF83EA1C051E41D7
736383942C7D82BA534250> |-
/colon <1C60D8A8C9B08A9576E61A96850602E826D739EA1B879C5C2FC0C513
A9A69F81820F4A916769F475991382C899E32E70> |-
/A <1C60D8A8C9B08A95E0E86DD3D35C1EC96C676F01E9A265048F4C62D89CB1
AC1A0276333355878729FDB5C9C6DAA5F36F803B505C464FC5423FA44CF35AD1
1BB3E5A8B06E8FFC6118> |-
/R <1C60D8A8C9B08A950473ED54B685FF9A0737A72C10DC8182660A478D6484
4A4EF90B6375B7375447CED09B73989D67EAF43A4B291783C63CCA8F086B1D32
EABD8A6A3E5F275095F8C7F9F835FCBF54131EF35194A8396111E677F144F44E
10B416BE> |-
/S <1C60D8A8C9B08A95C885DB2659C88FD2DAC972C2503A689198AB4B3225B9
68E80B5EB73D3555758A317DCA71AB6822D6E0E00C9BA3020784B5001D40D821
0AD9B6DFB6B325A7C59892E21AA643952EF18B033FC4D33190A9728EC706283A
5B6987C8EA9A1BF44811A78B7154E81D19762911D2F1D749A78F890FF2BF985D
E8593A7E53226F6EADEC08C071CD0D95051494> |-
/a <1C60D8A8C9B08A95AB8DC622FEBB6EFF06B75EF6258DE24B779154260802
09CB95D8B91CC3B7736DBF97AE14274E0B6510D496F67062BFCE0BB9CBACBE35
5F30492B158AC74EB9B3916A328DFB0878E37507C5BCF3AAC286368133DFF49E
5BFBAE5B0F32B9FF9A26081328FEE6F2CD893A23BE17B2365CDBE122DD403C74
5D10> |-
/c <1C60D8A8C9B08A95B5589A17E299A83714C20537662F3B21D7A1F6748813
7EE8F8989BE1733172CD364BFC7FCB06F306148983BDDAEF22E29B526FD7F366
D8B31143EED2A05EDA8050128ABD5A88912DE79EA26B9F558DADFB6CF8334A6B> |-
/d <1C60D8A8C9B08A95D8E840BC3BFE7FD1EFEA271B3268EA0D05517066D38D
ABBDEC65403CE063C0EA82DFE6D2FDF5BA1BBD31046A4120919C9B005E02E215
E02C7060E04810197A4EE37E54B068AAD7A07D32D37F6835A705F045AD78BB47
E46188A54523911A939C12> |-
/e <1C60D8A8C9B08A95B5589A17E299A839B353761A5754405332DB751515E1
39F49B25FCC8C9DC8E3EBCFAC169ACB1889E709DBE3BE8BCDEBEDBEBD2E7A5D0
CB9FE062E3F18084EF219DED1EBBC816BE1DD940708D3FE9C79213BBC3FE62C8
E2F15DD9B8C87592CA19D102E03E0A3373B50DE6098AFA0A314B> |-
/g <1C60D8A8C9B08A95A31CD7D9F217DCBA037270857DAD016AE51D4410EDA7
45973C28E7621269D37937188B9E68E34ABB0C5A72A609A7299E87271E0ABC47
74D2D8CA31B2F58929BF44FC33854896D645F525702BCAE3049461EC5EA86184
8D66C047EE767AFCC6820558E167DC40532C5DDE3262AC3BB210DF2141A8CEBC
ACB9EA2A8EB81F3BF88D4F1FEBADE5FFBEAD886E960B95B0782E81B113A22DAB
655E030E15B75690C59979ACBB3A059B891FCA8CA0AFA0465ECDFA78D870A66B
1E466F09AC80AAA22E127934C645FC14C636848474C7B8A5AC887BDA510F3EC1> |-
/h <1C60D8A8C9B08A95D8E840BC3BFE75A638CC60EDE4C2693BE2F740BA156F
5A93574F442A2542FCDCCE6A654B33BB983B0D65C8F643FD519630B43DEE300E
0A357A0230F66197A90E27AE111714D76C53> |-
/i <1C60D8A8C9B08A9545AEAF563F384DC2228F717BF90667A52C65A5379193
AB133511F7507802DAB6A8197D0254965D7A9693EB947D> |-
/k <1C60D8A8C9B08A95A528F5B0D239092632E2059D85D5C5CE40FED3B8F402
D6C34ED645BE95E05A79A2E4CECF7F3D6B8E54D242C6482856883C7238878CB6
8145CDA6> |-
/l <1C60D8A8C9B08A9545AEAF563F384DC2228E48A5DE8F50618834EC6A9283
370543991AB61F41> |-
/m <1C60D8A8C9B08A95026F9C287FEF94494F5F295BA6AA092C89C7B7C8F42A
D6ECF94DC23B657C2BEDDCAAAF73855BA7C35045977586FD8F4502D50E30528F
35706E2F7FE6DDDE87FE22397BE27204CBAC52ADB6612CE76C675529AE0C0E78
00CEF282F44050942FB389811CC45B52> |-
/o <1C60D8A8C9B08A95A31CD7D9F217A69992F44FA90AA023A397851E23C8E4
CBFCD69F4E7C3676D1839CE0A79E45A4141988EDFB3760BD3C43FD952EA4939A
C78485AB0271866C6B5494B9EB377464114D395D7CA45C9E2453E1E4BA1CE2> |-
/r <1C60D8A8C9B08A959DB77AE556B1923D6116776B12D082BADF5DB74D347F
28D8BBC405A19BD03F9240EAD5B4D10CE1E88EA4C23A53669629> |-
/s <1C60D8A8C9B08A958EAD96EA79E68C696421123C465FF383548823BEE6B0
B1D796EE93EACCAD38184BB40BAED6DACF889E709F6F51268598C5D52183041A
A0B4C8546EC8349093BF0AB0DF900BCCE0E2AD7F1DB19B2D0F599C1A61450945
CB48796545EDE5A4E5DCA108E4149E28953DC631CBB95409F3A88083E00999BE
E6A5BBBA70> |-
/t <1C60D8A8C9B08A9596B916DE68D8C5084A09F6F7CC28E2D467F61B3C384E
4CBB2539885E158BDFC5A71AC496C670DE10727BF0A213AE26DFAC2C451BE67B
4AF66EC8C9F901DC42C63A8759911A0BB39EBAAE3E8151438D> |-
/y <1C60D8A8C9B08A95B2CCC00C0CACA7ED3EA78B54591E25CC4E6A1FDCEB3C
D700CDE1F3C606D0C5AC44A06A2A8E08B513D8F94A49EB734FD6329193B24F4B
FCB108F93DD8457E52FDD2E1D96DC5B76459D2B066BB85A54422AB3DBAAB97AE
4F2C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEF+CMSS12 /Encoding get
dup 12 /fi put
dup 18 /grave put
dup 45 /hyphen put
dup 50 /two put
dup 58 /colon put
dup 65 /A put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEF+CMSS12*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave 26{/.notdef}rp /hyphen 4{/.notdef}rp /two 
7{/.notdef}rp /colon 6{/.notdef}rp /A 16{/.notdef}rp /R /S 13{/.notdef}rp 
/a /.notdef /c /d /e /.notdef /g /h 
/i /.notdef /k /l /m /.notdef /o 2{/.notdef}rp 
/r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
QKILEF+CMSS12 nf
QKILEF+CMSS12*1 [9.61581 0 0 -9.61581 0 0 ]msf
86.7934 95.7481 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[6.22146 5.23106 6.05991 4.70784 3.13861 5.23106 4.30698 3.60886 3.1406 .255707 4.18477 7.44559 
7.32913 5.75029 2.21452 7.31952 3.60886 3.40022 4.97708 4.18477 4.29919 4.50697 4.70784 7.32915 
4.83005 4.18477 6.74361 5.03004 4.18477 4.83008 2.21451 4.18477 3.20007 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: IVTBAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILED+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/acute <1C60D8A8C9B7A73DB619E39FEF98FA77355E7DD8877407E4F25142A4
A612D97F632C4B07DE> |-
/comma <1C60D8A8C9B08A9570810981675918941BEC6C7A36625EEAAFD058DA
9FD482C52B27746E5D76B78817A726AA> |-
/hyphen <1C60D8A8C9B08A959E2F69652E8B76B63AB332EDDEBB69AECBA495D
364909C21596AD861> |-
/zero <1C60D8A8C9B7A73D3B44BE74C368F4E2FC0D1E282D6B80C084CC069A0
A14712591F89EABDE27294D1768DD69DB23E7FDCDF76DD01EA2CE0CCF6F4531C
8A5BCAB0F1BE07F8191DEC09C9A3BC8F2BD2C623D1D6E463DE09FAA97A87D431
A34F6930759E9BEDE1196203F9A0CFDDAE3BE022EED71EB4AA4845FF1759BB73
5B5433870BF2F7C4D6B648D9C9DDAA0B7F47B27B9132A> |-
/one <1C60D8A8C9B7A73DC516E502D071D3E5EFB09D24340CA928DF0A691007
E1845C890D948062796F6CD87850B222F312B9A1047DDA1457E58E9699EFA460
BF3E57> |-
/two <1C60D8A8C9B7A73DC501F4900507988D419B48DDAD77641FCF9B01129F
44B2D0DA0A0D4246B40A3567725D92D14A71BEF3D15B0FCD87AFBF51EDF2E434
E7AA8140D4D28AD634F885437601AC91D4765E112CCA291CD10E37C9ADCD0B75
E41F6A87C712119256205A282F77AFDAF9159A199A13D204AE23426594> |-
/nine <1C60D8A8C9B7A73D3B44BE7BB547913A9BDE169CF47BDFB08AECD5607
99E5BC8494BE235E9ADCC03CB80F5292113DF6968D1EA7A40F55C5B9F80DEC1E
C90EFB1C279B74EA768317A0E0EF74EDF4617CB23F4C910337B8288987BD48E8
3A5C57153D99C537E1535151D97A04BE59B429AB8384BD475BB1798042991B18
A318E879D6A9C6C64FA96744223F01926110C9D549A9098592C1B> |-
/S <1C60D8A8C9B08A95C5897169EED998E3A483411C7A0F3390660D3244B230
926C536826CD5B5B7B2ADAD07DFBA69DDB5E59FEC017BE84EEE8F8A88B3F76D3
141C36DE6F631E2DE0D75823AECC86270AF5782264021D446D7F5C8F80743DE5
586CF952071F10762DE0BE112CC581D3668B9189B8CDCA398FFECC3DCC67A6D4
52B2556D4C19E874DE57221BD15B399E0687FD> |-
/a <1C60D8A8C9B08A95A7E4088C7A38B070CB5597CB6E5B5727BA22A17D0DAE
C407D8C3D3136AA342232348EF23781510C3E78954963CD307527E6A8156255F
51163D8760FA65EEBAD56EA8F7D2F06154AF2F14F168207F31B23917B20B9FDB
A8E4C1D2E16D03E0C04BF729182FBA85E7EDE81B43C3AA0ECB9C9BA27B0E7F> |-
/e <1C60D8A8C9B08A95B1F07368C45D8D4688EED3D508397A2A1B06E9E596E8
BA0B06EFF5DB68A2B2DEDDBCB7B6A7B35813A23FFFD2FE0EE478C0BFB7745A31
69762B785AFBDC923FD45580217660D52ED1B556384A2F561D47B21C6662A2D6
C7FC6E088D08DCAF0061583F541694> |-
/m <1C60D8A8C9B08A947888CD346A212481DC30FBBA5172AB33DA555892BB0D
4457537FDCBE22278A04524382B282B93AE276CEC08E722FA268559910EF4D4B
7BDAD0078C7ABF5DB8F1EE00F47BCD24C7B22C3566337374E8D52DA222B452E3
AA33BC072A7E37009D15AFC4B051AF57> |-
/n <1C60D8A8C9B08A95D5A79985A82729CAE756D0489903E93B90E41EC367F6
1A5B1D9E6565B3F6AD5D7DB5A2C3E43D0E00B470AD40C0D92976A92464A2E599
1D4AD84826F60EFFB914AFB515> |-
/r <1C60D8A8C9B08A959965E2515C2E939D32F95F06D24977D250B5BA06E866
AA828AC35B0DE74E529A185884FE51182FAA624B3FDBC3A7A2C8> |-
/s <1C60D8A8C9B08A95899606B6B06029417B1C57880E6EC5D2D6786BEDA677
1C673DCA1F1E4C0DEF808791979853B096E133BFED7F29CEC7631B543CDA3044
7AA41B7FA0F4C395215EB8E1863D34AE9393B851AFDB1E97EFCAABF875BA3C47
5E5986C14523B69201AE249C951AE0EFA42707CEBD6E1E21237369A79A3BF9EA
ECA687BB513F7892AF8337C0F0> |-
/t <1C60D8A8C9B08A9591900960B3FA4D96867B930C4350F4E0B4C1A851140E
2736CC0BCA482E4D8AAD1BEEFCDDE668980FBCDB1FA095D98D1D1D88986BF245
E52C01B70C1F43F764CB2ADCDFD2E95C5ED85956ABE04B8858> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILED+CMSS10 /Encoding get
dup 19 /acute put
dup 44 /comma put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 57 /nine put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
reset_gvm
/QKILED+CMSS10*1 
[19{/.notdef}rp /acute 24{/.notdef}rp /comma /hyphen 2{/.notdef}rp /zero /one 
/two 6{/.notdef}rp /nine 25{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp 
/e 7{/.notdef}rp /m /n 3{/.notdef}rp /r /s /t 
139{/.notdef}rp]
QKILED+CMSS10 nf
QKILED+CMSS10*1 [7.31203 0 0 -7.31203 0 0 ]msf
119.972 121.36 mo
(Semestre2,ann\023ee2009-2010)
[4.06258 3.24944 5.80871 3.24944 2.8027 2.64037 2.49857 5.69165 3.65602 4.4662 3.51421 3.77808 
3.57333 .204742 3.24945 5.68436 3.65599 3.65602 3.65602 3.65601 2.43709 3.65602 3.65601 3.65602 
0 ]xsh
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/acute <1C60D8A8C9B08A95D352586DE3156C55B1A274B2B72074ACB3903962
4978106F4737D468B4198AC90A3326> |-
/quoteright <1C60D8A8C9B08A956F7E0F548729E2FA763C265958B9DA7B050
0066C45A87C3F8E15577349AFD033CCE98CCDBF78> |-
/D <1C60D8A8C9B08A946548FE93FF91E282ED17DEAD31FDE2451ADED7697DC4
55BA37D4A0011E496FB88E2D4E659921E48B691B21676F09C1E48C65F2108F85
426A91C8DCB87E04ADFC5429F8CA89F79B65DC2D687A1A879A> |-
/f <1C60D8A8C9B08A95626B58A6B1237965053973B8FB404709A89F375E9156
15E158C393BA01B95E846CF870F30888327DD24AE0FEF9D9DD698B73315409A4
3DA7F58A531667197A4326089196F7D6EBC0991D4E4B4C> |-
/n <1C60D8A8C9B08A95CADB2E0FDF214E965EEE6A31BF07513AF3D24D78824B
3E6C6ABEE9F370367376A7CE04A537C7A0001D37E4BD39292215E9D356226EA9
131646E85A12A1282CAB5B15ED> |-
/p <1C60D8A8C9B08A95CADB2E0FDF213E194EFE9C5721793A8C4A31F32BF61F
1B061CEDFBA7A2A7F80C89BFF07169513B0D9A5554574E5738F756CD6BE1B124
8A1D06C7A9486EB4790E66CAA5C36015335552CEA014F3B01CB6E7E9390FF90E
30A2EDE296460AB8904D74521BEED3> |-
/q <1C60D8A8C9B08A95CADB2E0FDF213E194EFE9C5721793A8C4A7ECA886C7E
A49D8F15EFC2C48728D54EBB21736441730DFFD5992519AB3166AC886DBD7D45
D1BE0862F1D07E826CA115CBDF0AC0034605824F3D60E40D5A8946B25064FF57
6914C7131DB2D6> |-
/u <1C60D8A8C9B08A95CADB2E0FDF2144E002D2CA061C4CDFE79D376BF1561F
916FDEFDB49FCED5C79273B645176822F2A7DD613F126518702594614D6B1CB2
6F0173F3C758B36818FBBB16> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 19 /acute put
dup 39 /quoteright put
dup 68 /D put
dup 102 /f put
dup 110 /n put
dup 112 /p put
dup 113 /q put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen 4{/.notdef}rp /two 7{/.notdef}rp /colon 6{/.notdef}rp /A 2{/.notdef}rp 
/D 13{/.notdef}rp /R /S 13{/.notdef}rp /a /.notdef /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u 3{/.notdef}rp /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [5.34211 0 0 -5.34211 0 0 ]msf
132.474 137.336 mo
(D\023epartementd'informatique)
[3.93924 .16185 2.52254 2.93068 2.56638 1.93866 2.04976 2.52252 4.50766 2.52254 2.93066 3.94087 
2.93068 1.57648 1.3542 2.93066 1.73463 2.6833 1.93866 4.50764 2.72665 2.04974 1.3542 2.93066 
2.93069 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B08A95D352586DE3151F1504BF89266AC83A1328ECECBA64
A344731E64412EA8E81B687F45A13EB28BD606168DCE429893D6F9884C6358B3
E87E404A303C20A8DA> |-
/B <1C60D8A8C9B08A945A1AB9ADE1431F2BE33DEB2B07027F8D31B59BE9D5E7
8EFEB2D52569BFC4356EDBE9B81048E925EA1D6720393F215414E436CBE9B76A
A68D71488BC2A7927F7DFA96AB813BD4BB5A5559B50EB874AD7D5AA092A7776C
6BCF1419F48D10811192E01527739F9376A35BE5DFB762F1BA394C> |-
/I <1C60D8A8C9B08A956F7E0F548729919A937A549A13096CE92A95B565EF87
D1085274A9E46F61> |-
/T <1C60D8A8C9B08A9500EA96090FFCE1279362845AF36A891DD30BDCF505C2
B811B8526F864E813AE046EA590E9ECE9CEFE68B52F0C15481EB81B0E4A47954
BAC9FB872865> |-
/U <1C60D8A8C9B08A9452E115893F9BBC126CA6D3D8A2A2E6A6E90377036946
7444797F3054BFD01815A906E52946CF6AAA5CF53FFB9D9CFA10FFA45631D5A4
8F4A7B4C44972EB9B3056E6C56D4C335> |-
/x <1C60D8A8C9B08A95A31DE9FFB66A152398A4480AFC8647F837FC3CE71EF6
79BB97C3A3EEE25F59581EE3667B04DAC39B08A7F49E7AEECBC51D080D3AEB08
2774A078F44F55C301> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 49 /one put
dup 66 /B put
dup 73 /I put
dup 84 /T put
dup 85 /U put
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen 3{/.notdef}rp /one /two 7{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /.notdef /D 4{/.notdef}rp /I 8{/.notdef}rp /R /S 
/T /U 11{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /q /r /s /t /u 
2{/.notdef}rp /x /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [5.34211 0 0 -5.34211 0 0 ]msf
145.83 143.679 mo
(IUTBordeaux1)
[1.57649 3.89548 5.76782 3.78381 2.68332 1.93866 2.93066 2.52254 2.72665 2.93068 4.50656 0 
]xsh
true set_gvm
%ADOBeginSubsetFont: IVTBAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILED+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B69E59BC73D93FC5A356A227E17EA9C31EFFA71275C6B5EB76
9923CE4FA51C8A1EAEED0428CE577507A9116D4E93C97EF19E9F9C7938C83656
342A6195D2BADF02DD8FE47428F019C292D90E07E4319371C83FC96B01EBE161
D7AEA1A5C028EB3560F099A0C07EAACAE48658B786> |-
/i <1C60D8A8C9B08A95414C3FF7328CB21E74879F707A294CE56FA4856D5579
AC24D99BEF447D92E629D8CC408E6D9D7B0F2DD90AECF9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILED+CMSS10 /Encoding get
dup 77 /M put
dup 105 /i put
pop
%ADOEndSubsetFont
reset_gvm
/QKILED+CMSS10*1 
[19{/.notdef}rp /acute 24{/.notdef}rp /comma /hyphen 2{/.notdef}rp /zero /one 
/two 6{/.notdef}rp /nine 19{/.notdef}rp /M 5{/.notdef}rp /S 13{/.notdef}rp 
/a 3{/.notdef}rp /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n 
3{/.notdef}rp /r /s /t 139{/.notdef}rp]
QKILED+CMSS10 nf
QKILED+CMSS10*1 [7.31203 0 0 -7.31203 0 0 ]msf
150.52 160.109 mo
(Mai2010)
[6.39803 3.51421 4.18181 3.65601 3.65602 3.65602 0 ]xsh
grestore
gsave
325.521 208.019 mo
568.719 208.019 li
568.719 25.6211 li
325.521 25.6211 li
325.521 208.019 li
clp
325.522 208.019 mo
568.719 208.019 li
568.719 25.6212 li
325.522 25.6212 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
486.316 205.147 mo
488.587 205.147 li
488.587 203.545 li
486.316 203.545 li
cp
.320134 .301427 0 0 cmyk
@
483.455 205.346 mo
482.114 204.341 li
483.455 203.336 li
.142977 .132937 0 0 cmyk
f
491.498 205.346 mo
492.839 204.341 li
491.498 203.336 li
f
499.986 205.682 mo
502.257 205.682 li
502.257 204.079 li
499.986 204.079 li
cp
500.54 204.073 mo
500.54 203.537 li
502.819 203.537 li
502.819 205.145 li
502.283 205.145 li
501.076 203.537 mo
501.076 203 li
503.355 203 li
503.355 204.609 li
502.819 204.609 li
.320134 .301427 0 0 cmyk
@
497.993 205.346 mo
496.653 204.341 li
497.993 203.336 li
506.036 205.346 mo
507.377 204.341 li
506.036 203.336 li
.142977 .132937 0 0 cmyk
f
.40066 lw
515.882 203.671 mo
517.893 203.671 li
.320134 .301427 0 0 cmyk
@
512.531 205.346 mo
511.19 204.341 li
512.531 203.336 li
520.574 205.346 mo
521.914 204.341 li
520.574 203.336 li
.142977 .132937 0 0 cmyk
f
515.212 203 mo
517.222 203 li
515.882 204.341 mo
517.893 204.341 li
515.212 205.011 mo
517.222 205.011 li
515.882 205.682 mo
517.893 205.682 li
@
529.75 203 mo
531.761 203 li
530.42 203.671 mo
532.431 203.671 li
530.42 204.341 mo
532.431 204.341 li
.320134 .301427 0 0 cmyk
@
527.069 205.346 mo
525.728 204.341 li
527.069 203.336 li
535.112 205.346 mo
536.453 204.341 li
535.112 203.336 li
.142977 .132937 0 0 cmyk
f
529.75 205.011 mo
531.761 205.011 li
530.42 205.682 mo
532.431 205.682 li
@
544.287 203 mo
546.298 203 li
544.957 203.671 mo
546.968 203.671 li
544.957 204.341 mo
546.968 204.341 li
544.287 205.011 mo
546.298 205.011 li
544.957 205.682 mo
546.968 205.682 li
.320134 .301427 0 0 cmyk
@
560.434 204.609 mo
561.506 205.682 li
@
.267102 lw
560.608 204.012 mo
560.608 203.567 560.252 203.211 559.807 203.211 cv
559.362 203.211 559.006 203.567 559.006 204.012 cv
559.006 204.457 559.362 204.813 559.807 204.813 cv
560.252 204.813 560.608 204.457 560.608 204.012 cv
cp
@
1 lc
556.144 205.682 mo
556.869 205.682 557.485 205.078 557.485 204.341 cv
557.485 203.604 556.882 203 556.144 203 cv
555.407 203 554.804 203.604 554.804 204.341 cv
555.608 203.939 mo
554.804 204.609 li
553.999 203.939 li
564.188 205.682 mo
563.45 205.682 562.847 205.078 562.847 204.341 cv
562.847 203.604 563.45 203 564.188 203 cv
564.925 203 565.528 203.604 565.528 204.341 cv
566.332 203.939 mo
565.528 204.609 li
564.724 203.939 li
@
325.522 32.0759 mo
568.719 32.0759 li
568.719 25.6205 li
325.522 25.6205 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
331.221 30.0731 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83786 2.36511 2.75452 2.12869 1.41916 2.36511 1.96161 1.6319 1.41711 .121368 1.89191 3.38077 
3.31024 3.07349 1.01566 3.31024 1.6319 1.53732 2.24887 1.89191 1.95966 2.04501 2.12866 3.31027 
2.198 1.89191 3.05426 2.28134 1.89191 2.198 1.01566 1.89191 1.45401 0 ]xsh
325.522 38.5313 mo
568.719 38.5313 li
568.719 32.0759 li
325.522 32.0759 li
cp
.870573 .840909 0 0 cmyk
f
.266767 lw
0 lc
332.691 35.259 mo
332.691 31.9204 li
1 /0 /CSD get_res sepcs
0 sep
@
332.824 35.1256 mo
336.163 35.1256 li
@
1 /0 /CSD get_res sepcs
0 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B08A94477239F1F27318AA105E20D30BA187A0E862CBD656B7
956951B0DBE674034CE3835FACBA0A9C8AB99404F91F0EA3ABB1090546BCF9AB
5CF5FEE72E2EB7C6AB24F8A3CB8062472F57D4C5AE7D1AD008922FF72C144A53
F1B9> |-
/L <1C60D8A8C9B08A95FD60B90C69095CDC7DB8AAC4F25A47F53DD5F184BE9C
50ACDB4A3ED7B6657FC9B4BB19813CB0B408721A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 67 /C put
dup 76 /L put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen 3{/.notdef}rp /one /two 7{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C /D 4{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp 
/R /S /T /U 11{/.notdef}rp /a /.notdef /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
336.831 36.5278 mo
(Chapitre:Les\014chiers)
[2.7197 2.19803 2.04498 2.19803 1.01566 1.53732 1.45398 3.31024 3.07349 2.31619 1.89191 3.05426 
2.28134 1.89191 2.198 1.01566 1.89191 1.45401 0 ]xsh
325.522 44.9859 mo
568.719 44.9859 li
568.719 38.5306 li
325.522 38.5306 li
cp
.539757 .507073 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/fi <1C60D8A8C9B08A95D855C9725D4CFA41B3670F64FA6F260B522D2ACB21D
74CF2728BA02FA6AEAEDB55E6C954C51D8B8D0C71CD915DDF2362D4A4BBDD830
9CDF32F51C9326BF4A2D4F7E3371EF9D4C4383142EA810F5EFC78D0A812ED396
1CFAC437EA6BFE5D4C1E524BBABF62C6DB6B6C3> |-
/quoteright <1C60D8A8C9B08A957A19FDFDED31E8B6D5604256080D70C4F05
DA5DB4B53D3D50B8D710E0CBA555D3A457FCE77E6> |-
/hyphen <1C60D8A8C9B08A956680E0FDEF79574E733C4E4289093837964A518
F1826D9CA1AE096F5> |-
/question <1C60D8A8C9B08A95B11B341112A8227E515B3197E298BAFEE5EDB
81C75540773D8EDCB1B29587148336DDAE42C41CA1A0CD65AE2E1E1F3CFBEC48
3EC1E6C89500CD8852B035366102D5F0FD3E36C12F5F440B492C821E45280711
0DBFA39B50F86A1279A2E0EEF0839C11B20F406B0AC> |-
/Q <1C60D8A8C9B08A944017D3930B6A932413AC63C4298D316B5456423C93C4
EAD73F1841315A7817DF2519B49888FB615F6B272574D82E376E1B7A11920E83
38242A5D102AD0924DB6EA08F6E22C8B913794822CEFF0D028830FB511075568
D78D1BB59B68F95BDB9F40D204075C314EAF0AACAAA2818FE8F7A25021E6B192
FF162814AD9D518A3341> |-
/c <1C60D8A8C9B08A95BFF5F9CB9DC735B4BF492BD6C4ACE2C918DFDE4155F8
BF0BB526A8529B61513B8A9A2B09DCF509503F32C993B8F429DAF4C14BA63370
2887A09F97325B72F38FB5FCCEEC0984DF4044FE8FD21AEAE35668AA5028BD0A> |-
/e <1C60D8A8C9B08A95BFF5F9CB9DC735B65A82C7912C32AF2A3C95F49F34FB
58CDF55E48248EAC53719777299F50B18877991AE38B586B3F34F3F7892FA00C
A002E58886CC516367CF3D13DC263C0A5D02CA6C802ABE18599531290097133E
B0E60CDA731FD76ECB51DE9213F945FE0FA7BCADD1ABA31F826D> |-
/h <1C60D8A8C9B08A95A187A4CA88055D9D145FB4AFF46087F002963B4D0545
F082E7F9DE4E88B9AE041659DEDA4681362E3BBF6E95C94F02414F5DCDAF25A4
CE45487E0F6CC009A9CCE27CE0F1A65D3CBE> |-
/i <1C60D8A8C9B08A954AA63F6A570CEA7457497A048CC9226C5496B2303131
BE4AC3AA21DF6D8E6A59E7CBFA2B97C530AEF184E6670C> |-
/n <1C60D8A8C9B08A95A187A4CA88055D9D145FB4AFF44C47C76C06499BCBFE
CB59EB19FB8B73D5A3DD038C059B5F106ED75322B7B3C4D66713A1802641FAFB
16274DE02001FFA997C8364737> |-
/q <1C60D8A8C9B08A95A187A4CA88052DDE2B044C1B132D90807D51EFC92978
B05836A0EC046C51718C6277DD2E6B1833E7F82965370F16A3E24DC2E5FC4B45
F34F023A74DDF4D0174E4D3BD9A9AB0975D6E9C49F1994E077D56103B1007906
A535964992AD781C7369FE8151BB> |-
/r <1C60D8A8C9B08A9561F7EFAD26D85F42EE283AB44DB8BB436DBB106877EE
581750E7655D5E1D37F3B1565ECF0A16FAD7EF9061395CD0D831> |-
/s <1C60D8A8C9B08A959000C1BFBCEB809DCE4238680B00797FFDAA83B4F0C0
1D5C2C09868E1ECAA23C42611E22B1BEDABE4DC7255AF2FD199ECA139ABAC098
FD34D31D8E38718DFB5C3A68F9F9C36540588D03B0C82EA3637CCD230B657B0D
8D21D7DD789FCCD168CFF9533C79ED6A3A6132C30D0A392228BD5F6FE5> |-
/t <1C60D8A8C9B08A9598E2D1DC45A4D03323D19974BC4344EFF06365AA0DE7
BC25DF06599BFF2FA576243E2AF5831A417BDD4B16625396A6B5268E00A5202E
4E12EF442D84EE4E9B8E90DADE834F753C31254C73C771E0E0> |-
/u <1C60D8A8C9B08A95A187A4CA8805550FC3CFDC67A0D4D8DA1CAA6B485C0A
F3C1D87B6119BADD14596E6B48F031A387D1204C090A4E4414BA44EBF4A94379
25E7643E459CAD6B2CD45DE0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 12 /fi put
dup 39 /quoteright put
dup 45 /hyphen put
dup 63 /question put
dup 81 /Q put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 26{/.notdef}rp /quoteright 5{/.notdef}rp /hyphen 17{/.notdef}rp /question 
17{/.notdef}rp /Q 17{/.notdef}rp /c /.notdef /e 2{/.notdef}rp /h 
/i 4{/.notdef}rp /n 2{/.notdef}rp /q /r /s /t 
/u 138{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
381.366 119.673 mo
(Qu'est-cequ'un\014chier?)
[9.59479 6.70178 3.61746 5.78757 4.9928 4.70325 4.34189 5.7876 10.1363 6.68793 6.70178 3.61746 
6.70178 11.0505 6.96762 5.78757 6.70175 3.08286 5.78754 6.61029 0 ]xsh
1 /0 /CSD get_res sepcs
.5 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/slash <1C60D8A8C9B08A95D352586DE3156FEFAED02E8A09FBAB692AFAD0A2
0D20463164145CE10F61A0161D4F8A54D40912E269EB15C10F67BFFC37C5AEE7
3165CA021021CAEAF1C0EABA52B68361> |-
/zero <1C60D8A8C9B08A95D352586DE315E2D13A8D265809DE9182CF1DD01D7
69A0ACC5997B407D66C78B4BB6CDA6C76FFAEA6557BF8A6278A4AFA970BB680B
F26D3DEACF604101C04DF30B101DD6D309F0CBEE7A248E64246B380B8EAA365F
1C7F1B0DE034508C460CE4CE15E31CEFEFA3DFAFF9DC3B2BFE1564D4957D50BE
9609185AE3AC9A7F67FD67DC16EE6C929> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 47 /slash put
dup 48 /zero put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen /.notdef /slash /zero /one /two 7{/.notdef}rp /colon 
6{/.notdef}rp /A /B /C /D 4{/.notdef}rp /I 2{/.notdef}rp 
/L 5{/.notdef}rp /R /S /T /U 11{/.notdef}rp /a 
/.notdef /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /q 
/r /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
554.528 208.353 mo
(2/10)
[2.83783 2.83783 2.12872 0 ]xsh
grestore
gsave
43.2816 394.139 mo
286.478 394.139 li
286.478 211.741 li
43.2816 211.741 li
43.2816 394.139 li
clp
43.2815 394.139 mo
286.479 394.139 li
286.479 211.741 li
43.2815 211.741 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
204.076 391.267 mo
206.347 391.267 li
206.347 389.665 li
204.076 389.665 li
cp
.320134 .301427 0 0 cmyk
@
201.215 391.466 mo
199.874 390.461 li
201.215 389.456 li
.142977 .132937 0 0 cmyk
f
209.258 391.466 mo
210.599 390.461 li
209.258 389.456 li
f
217.746 391.802 mo
220.017 391.802 li
220.017 390.199 li
217.746 390.199 li
cp
218.3 390.193 mo
218.3 389.657 li
220.579 389.657 li
220.579 391.265 li
220.043 391.265 li
218.836 389.657 mo
218.836 389.12 li
221.115 389.12 li
221.115 390.729 li
220.579 390.729 li
.320134 .301427 0 0 cmyk
@
215.753 391.466 mo
214.413 390.461 li
215.753 389.456 li
223.796 391.466 mo
225.137 390.461 li
223.796 389.456 li
.142977 .132937 0 0 cmyk
f
.40066 lw
233.642 389.791 mo
235.653 389.791 li
.320134 .301427 0 0 cmyk
@
230.291 391.466 mo
228.95 390.461 li
230.291 389.456 li
238.334 391.466 mo
239.674 390.461 li
238.334 389.456 li
.142977 .132937 0 0 cmyk
f
232.972 389.12 mo
234.982 389.12 li
233.642 390.461 mo
235.653 390.461 li
232.972 391.131 mo
234.982 391.131 li
233.642 391.802 mo
235.653 391.802 li
@
247.51 389.12 mo
249.521 389.12 li
248.18 389.791 mo
250.191 389.791 li
248.18 390.461 mo
250.191 390.461 li
.320134 .301427 0 0 cmyk
@
244.829 391.466 mo
243.488 390.461 li
244.829 389.456 li
252.872 391.466 mo
254.213 390.461 li
252.872 389.456 li
.142977 .132937 0 0 cmyk
f
247.51 391.131 mo
249.521 391.131 li
248.18 391.802 mo
250.191 391.802 li
@
262.047 389.12 mo
264.058 389.12 li
262.717 389.791 mo
264.728 389.791 li
262.717 390.461 mo
264.728 390.461 li
262.047 391.131 mo
264.058 391.131 li
262.717 391.802 mo
264.728 391.802 li
.320134 .301427 0 0 cmyk
@
278.194 390.729 mo
279.266 391.802 li
@
.267102 lw
278.368 390.132 mo
278.368 389.687 278.012 389.331 277.567 389.331 cv
277.122 389.331 276.766 389.687 276.766 390.132 cv
276.766 390.577 277.122 390.934 277.567 390.934 cv
278.012 390.934 278.368 390.577 278.368 390.132 cv
cp
@
1 lc
273.904 391.802 mo
274.629 391.802 275.245 391.198 275.245 390.461 cv
275.245 389.724 274.642 389.12 273.904 389.12 cv
273.167 389.12 272.564 389.724 272.564 390.461 cv
273.368 390.059 mo
272.564 390.729 li
271.759 390.059 li
281.948 391.802 mo
281.21 391.802 280.607 391.198 280.607 390.461 cv
280.607 389.724 281.21 389.12 281.948 389.12 cv
282.685 389.12 283.288 389.724 283.288 390.461 cv
284.092 390.059 mo
283.288 390.729 li
282.484 390.059 li
@
43.2815 218.196 mo
286.479 218.196 li
286.479 211.741 li
43.2815 211.741 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
48.9815 216.193 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83786 2.3651 2.75454 2.12869 1.41915 2.3651 1.96161 1.6319 1.41712 .121384 1.89191 3.38075 
3.31025 3.07348 1.01566 3.31024 1.6319 1.53732 2.24889 1.89191 1.95964 2.045 2.12869 3.31024 
2.19802 1.89191 3.05424 2.28134 1.89191 2.19801 1.01566 1.89191 1.45399 0 ]xsh
43.2815 224.651 mo
286.479 224.651 li
286.479 218.196 li
43.2815 218.196 li
cp
.870573 .840909 0 0 cmyk
f
.266767 lw
0 lc
50.4507 221.379 mo
50.4507 218.04 li
1 /0 /CSD get_res sepcs
0 sep
@
50.5841 221.246 mo
53.9227 221.246 li
@
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
54.5909 222.648 mo
(Chapitre:Les\014chiers)
[2.71969 2.19802 2.04499 2.19802 1.01564 1.53732 1.45399 3.31025 3.07349 2.31618 1.89191 3.05424 
2.28135 1.89191 2.19802 1.01565 1.89191 1.45399 0 ]xsh
43.2815 231.106 mo
286.479 231.106 li
286.479 224.651 li
43.2815 224.651 li
cp
.539757 .507073 0 0 cmyk
f
103.32 338.303 mo
226.445 338.303 li
226.445 256.533 li
103.32 256.533 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 792 ]ct
[123.125 0 0 81.77 103.32 453.697 ]ct
snap_to_device
<<
/T 1
/W 131 
/H 87 
/M[131 0 0 -87 0 87 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gau.RF`a/<G36E;,W"1aWN&qAbZo`41G^gC@u6U">F$kIgNFOiG+741Gc2/8S0TJMH]q,YJQYS4gds8h
R2k,_IVq/o3[\'Sh6lYm^\*#T.RDU6hIf(MrB>S-0)*FZA&5FpQJthUgIok/[$I7cD^di_hGWIAd8oYH
hGHkLdS]$p=Di$_pblpLm:Y!"3dfL/]6lQ<]D^@H])5WF3dd8D>#3J224Zke5/:C*C\O<tBKS:^h0aOF
YruKoY0E<''B].3:X&Op*1u[K3477Cm6BK.k<IYJE+YiYdq>Pg-YT`sp%Up\O5Eo8<rdMn]Xe$k9RDcF
CfeTDWK*,T9?lii'MWHD9<IkN$gk@99:]X,p6b<Jn>0IGdblofhr-@pf6,)32rm201E/G_3u9YZ2]DT9
0ip.J0OHm]86BQl$s7?4$<V%[o\X/`XXdqCjn9`"@AT`S\]8VQef.4`lfqu`FnKe^)neBs_H("cT5^rW
5d9'++=<WI)jFUo*i@TW)3J1l)3J4houIHkH7"l0l_>^$)e1,4Rq!N2>8&($SZrJO@_XiVmN=Xa9K<FJ
:5h3*:6(+E(nZ\53AKoM3B7aApips-nrm3PoV_;PQouI[CG5?@hc9)kY,g">ChJIj=fhMRcJ!fNY%iI'
>$"u0@C<ErkhB?Y)Ii.l%'m>-qEq],qgu6pH@jI#oeEmZqEoI1#J"UZSUm7^h2JJE?5?rOcW;&H!f7s6
CYO7!qf>OG4j8$0*h.%#4c+;F1Y^LI5Mt&4QuDG+Y&oX0Qb(33$QT>CEuiMVF6u[&6nc<O"k:@t;leeB
9<HNf>E'0@^e/g]cY?70ha27X07eL(q3c;@_lUDW8^;/DWaNPP<Oc!mcMS2en@W2+V3aJMlY6mcA$<WH
>2qbPfD=7'GPC\eH3OMA]gG-'<o9#6lp/=AYWXrgfcD&n?5ONF&M=QP-jZ1:4\ET!rc'g7^kCkHi.V)!
s-2rRrb2J6s/h,4)r])l\F].LPj@2e<;;*FaU#cDM4$oOe#A2FkL1+4pEsV55+%d5pi(O3Omq'%=<-:X
`UUlf:$&9sg8]NRp/VFcp=9@RltU'9k\:C[l"Oa9ltHnlgY'^lCj!*@#oao@XDbGq;=8M>]?:/j@!0Q0
Tk_SjDb\SJB9h@P>P4E'k/u./%5k%AHeV]arN:6cKZml\aQI`LImga,)-&8LG7)r6H=]aE,I6"Z1&c:h
]P+JFS7])&Z=L3;6:bJRQ,)g>$bee"=8dlshI]O55*O5JI]-Iarlht+qNYiE@*Q2932^'JRo?K^%uZd#
LBPeK*N\AZ%OPVh].KC8F>_r2(-:2,adQq6?r#<+18ek&(i+!+m,,cso/MN0hDW6IkSW9lAq7583QTtA
lK&RJIJ4k,rcYF<l:lhZ)hGZjm=A.1p7OoA\2_nag\(1h#a[XUb%i6>RVS\9=oqju2hsnGKNgh(L>,'/
-Gl>4$1lmr;c^cKfcf\[fjXb>diR\i)3=+BX=*qngmJ!'bQPoVRAjl:#Lh_\+3mR"IPO!Mpt=GEdc^5N
.>0@@4\=O8oqZtRFY%[IV:+O97udPFr`[=l_)g/DSn?Pk:D;bt?Q4@$YDomEe]oA/lft:ukj2`-S"6/9
^l*Uu_7N&l/Ad+WHKItP*V4)s@gHMD\".qe\5,_=cs9JP^EtCnesTaLDlgP/KVtg>oK[32nYq):T\4mF
mR5)LF/j#A5L[.h+08]XW_43oOCDpX3*e,SBc8/6e-YC%DFc[m;s2j-IbJK&JBq>GO5E@S@*i^[04V_C
JA'aqa^,qMiY"/(HA(U:h1F26;:0.![!8Eq?F&?M04&DMPRu^$qE(c9:JbkNG_FsdX)"*^Cj/,*kPoGe
^SsGsrO;+-1GksQS0&[$&2'"QW!QPFL3/)eHTpE>ka:V#BABdos1>%)2T!/TBa<V5r32CSD&p8N58!L7
FukZQ@V.[h]t*D&O(P<L5G%a(*Me+o30UVFK-.0jA=[Wf7kI^9?gXh&>jlJ'[p!J6?kUbnos#rLLH0\m
hqMGY%Qlh:G'[jNmJ)'Yb)uLNgf#_pMSQ?N7c*i<[qs=</RIc_jE4GQ*KIPJJlZ=^Mol@b\p/0Bh-_t5
6@;09UrTsl1L^U%MNSeL=(bf">+Dh/5L-c09/c4bP4b/UWJ6lV$*'KQQL$r&oFd8WOcD<8=RVttWd@)f
e$h_"eN\q;)IcFLp4pk9GW><^,OB^B%>:S?EV=/%,]C)%6+#4S.,O0%@t'p?m]OoTZdIOPTmHPoCOW$o
9_;P:`s[>h$cmP"Yc!7>/R058;!i8Y1T7kC):I=\)`#&`12=>\))^7lIEgLfO88/tO6+4AKU)&PkbNk#
A89alGWI_AGW%A;H9!u$L*#:PL?O[HVMH>4'2SCNH7%nJR@09mBBR^WS=<0$UP6,GbjC_%1DeaqIBRbC
#%-bsVfY1<!W)uH_fgAgK<Wtr2d6MSpE4nSdV;P(L#jlcmFf.&Mi.bTgN2K#[B[lIZ*pB:h3Id@Wj5N:
jXHV)UkfjA.kRD0)8R`1JOpU])PIVYP&O7>&j\*B"dLJT9Ss0r)g`^MhuSUL)"d0'YR0I-.9Zhc?j5o0
/Vk*JJ8"0^MP9_YmV(2lGG8kA4PdUt,?gHRRZK/qNen#l]p#aeSd>_F*K-I0*mqi&o2t4(r=!JUDMl!U
h9,LNX'M:?Dt@-?h>c1:3^#gHs'%)QHbEk6+0LUq.k&-,#GMC=D8NdSE.;ErN?/A?9+*C-,Q<2@6;PUX
$No([Y)MH;>p%6#\27G3Zo_M2G\O*+jRR7)o6c%)#[sdCPt<+3T<Qol-:^_T&8")5_/&Wo_W?Im`TU]"
87c4dG?dNKBN5Y;;oXGUOToE?!B>1$&8>j/BM1G*g:G(3S-#I/$oEhR:e:mh(SdX):4cJu[F]>I;gTQ0
N4UpYqCJS!F/Y?U89!F^-b:@DKc@0[Qoc$,@Zqo]4p06]F(hD('jclB[>0*tH[UX[])p$bqAD);=P&+Q
_8bu+Pc=o<K[bk.OBVP[c&@.5c+\?ZiJf1udDC4MUhBjWcL:$+^Pi-,[.%mJdRAC82Arq^,ER<JEdTV#
rUIj;_?Uat.3FPOVLCYAQM/GQB'(HSS(XE/SB_"Knne;<X4(3BcKFLLH09N1:[ASRSA$bImn^<0H*f,U
k[@6pV"YP2qV"7bYl>C1Z;YM4(>P#b#]n'0/kQLSl&h'uSd<^UOe>WW_.??XR\k^CQO>Eo);)?^W/G-O
'3,TUBRHQYPBI;ZkE.'pl5%0H3"+.-/!L7T%D2E3:!cP"+YD\Zn$^BRj7YD1Dfo"#T/4sE9BgH<))Oic
*,&"]:hU8n'(f?`QqR\i1YX$,_?lKAl*Tlanq5C#XZg:pgRJ"8$gc.;(=p7DDeYo#pVmkC#DCu7o/Ce^
^AISI1W/\0_-W1IlT70&[MJR_"Jp\<k^^k`V#H#X-^W9fPRb^b15HDg%3V9=Sh8[F_&"&s`>9n":0m?7
S_0LSoXQuS(OUY)KXEmA&9N)oe:2PD`,B:iJTH"EQ8.9"lUTSGl'%VZ+4?+u2k;FT:W@N!r=*b>;FH.B
*"-da.OZQ&TU(mq;Gn!"6P%*rk%HK8-(53WD:?^<D<J^5Qj0\^,(s\!6_*6ec(m<0@fA3;>BX`6ac?sE
VVKjs&9H.?m@L*+*J:#o1kEs-#UX0d\0?8C.^"[FQ5C!iph6m"KnCg($nMu#0Y+Cm=fl'c>>PhWLl$/(
66lYc;@4\QOrQ:0>p$:*eh/*:"drEuHS`]?DaWIJ:i5^u83LI"TS5g:*G>gdmHNer?F/';:?><h^Zc9d
d0"ZAB4P7k@<B@WF?glp)Rqa^Xs\P*0J]`@2!-N!RM[hf(`h#j%XYQa4QE=)6PG3t]cR!OZ.Z?c@l)Eb
Sq#i35'Cjd+mbe51#h`mV2TU&cGpS>%pr"W4E)P*@K3ab7t#<P5977<FMI!B_UH?5,nKk?B"pG*[.28b
LFque4Xo/J5+I#$k4\;`Ukb/CldpGm%UPYr5"W,cesgc+Te#6o`aIB>o:tD54._=kotF&uo:u!F$WB42
F(:c8nYY$(e`j'?,`<<[E"-!08[#r=BJuZ:8Ws0%lifjq)47gSTMs@u3q'l@0F0SE#JGTk*;ThL"fuJ2
!Q?WE9!:O6r]VU;*mnI;[qQ-\GN`0Y%hI`3gcno*qqtRop=4de#qK>ba?D:[><lmR#FVG/,eAA"3@uA_
Rm:jIJ^e-/V-+=44L[DBi!R@qU<u5R9GeVs>-R9l0\Y/uEbhCJ1>?*t^G=HY>j3:F/9_WrQF_f1HZR6i
8/lJW[%=Z`<#;itIH!,dN90JV%b^0@o[#<]n[l0tD*@6"JsrCJkp*BEa`0IPGAL5SoRJ@2naabgrp&.3
jlYccNGrH:6??^V:BC.Yf#Y4Pk[@6p\%C6CGBu0<HWkYLn5eD0_-7(=qX<K0m^o%]rlD]gc\CkQ?#JBD
?"pjB^X73Lr2o\IdI.RZCj=V4XSg2a]rhSRf1V^\hX@(Mb<*<"WFg$D2Y3pB511EsG-YC9gX."n<`F78
\Y*D]:MIjH:WimYdlPUPc"u2XVMthE`!m<E<6TiOhp;^V8I+BF;Y(K>W2IJ7Sck6tQE#:bq(+,?H@ZiM
^I:e;^$QPE\P@3Zc9do\%]FVb+j,&%<hB!Wag19Z:F;eP3340iak?k1FZtW3)'IKV+Ao<sL4R8[:*DCF
5\>1kg(HcHeAYmXL^(7J!OTF+Lj,1OH%+q-PislkgQ_j-<C8.Rqr^?LD50D7>na<9[WBUEk&nLNr;q&?
BoLc(>3P2WSa1"sRd$jG>odfl&lqgV"L<N^dQ]9dm[b%)^7?9ok:DI4hp]VPO4_ndjVK`E@@O$URZ68\
`S%M1o=9\qldk9qmbI<=ro1k*f]CL,-fNM;P(R]Wc``?]LKtp)F^H4tNOmO37Hpqj+4]96rHZr$N\</j
FF93kU[.5tCL'0J]@?h4j@d2$/m2t7hqSpPFJ-K2k#EH\kuAHQleR]9F0mB>o3bAfg8XMAQ/facg]#@u
jaK"VKuZ^Ko+$bh'HUO$C^aGbW"3dic([:!H3i!Q^o>6ick$B.ep*"dcdsA%"H+fLSEL2iGpaG?*FP+R
icu&::^[Di*&F6u#f#Ob/_5)r(25d!Zg1]?$T<QHJA(sN;Vcpqh0irhqV.+NkuZ,&o<5a:49(58.-K1/
R+PiY>[%JS>o$!'8K]b+]EU5YoKWtUlsL*["a>>X/N0Sak)LnoZRqHjJP$pn"._Njl1)7<rQT,O<CO"p
qjXI7Ak#h.;hL"NRGh`%9%T)@WI8!Wd'b*%BV4E?OBJ?^Qa8a*c.a(NjfOS%EsUjm[D?aT"7bZlLh*?+
>"8;T*n0TK#'*K+-&bXSG!/dd4c^^KJnT]44Oeq%GCCk&ip:,2H#.888p+io-2+WWfgWD+^?WEnYo7t1
E[0iBbZ=SpZeKbLkI-:m=s&H*Ck!A0<VJa;;g9I1[ce?6]C)X9Fca2hqYd5W[NEF@f03'@`iU8]O.>mG
NF(75Zp8_0m[WgIO!!-6S2,Mk-[YO]E;a6:EC(]%VFguh-3]Q<jcJi-`Va$FH;Qjc'U<'meUpUn%4YBn
k_1T"VB,`(@L*Bo%YuoGVT%hDC!i@W&>_Q$:=UiZA.GsJ%k-(_O;;u^Rh-CM6Z\]_J<1Ifaf@Dun^3eg
chpELh`2O/3PqI2"J`7+A:d^L08o=B[1MT&!LKo$*;4b6S$PAX6QaaPK1^jhV]q$cWQYI"V$7QBqWV^6
1LA0X1L;fE$!OiQ$sZ741mNG(eDL%neBK;3LZBgigg?@mo14;o?,*u![sdQmD[(<ZSj,,<E7'0DqO1g+
nZn,?9i&5lYfNCNWBK>Nk`r3d/Skca8!^d-^[["ll*pC,Ioii+o)mtQ6jMdDI>p;?*LjL_&'q9m7Mg0I
;erPda]7M36bdPW>W+1j&J(;W):4IFmG4..Z`cO,ktl:ia0FUgrmMO?SrgMVC$]VVP3oEebM?q3o>K%>
%lhP2(%6Cl&>U3kBGm[M>!2N>r3.3F_XNK?$&3"pQ@56o)g:%!2scuWH2PR4"VGZu(J!n<f;IIeescQu
%+0W!P5lem%A]\@:iIXE_MePu-lq;a/NDoP6AB97Sf'7QO4B:X\7Q:]N+4]RFrX2m0!L5;^@D_PX3XZ0
Bu)3c"G:@h11KZr(F24*=IApF89XR[rM_O']F!g/fCic%hV;1pp@N$4b+40].5qcJ`aC,IG(N.i%0gq]
#_`SXOJRS/*X?.G1ke=5%n]h/kVThX1),=8M_g3h!pl46E#;f!*bbhlU)hIX?Ee2A5qVAP0`<7V1`k"7
R],CcL,KC:[2Iu"ohZM`i]U1]/o\OE=$j8Z53p=Vc2c9?M+>:WR6f6T_^=6FcoFk+GFd^IHMDB]f]rpp
F8-U"_k&4KFKdcL2L`cSAF(^_3>,h[!MeEY(:=T&;Cbl22K5?K7qs7kedr:Ik'0G'-Y$H1T[5ki06YRg
ZcnW?GXW^m.Jk:33_(]@D0d#02SClJ)`4:C%-nZ\f<sp5[#jO^6naJ3^VA-DHXCL:V0s@En+lVjHlQT-
e:Un#LVL#1IodFGAY!5e[t@]9&(-hW0Q>#T;SE<+`j]Uf\iVa8ljCK+*#Q3?']IJGLsoY)V-EE9;is'"
F]u:u"2_H]&8>C"p?H#THe\P<d+A0XY-.17)]S(6KbicW4q\Md6._SFY`Ijt;M=Xt1`c4o9Mc#T5UT>2
M`)#$Z8c+D`L&e<YlBr^2cYBo;[ZcP1MBo3TOW1DJ#?W$")<8qaB3j5#oNk[a98*\JXjCZEn2_=f]s[C
/:ib-NCT7Q*bU?>#d\?r;T.$\*O4fkP']-,Y4dm?Gf*eX4EnMLS4i\[WBZY&^Oc$<`U5J[@b1a4WG=iq
+'j):P81jccQKFElP3s5D9XR"<[u@%[miZ2<'#^H1QOi^67muQ$m#M5k(M>'&hm\5^VR%1LM2)[`2MiA
:-0!VqF+SN@?m-n5#9A/n'X#/Y'OYK>kcC"]^&i7p[3SXb\/Ha&%iN\pZN4/X-hQ]HGs(Vd'COFp1h_J
Bg>o%08&o0)K<c$^od"?TAKl.\e0bL:/ZFfRa>As`I(1_&?E>K)>;,C'['uiV"-R"bATXtrZSC-m8p2h
F+,.V=n&%$9prcg/W0St5`4l^=+YR]QJa_q'8/:(>hK<n@ir3cK+Jh\6VgE[p.e5IpEFl*cJCnP5V>U'
1a2!NJWprQ>'U1'6C8#c*bp@`rIA1,FfiZulX.&mB"*>MgC/+/-YW8rls"O=&T<8(Eh4H]B@R:L>G)e)
`VFWYF6X*Gd*';N=(rNYn*J4q/4-=aMGF"\8&jQ9T"M&_I3j<^7V]N\9XQbRXc9].f14S?H`RYcLoJ)3
Dt:bh[I@I?+O>I_DrKFB]Gl^k0<R9J(<Ab70S.X0!in<oZs#PiA/<OmS=%&9_4c"d_1d.o9H-W=,0#iU
$0F'8Z=O+-I\I&K3DVJLdUKT,ki_9="S4N'_0VN8*d5^WhKkBO)>2'447<(G),X2C$WFc!S/q@_rqak-
TCt,>MZGP87,:u>!H?5j_(E5)&aX_Xa`n'WXBT)qSHD$%%,BJSiZ7uZj;NWWYQ]?cEJ6mSOeBDsjlo\K
RYnRL%lE)XN-.6;H9*,5Hg@i@CU.!$A4M]-Ba*VN9BndaWW>\!*GChrTFMk?WF$0L6A@cZ(r\AfKs-mK
Y&>g-G`rh&c8:=YqpBa+5id]G<3QCd!6bG+$Xi%uK:-cjN1;J]ZEJkAE=m<P>G)R8"s)!eEm\#$0GYeJ
G`rn[]1n3j?D3KE9X:QF(Crm#Fb*SVrSgp`o<2]t/bAu;`EiB.OkD^h7Y+Be1Q!phjL?fke4rhT_SBcC
L:EU%85CY0AL3\i.e4PQ[FPhZ(oSDES`sIF$oa4N:Nk%jac*M^IEju9\0.C\?dO$eB-cMq/(U$3!M@lc
4BcJp!A+nEVMIc>=WO.mR4.]R(M^er7a/NKM8QO7_.j>['>DbBH8-;4_58m$/CskSFZ]<Z&bL`6MKmqm
/^])4LMK)kEg*)+]1pVV^[5%fI^22iERu_YG)]8p+trkKGCfY6^<Ef%H@f^Zf%9GSDY`)FDlmjUh6p>=
6YR]KEXot^=",.l!oF2\crDd+efY=kIRa)>4W?1[%T8g9IU@['lFnh(4g1ULVu,<4C'ZV[K2#8I-:Jsm
jLNd&Ge]\S#Xf&$)>7e4la:OBNe3Z^8a4%+)@'\I/+EHU.4kf-].fieK.*Z'oXl'k`%:+4$_Tc2f:fr@
-/4Mt]LRmAn)E5OL!kQIo`QP6QZ4X'!9(r<ZtSbu>+FnAHF3KR>'fi<qb"0.5+\DCdG`TRHf!_I%@TaM
NdBodp:I`t5)>"D"<6VkCJ=l@+VnjS^8-WS4h*b9B_@LP()/5;@KEaT#[Er*3*\?1H!4SZ$F&^W6-N8[
;tkUA2;B5Tfua%HO(VM%Ye6OV2r\79-):NBWQ*W3KQF@06=_iZ.?qTD"hi1jH>UN;Bu+J+:g1)rDceT2
i%PmDqmC<)p2Jh=qXY+`-t^;t>(LA[)T8Z$6+hLKfBEGGU5Ll"F]s[e&hVdYQBl.=Tk/sqdrWAZTdDC<
<u#()g"(D+h,JGA0I:Oe:*=t>XRf!A%BtUo6lg)qOZa)P;"Sr\qRF$<P_+;TiG+I0<o[A#_&@Hkhpt]Y
?c"At&[qb$,tJUR=[g,;jF`>NGsjiH)/'_tHNkZoB;q=<3&k7Pcf0;]JTY;>%!iC/6'E#L1BZQ#IudE2
#+'.m3[ttfO;m`h^9Y[1O5r^CfU!]Q_>Y/'"$5,5:l%5q&9`\4OT+lK@E+3MAU,q(k+ploO;u$oQ'J__
00*pd/(X*]]-DVF,.n<Mc5P%IbH^24^_5m_0=QN9HaHJ)F/m4d6BrRE1-:<Q%U]YQ^_9o`,D?D1X3eF+
,YH;7p_oF7"ehk**G.Bn5Ri8q0dpuVn*Qb+p'jc<$OWoH6s9\sUiOgi?$00q"jr+ZTE1$<M_hSiqL5/m
2gQT1JU0#>,,tN'RkY#8R&e+Zf0sE90LmbD8>[WG5Wg4?]M$F%hk5??_fD4j62UKsDhe''/^8=$K&jtP
U_cO)nilU4n,Chh<-(((XC1"+S8AN[nE34j[NRtV%:%]3?tGr4$i72.k/$l.T=TKM()GkFJ3M:p!*N,7
BNY44c%Vj:+Q\r_-e*]MNOk8%J;@,rBgKnD!L"54?SXr^+^DQHBu/"tVu/_`IKdXj;]lO@!]aa+N;RhF
TEf!fT6V`NmbrN+!SOX=?:5_7'u(=kfDe=p=n5qQKW;DO*7)DA)!eh&lYcV*jm:3lL?Y[='pFibb.9\7
bZL$Pn$p7jMX/"p`)?M["I[%AAckPn"AE,Gpp7hg/\r?8O!]/q8$:?84iWgj.6Xnh`c#s-"g5p3+]d;F
*=/GfS:-SDgmSX<e;;Eg:\>@[+_$]CC25j?Q^64jMi#J7fSjm?*jpZi#SBZOJ1h%s;?JD>RR2X06)+n0
q'c6%*f*TobYd"3+t9-<)cFL`W.@Kf0=WmLY1-A]-CoVG$Se)map[pGnY_dmd?=1S-lli%ma*b,2s=D)
>@'`qGP3niI<qp"p]o$bl+\k>l[2dieoZPhB4PC5ZS6aX;BDKD9i6@Ik0/CE4+T8(`&q?,r1H11#3DKf
C-fmU_p$[A7\0k7g^t)RHgphH&2?3oKH]_BT;#B]6hn=s?kgk\kHA:ma*El`",>0.cnR2*?2,37N2r<j
Ya;]*_'lgF^#TgI(e[[Bs4+qrk<lF@gKduOk4_X5-b_Po5P_=&D<]UGip<_sjnVt@j.if`\lp/4OqP@j
EA;;e]s.i06J_F)AjB=+28mFt;E,lK6"c2YWQkPhX:YWe7'&1@Fd'm?</j6K>%!81e2^a-K2Ah=dKf:N
M(TeC39.8_`Zp.cF!UXU$0fu^UE^Lq2OoQ(M:cU<+b6VfI]mDHU9gh1oLsR#&^;@4$Ru6n6=Zf&WYHZ.
aZuhlK1]VWNB/&d8t;5JWF/P6;V6u>Gf6"BOp*14.;$G*8AR;@;0S9pf'ZjN+?CX`X*9,>6&G\k_"9N:
_t\b6S5Wd!ma4UT.#NDb^F\gCJ\:X.I2OJd?9+E@hOL5qi.e%Y34K<BFmBtu(db.*^Q3o"dfFc'""6-?
R)(:%O,2@]6C;cpU=?7=[r'N/np-c"7]>%afKGH/9Tf^<1S:F&;6R6Z9/O-?'%k/>OA#@1/q>un)bcd&
&?1$^IH#,9TA)?K?35,n.Ve>jN4$E@NHMl@CG5W*G%^L*MTX@244[=/qk<[O57/g\HucSTmk^TqbQgZ(
/$AYYB8h'Oj\?mkN9d4=e2a1$Vh./R%8=JR!]^Gjk,Tp4q7%Jk@d6M8-:9<dOi.6IOnObEp3Ha4X9"&P
NI!9V?9tr+F=)Mu/-B[Z#\m!pBIjH41WDcEi/Y1PB:YTUdnD\\;lSr:L>ii(BT%)L^>Ib]^p?(!*um$1
L@RU*e:ZIg7ph@09_THg79""<BGARQ(A,`X8df6:-D_6I"fnL?iiV7J%-Mms=m'>_k;]YiAN;Em1MiEB
C">pqmeKF3gnr0#4nHrU5GFA52u4X["FCI>.1+CM1t!K2X#JA'E*cW;l7o40J5%j$@?M@EMO(7@TOU`K
5'6_qqIas2&UT@PSXNc=0+l9a)Q(7NG4g-b.aMP+=J5(<LbrJ9'dS9RYV>mZ6PZ"R3E_mKr?I_-TC#9p
^@)ek3D[]-L-=QT6tl%@;gfBsMHqpY2aA`nKX@+.hQ,uB@qfQF<ThNU5HN26s(6@dr6NimX0;@HV2TYu
:&3;Q1e/,]S5;!qQjW0\kjb&!8ACH>b]m*=5bc*@rA=YaN;Dno.R)uQ2?ZU=i$SrL5-G)I?\u=ET_J^;
ee6T:b)C*uP4A^/2$W'gb%MZ</bJP"!YCiqJWKUN:_jO(/"^DHm<m_lh6A"4*a_@Ba5hcmR1@d?6cZCc
IehHDO`e4jR=m@'HB(gUJ"I<9^^aiG*gp2,ThmeKlb$D8(?f:_TU1sq5up`$$"eHG3#%q9$Pm*QHeed-
Wr<Tij@.3%[+dD=aa>hc*U;Lb#gj+n*MaS@duni4.4pX16#qI8rOu?nj0i$Z])udtf1n3RDYUR:npqTZ
KY=r7Haj;)A8C,CGqi!EH&bDe0MXcKi!`MOQ/iG'Dho1Nr`)_k7gI,L"hChTVL#?JEkS/#jcdUC*eVb\
s!Al/Y+#A:Be9%KTSg*@5*=k"*;/e,,1M[I39ccboAdPIQlbdh2n:kuAAMBg0!2PL%g>!g59r_%HKA_1
5M4Q\JY]gNgp*TjeKaV+STJLT/LX;le9s)E\I7I*48&m_<EhY5]5IrkQlIOXnbM+hjafW\'LG2Mi2?c$
1e9%u3YCXI6hpdfXFaiO"T1T?e5<<PJJ%&G]fcCL=pGn^;k^jApip$#=[?'*jGAPk)L<7GQeJZk(qK6>
47i2rmqKi'*E-ch"&33^#H$,^M.u)DOn"o9B1*)[E0[A/$aotj7`iAr$I>Oufmfq(P1e*;8oSHI-nSP@
%O6+Q&7("n`GNg,F-Jm:)_]U[gmDZb9.0C-dbLS9/$H^u+#$lI&c9T`+J+_]GfQj9qW3:NK_H#?Ueg>m
CVCG8epJX*GH)<E5.r*1mfP>77Obd=+RC-;7,8;UR!9!tXAt'Vgjh*XH-?hXd$=>1_(F?to;t`:Eic&"
Hbm\#?QC<N-%:4a.H7e&6*Yt3g'EXs^<4A&=$g"oHo8,^ql4q?lX.No$NA+2h>P8RdIi$]TD7*UER1[J
ce*`n)X@?<GAG*Or0m1<I^KnLr3A)upB_N?kc8=b@4U:>HL"-4#Q2M&#a0s@"NX[fjQ^%re:C/(THNEn
^80&J&d9rm1+K@#TI(L2q<PTJi<$"#K(X+kDDY3R6):g'O[(hT)\e[q8M)1Inn?_PNF!Mn%#f):S[!89
j\LY5m\b5gDTgN#)sF8HX^4*`55=Z%HQW0]\7Y@]>Npf+baUd9(&F"*1TI%870GT.'(8`>Yns'NebGY(
jnpG]g8W;0<97WG)o*Y5V=sZVr-%@o&(q&j8V_;oRWrnGT8S%0_YLY`>dfT;=Fs((k!n`,oS%&l-+e[b
]*9N.;"o[<O,t>Qp'9$Jf4YWX+.a\0Yq#G:;:6E;gWsjELYjkLCd;qH(SNtR`IXcQ8,I(c5!N'brd8&g
c>:&"(Z&k\#IJ$d?!<2-(Uf'*<NYo,b+@quT1K\Js0lLBjYu>iqL;@!(B8)>=k8oe1ZKPDb>3J*nD(Rh
\?UD>pR\Ljs3o-9p9,R.htkNsF&T8WM+<ZA6$`pd6_o-jQ5[6l<L/.7A6o#KJD//Xr\YGBIFD)L]Qg_A
XAo=X1mn$Ba-&J='Oh>FYgJq-_,%puOC/C!)!L;L#u$X)6J2]\p1JC,&Br"6c5'fb2o$jX)gf4":@i]A
*hNjLEJ`V0M$&qd(AkKAo-)D739(8%pQ<\`cW<D!=t+<)j&&Zje**djWfBFsO1tJ'Z"lPM'oR>i/;<YP
Umre._"*]=Y)2HK94TX\2%`fZ,e9'i[o"pe5pEXEDm4dtC8$_\bS4#O+Lt>aMgg`i#&+O3ca;J.b\GE&
7LMuM._#W9&BVZh;8Ts'<j#r9?D5%0otJ;NfBZdnO-XF*m[\3CQX8Tr]T7:@fg@BMI<M8>s6JTtoZp94
,sOLiQnu1c+Kour:3Mu5/pIDm5%@PF.#>Cn>nD.,?U`uQ6fcr)q7`TEp\#8]aM?"cI`KG's06m!nXl.k
\,PI6f()$XDQWiclJgm*VP0<j0\7+*nOmjTdiG:qBWZR&DQLPe1pc]/4-hf)@<m.[Inrd5rO;?km[lM]
Fi&`po*5V$G7KESZ0:;:nQ9DmB<&calUl1;RG1gf3Ul*%i5u37.RVOK1FQ?ts#2X!;QBEnU'2lHO-gm-
]^HL`L8+cs?t"OKKKV\>Ns:*=%T;o`l-6n7bdu*1J?4WgIJ/=V0Y,Xt@>b:Ap&fk0*0)]V:sh7Am+aZU
^Rj)+\';7*/SS\g8]N8,Qcbp!>VQEX*F,QE!`=RtKD<q)U<uD+3Dc\q;+E)Lb2$u49AQ8*7=p-HpPXGc
XbasQO9^)O20o<"!N5s?DJ'E0aM/IcJaFQjmKF>8!*"NuTF5'1A)JZ;19ON%KMLJ1"nD+Rkr.W2Uh3c<
LL.pZlV]r.61u8hgm>[/C4BSNe,-U'T&sCK7pCFMCi/$;f%3Zh.P:'K8Ci-PoEs+b#0[!F3)oL!.!eL8
_J.9nd_@*o8%uB&5<Msaqq9r.\1\?T3Z`W"pV+dT)Ym+Lp=eDB?TIk]`tpZ6il:-/s'1p3I8r8^q+%lN
loW8*X?GKb%"MHM#:IiN@?$G#bK^,#^B!o+#0b*3e9u9*iDVSF[1GR/=<nL17h"lTG"N-QG3;KJ\?<C#
b72I6b('Jc56QfF+[kT'%(RJF_B7DMjdWtL]RbY4KZhsJRtkdK.t\E2=[>s0%fuoW,W.6U+$Ml;rsu7A
ms`^8[;ar.<'P=I+fgL'[%e.?7T;J/i=&Kl,O9R%cG&o@8$`_UoVAU-.`@-!i?A44bQ:CO*[/*;=uaX^
6U7T/RR>0RcJiW=^ObU2p]8JlV#Eae3b8^:Pd,/"FJ+KnK;&p9kQs_-2l-[`kU;.Rfo*EYTWSkFH'mEl
BA9r[$f&?*/]8N#[#'3@*GkXR$?Al_,C1JJQg?RdAU\oZ>b<?icU0S)-QT5eTsDB,Gt;#e;bg9iVLMmr
eB,jjiM.Z>7`i-553(><RGP\N=e>N&meQDQZYXOS5Ng?&rcQe&lef9#>Q2Xq<q'O*DWH*3GZQuZ:$H&i
(a1La"tBtGO&d(#+"ts44^;&KGHrX+GCNdg,s=/`OJXs,JB@3`ZQfh?C%LYlNh7!\geNV1WFGp\"$T"%
i:(^2<Z5pOb:s)+Z)3oI6?/P&`PCGj0^B+op\DTm(`XS\a+6K&)a[@OjDgJNKKfui_dJ$KNrr(G#FK6@
.*O=%l:oo4FDs^PJCKHGn#k4,@:pZHs69#C5C(b)s%eBLVlr\@CBkAbic7="OU6o$"Iq>#0_4-L3u@A!
s3pM_b@r5#*Y/_]&aIi#&HF0[I'E$D?j)-\89%+a$)J1M^]H`M-868r^BUC(0pFZ`W.B`\-fS8p,)cN4
3"hI=-jkYRM9:TC0tCWG#6sl)BGk@J07Z5s&[]CGe9k'cHUqbUEAt\P^Ar/fgCPTYJD'E)7AQ<p%2UIL
2ag3GW%:dcrV!t1`kO47'L)5oahDes^$Jd-I\Ok5cIE3"dIjl"KN`\2@O4/p]n0R[nAS7f.r/$)*G[<V
&i/2:dcfrj^qAV$0;ZjUs4k7Np8WCTlrE(Zr?#f:MEV>AMs@'kfsC4TkMj&fi0o_H*ZYUhJTe,_$WnCl
lb-NH:OJQGk9rL$+"L5-WH7'kA:K)I03=u*;EA3\n$4ns8f'l;6Ho*0"j)9-8dhHOj@I!#Lo&T]dDVV/
K();R=uac=!ZuoY/JcsKaU)G#$%<L%0TBZmC)oDpo)'<u2P.SZn]]005O!F`QYXiMc_?=YkKcO22UX2I
`?5JF!Jrf@VOr87o[^^2J(W72GQnX!#6SR5U/@Wg-I*nGDCG:O%]&S)#_k.LW0*9m&/5rg>cnE#6GsEH
+G.BobW%n'?j(7q).E^ae+<hf58k764DJeAa6Nd9@g#as';,i*U\#]'Rfml<LRR[g-B-.p0J_4q_RK_,
eeP4YhpqihP$CN.[o9R42(?k4c?B1clp0qSP+J[dgoef3bcJ<?YDh*TH<*?_4Xmq5SsihM:X?,:pQk`?
6geYZEfAA`r)fuN#-h^3f>`D>QOLe;Os><eM;b#4[-/!';F1jF3Ahf3.DZR\)@RBK*8!sTe282NAk63\
;BaU:!4]<G?jZe90#<pqr.#s]V9[bW!:]0A!=%F'"9L%Aq,3<te<m)^&;m(&@#BKVOFiNX#M54F(d[@#
JL]Tac(L9[mo--88Wa,o1%l@lC.Q1:EWfIgL&aLF*9WjnWC6nlQ2+_mGo<uFg]Z!C\:Nbk6,V]`E9kK\
?d+#hrq?[Mn,6Uo2)kQ.\9RK]1S\OTW&(oCVMJ!"pjsF\q1gVPHM6<E5:4tkHpcRp[p.ge+8.$&^2KPC
JcgD:-kV&+`!70L%@l?ai!-DO&Bk5o0Gf?>H,'iQ5\PZT=M`WG(j`9ujY[H.^.0^CR>E$o/YTJE/p%X^
0EV[^H-cbsJK]7G/F:tkJ?3fihq.`0QZ7bi5s_XoOVuKehkmP,'4$]JKN-th>(Y]QNEhN\06tC4bd_nn
WT<uF`j4.D=\4VFb/0`;7G08!=]s!UfnA.,YQ")Win($?J"ejqg<%:S#$Q+Z-C&jmVIYcZ,([p2TMUJc
JB`nefj+]/=N=6t2mCfg^uadZCGR4L)\$tPb#MiWR35Ib\_S[Rlk]dk-%jW6+Rdf!9a(!6JKkVT&G,rL
p&Z\G>G;@r5QrX*&UPqOH@.UHWYsG?%J;a(74rQDZQS+%!cDcSfJRC$E1u1QpqY?t5c!RA=uaSa%UtV?
8t%7'&$7LRlc(u6)b3DN3+3$T\oYJmqtW=g>^ZRZ(>@[CY<0/\r*<Oka=U/9hkjb&8\:<8V%B['k(=_i
F8\nTDgXOYhq&t5$U1'h`1.GY$7>pNJPqBs7S"XUr-X$U7pZJp%i,P;C`/$G!oO3$JKH?H!?9nuk$g's
"qj,F/&KAGLnPB5-@q[m9'tp`329GKciu)8ecBOk4^`ud!TB3df=in#%hA";=IHeb%2YsY8&PqTKfbMG
&s]pKht^eiC"0KfL$j<b$DVP+CW_.bP8uIJ<L'n<Ub[/bE*@Vu]r&=.E'!]IN/RseAnE8N2m:V%biXIF
WPQ,G"-H&'6lTtSVDU]7/IWiqAhZeVTG,J`Y1/%lXoUgZ.(Ib2r!\0Bc4T"$KRH2(a52ZdOb_eL^;/nc
5g!_l6HB9"o,S_OLp72Pd'(R*)\_C`QIl6^R/*OO)9A0P#W^!/2u5<*pQeii)#?r@kY,D-;`c+$XokiD
$E"%_W9G/l8LUU3=81#F3`9uaQXg5!S/tA'%QL-hL*4/<pbjWB@e#!8"`<)klLU.?YNc?Tn(>f6Arg<3
rl(5eYPm\F.lT]jnV(aCr+,KJV<.CEY$Yl.Bf_MbQq=VSj84lJK:2BIp\`<[4p0[]6\<!B,(^Ag!.p=5
!KYs<nDiJQW"O00rll@JZ3rr5g.:V[W\O7krJ!TYJ2KgRf7j]d2K0Ki_-M<B%9d@*=@0VR%sD>UkQ2Eq
#H[i#Y]@g-J18jOjrd9="m:XY0T4L*h=\jIgn3Y(SHXWKB*fI@6uWkT60jWor4n4qc]p;a@B/Kjr+,hG
P3Rt_oe"G&E$Qm8cRUc`"qhP!BNa#2?<K;MoXpn2H<FhPrnN*73[)8:e;K$/Nmrt#`2&DkKT##hcK%N<
T\p1)$PiI6jWJ/T^kTEDO/oP">kr11;FJS2!JaHb5o@`I&VgN6e:n<;-PsrS/Z<ZL<u]"BU5PgZE.3lS
j=DTJ6W?mD=@d5KD`gj`?:%GDb(akZ&k#-b;u)L0n*Z7J[)Jk-s7Ia^*K-78SL[cINDiP8Z)%a`B=8bh
/ig.08iSC;_\rCL=pMP3gM_T<rQ2PJCj0^U(N"RFpFMYLI/N[*p!:CaEU1;F>X^g2I!kMr`g9/Z^&mZq
]Kg4mqKSqL<W=jkS/GjhfAOt#Yjd'qiqqgc<7LjPA1rdM,Yk9OherkC35r)/_!D+kE$*BkrKJ@&W!?=!
5H+MVYRbhR>0rrIp9[),@,q!6;`k*>iaqC9!9jqNd2%F'H4F2;*O$sC5qAD%F:b/'Kh0m6S28HAM2+5\
]M6*%in@aF=e9rig/7et[ifO/InW6L==qMM#g7sYk\P3I2KhPY5u_;;`207r6<Y9Z0eJ$T`7`6Xe)>Y8
J-OW,'!o:p<'VIXCb^7*"F)I]#^IU$*h,s-nRtDq<F;016sY_9C31TH8hh"=lc#7kg">UnU%fLFWUGb^
4;NS@>T!G\f'lYcfFpMZ`&ScX$%XD26$RJPF:<%[WZ*<](RF_7,-ubk;$1)>*=$Dm'7;Z@:rOfunr"$.
fR!9\A)#HS9FbEXd95'YiKmSI6e=aR;"r01$#s:6CS>s"9gR$hR.32hK1&lHZurgL)OVS3XI\+e3.(Vp
_"-V@VMhal]_sOFE6uYI^\&30,9\?-Fa\OO2]fl9r^bsT<p!mm(3.FoGf_)i-,#&(NW#Ofe=fU0_:iWj
L8asl:Q9qboE;+?VGIN]&cSPi2]*Fm3"t6*(t(dF%iV,_Za(C_c<1?%GD4c6-([B7_50,HI:OB=ndPqa
@M.Ve=(k%MT,f'KFcbdM*S9Km&N@@BephmYpjZj6<Se6=aB[@>(L'\A]<\F%VF1ZTLi>&'3Pad#6!/4C
KZD"t"QjMTAi6,M"%3f'KaCF4f1C6cS9OY!(99_ROAjjETJmE&O<]\"LA^*`Rb_?T9=Pp7Xp?LeX0#Q%
lS&DjZ"FDs^rIK8MEXA6;jh"W>uTI)-nDog:Au8$G^KND4>%-q[LCNP;BSM<V!]`Oh>Y'0FR,^%dEVF/
qR.HBfCdAn-WSaHc)I,HF+m!#n4_cgHQR`UmDY!eB0Q+ge)@>\Hb-)`<5l6cLJ1Q:TQA*Rfe;K'9G!\V
7lq=""!9-3NWb#c\'K%R'''E*"&?ab1FM)h1B?'D$i#lib&]fRdm.VtBS#B_VU**Q)b'"Bk^XBfnHLlr
(3P2#+$1OW%q0$W^FK:EUCL6H/KbSfV*'<B5`KITAhagVA'HC"RQGLYN0MP<NmU@2J`qaM5p&3\6"UFK
J;;Q>XQB_`"fl/CP-$ZW;;)EA$aYp7p6HN*^Ot>)Z)<;-q"ssO4MN?0D>]g'UZ$nL-Z*I&6@:"@19q1[
@WEVQ5(iEYW5Mg9HkP?#+>PPj!e#(E@a?:nBS@>Zi&'K\.l2]ADZc!MJpqSA\OoM#lQ^b,6Cc_#h^g4W
gfIT]k+.lD6BBC8VhHLp:c"V%/<[SgL\LuoI?a(='(RcTp39W6mCd9TZJS1'IXY#[5t>N+R+%KH`1-h%
Lg6<lr!*a&T)\XQpTm*AD7TU69Co]<j,8[>I5@<R%u*&;d'e9YB(<d*5FhWG`E2HQT+4Y6riBa[rafDC
pD$8+G,n\<F?Wf40fWr@i-566^/1>2`!e-)L58TT5OU#cmND;1]cdN>J]CZ=GqpC'\.]!o"V>tm1C1#f
==<Z*kYhZus(W,B<J&;i$A<%Ah]OsY$Y#`3&=gn?&=t9RaluujTC)^0l$cGM*s]dD.F=Vf!Q1m:0V2GQ
K?k_YI2B^8\-V&eCCnHHMu@&r9[%e+M@6W(go/9V<<4luo:;]Fm7c$eV#L=L>I+Wmp'W^4AfQu(>P.p7
5>h1,r2Hd.i2_Cf`4$7&3#64bc?WT\Ym6MV!cXMW+YL?d()^-Y%VIPCEZDT!&g04Y$=XY(&=4@Gd;d8>
PE62mM.mO\`rc?8%W\6Q;Bdlpqt+@8'-TP#"iBdc-21_LX=d>D-:iQA(.d=.fje]97c)KRl<i#sJ$QGq
l!R7hV,pi$50Y+?9_egf#P;bO9u)G\IXM$A`V@^p4i<UMlQPT.I<%iGf=H)c^2.VX`*E?Tq-@<BO$<C=
daKk`>^6+YcTL[rr-@V's"m_5^!+ai)*5cX=eY69V\;#G^%KG-j8H^9E$JtA'q>TH\MM`-m9-ai\@0f:
fR*jY'FIG?IU%Am@8Bd)#SJ*\LA3I!"+hes)#Oml!m`M1JrZ`qnBhYPT?N(cZtSqlQk$4XH'BpJ:D<p*
<#P1$=1lo^V$Gn*$L*s.liGA(oBudV^Ba'g&,OaJTK0^lg650o-M1s5-qrh:[ZGcRZ'I's/5]S)L+L%c
GaZt^fj@SNc[\s""3JPeZul1^HA_)>NSG0[AQbgO<rRc!H2Eq(QH*=^%Fk?1U-@am1YL11?DT)P%lj5&
i%d5X;J\9TgfXsoHT'N\-X0kR?q2:LMo"6]j.IMULrGdMBRt^pT'YL$rVX%4!a8N6hsnjHQ:'cqbm.0g
MJ,S\q6YhA>ac?'ZoTZ<3+a1ak`k#L9SUBqDn#FGISen1F$%'NFk>;%]dg/KSb172Cu4?nT.NPRnSg)e
7Qk]J<`jbAK9qK,^OC\3iK'VW4S\`IiLNa_lDF#bdd&4jfs7ZPC4)AWqsL4dc+Nhfa3u\jo\nJ9n,B'M
a\T?l2V5#fI=5bV.e;fdSiulEgm>M-$,nn;%XLKUW!n8FY]$eB+;QEqrUA`umqE&8"p9c"!&>E.\D1I'
#[+t*"@4Hu_%:2iE&^Ms%/'qjaZ9^tc3*Kc$4n5W"7abCi#es'm_Keqp^Q5(jhUMg!q-%KI(U&ELKZuc
\=G\O%lT(6GSb%RFb8mX05+.@K$e389P:TD-eH1ZHk!I'<_s%ePV3S)kRBQpXEOZY->8h$.j4_FA7(b9
YE4/JN3!J'T8E1HE_Ru9r2t68_Yo+@M)Y0A\BfK_->`,9D>Zf-[.MZh$Od!elfn;']<1onUSdP9ag.Gu
6h0SVLilccA4.JNDp4,:adBsZ^u5b*=-Ng(j/`r'Ynh<!7RL.&%!k>^kVZdeY+8Q-[N(\*S26/NSo]oe
DWmS%7fqro\rYCKFreaXX7D:mae?g2EsV+Z0IB9,aJYXnn@\\h_nkM#\^G^%Moi]6O/fdXG4!i9A%i8[
75R_`'F7DC:cR5Q1Io7*#7piRo>.?^RsjItn#enMnoN.3^V8(#qt'BQmOeJ"R_eqS]:\8g4T"4:eIu0b
Pfad1MP2d)cK,GBmYqrk77ZOGo$2t79-6@r65O-^rJVD_</H1D<`&[?IK=gg#@tT$&]t0+L^uZm-`Qt>
@QkpTJ7'JK9J?T*!q?-q;'Scm+/o8.iDKs;?Uj:2GIWMkEqWQ8_]'[Z=ANWrI&%54=EF;#*fqH2UpRp!
fE>Z2::0ba6_,>]1'!2!*fqD0!6P3pljk&6NO*$_h#aY73AC<3K#.2h(6!f;OC<N'h34"t\d's1o)B5+
KeWKpl5k$fEsCo.IW2#.q4hFWR3.s!c?al40_+H-r5>^cfl>44@U4DD)DgfHRlnG=21!KI,]hp0U:Zn\
Ojr]^RaalPUXquG0dFW6+fQ"j)[-gn&J1MoU52LIj'30b4\kY-Lks*T;^!VC*TE6fC&O7=MV33g\3GH2
jjNqC)o\Dl[jq7:=#AHU]r+e%9BjA*">1?U(M)"?5(33aV&,bO[IE1>0;i0+n)L#6Is&*hk/T'u$Pt\2
:&TjBngirSS.#/$E6,0L4@o292BI;AKDDG&s5;mhk<GHKs0HL4mC*H.kKhnXP;?n8*^9UDIUT))!P\Uo
kS"4L0\]IV*3a$cmt(Vm21a'["d'@/=(*5*J00=;cQ@CZ5HM+CE&ds7788F>EN&cc=oM$$qWWOp@gD.q
E+#2p!9Wf2#k]Zt&?d'YpE^qC<!aQ5,2aKWhL?Aj!&YqP?OJdL&TA<=5<T"l^_mCg7^#$:#`9j/qh'=4
pML)XTeR,In&<lhJ.co)f6[KC#KK,NF:rE+k:m(?J;$S_4#g$t!OA%cXt<U!roe#um,nUp>gN-j)rINT
RDC%NUTR>G7<:09n;l^gQG7W;[/Z9;e+U1pT])l[V>QL+7J?*,K(L+&Z>YsA>D7L="N'N9i3[$He!:8J
Nb!qO97XO>%#Bg7J:rSD85+nlUm+tP:5qW8+=/TX@Ul,T2D1H0[T$L0\$*$7`]H8k_CI45Lc.6!VHnZA
l,S]855oflg#il.GFqU)*icf;Q8QUYo:,%V&3Z8#[3+4NqWMRumsX^TdDF?'O1n-Vd.QhqYB?r(EYl0F
*08;qVeIi/"DZ0-]7),Ild<ltcbB:okLUfio7o^=o+-?CHu/[tal(#>7sSspU"17q7Tfb^?neSW:OG/R
n./qo&3H7_lP/ROKMX"JW]-n?d/_Pqd=an-"B'4na<[IP&;d?rQt0\Mc3Qb6*JD7H&-Tq(^cqi&5&$ZR
eH04P!m0D9l:A:ufiS*2(+MUjW/8rQ%"3Zj<=2uW%>YP'@*KW=U^+.'q`6u^E"mQh%S@+d6PI80pB#jE
&8$\lLuuGUM6]4)+M@qMnloK0h8FcH!MtpNm[n9A'ff=l)f96e?SX+j^H.lnImf@F?DR:aaaFKFI>!?#
>"6FC]f::YIne5^Z,YepVd%?RI9Wc'r6"U,p(q@cn&nFBnOeeATdN6pd:/lVJKd.7dR/]B%;pA(H:%gI
K1JO(MF(T:U+Y5_S"3+qjQC(&3p,R9D)3uBB$V<h\u4`@kk=+sbpUiPhL>C`BBPD2pHJRmjk0lGNSV,%
f'\scA<p3Ap%Yl*V\`mq+5Znfd^,"LSGDZ<c_fS!hT+]g?h<l]caR/h*FCi]kEf#ul5c!m8L(QLn+lhu
:EEd<Zd"7IIXgJ48"X%us7fZb:S3&bkL*O&8g7jcX+f9.3pkr8%'2\(p;]VJBD_7Nl]3j(T8\AO8kL6h
NO+\,)ONhi'^Uo(Hp-TnAgk(%-/s_H`)_EtB1=0t(?b[5o\=1rItu6c)F$"CiJcsW%Pl6:o$\&@4OX;)
UX`=ud.k'/j7T)<l%037'KDLZ@.GDV2*M5qTMa38(W_ZH;>ib+BEXPi-@k:0KmFZ1AdG88)t8m\6*fW"
NVm#1gp!^Ra>(eWKB?-N;L8OV9u!s'?2:BuZ7k;'r25@:iZEmh`P9)Nag"U!1lR&[O8Xl;$rV7$aLL.*
4$uRR[HC?RQR)UnDXZIk`^Q_$ONa>Q4Wt,[4rNP(jS4tk,URn+gi&=*IZPBg#>'dB0RVn]c1"q])MW1e
Xrk6".=LRAa'5KnT5Ql<qIAS6CJWjb_>MJP5,*ABigQQhI%"-adW'BqjuZlDr6KPX4Se*YZZgmop4%l>
g-5;n7dKKs8]CY7^2[^Y?8?^[KNdasoDD*#/q.p:!P(/MeiWX*BQ!]bh>#EUUURT"e:CPRiM=4!H9fiH
I0jr]O0!%mLm14GW!#tj![PM&DpV>IBjhOXO30jW!mj=4q7u]*Ta-7%1cQ4,_%kJ60@>C&Iu;[,b,5Ok
a/c27c4;_IWCGB+,O2"[aq>si)K@[>#*+9q?l6a_;d^-(TX:@Od>kbVQ9p(A%`ASV6$$cZ[&7Q@kB);6
BF``oJ*BlEoC7Cce?=pG3ZiZZL>V_LHN`l9CUEcV=)Aa3rpo@:ibt],7pZr&2uT#E1&hX]ihTc`84H:1
R&0,&[@e+sJPqR5;I2JAGaR*%<Y>\gD]nf$P5?V`2U!Ka3:1Tu#'>X>65&SAs'b9+UZ0RZ260#G,%it"
9[c6/%8G,.kF<,TJ4,V564sP1JT:s+#t^e?Z:9,8M4V!Nm'4SElqs.Tf4VeRoA2NeT4^9]Xh(XS,JSHJ
mN:?^FZ1m?p\fP@?e)9YS,%pL3E[5]S"1#mH!*t2Qd$s3aPl4AAE38$:17H]Vu-G)a8/#F0YRJ'-b"EZ
^3=tsXo!%1<r[FA_n5C)I.5/QLMu#HB]o>LDf<=.GK6T:LZ;G0XS43HW41Z(iqhSig"X7YH2.Bpbtm2A
dq0]5*e/WNp$!u\eUq)=;AtkU`KX>CMON99S@F%He+(%G*mJ$%n8-##-5e@<"KpUQ+;SJ"kMq5f;$LdG
%"*%8FY[3COU79M@*nd?K@W+*1nMgF9[L?21M@d:5i[N![kuHX`.Q2g(2\L78A)f)j:M_c2_09HU+mug
#)QObW'$N15H@*1[N>J9Al(Pt+Xbimg9DYTc5juY:67&5$1_YETNp%K]_S?LgHgV"Joku;C<75f?jr`O
=Mk^.^(CF:7i;//2ra;ja-^fcr-S]6m*lM:Ta*QP]e@jHQ9SCC[JeCcZ1a#U6hQoiPpP$&1,;YL+5HCl
l-SrRAp6uIa2I3:?WIX0s#@HhBu[V=GK5;gaA*!MY(7_1HjK@?B/MAo`b<qu(DI\l5pef#b4DVFPi'q/
rP1YEs"so^#"(q#(g+X/L5\SDOc[`P7"//;V_G$);i^jNU83TD=]WJooYH08>Md!`Gl5tV%gG4Bo#C+p
2h+/!+<KmaGQ$\PDp3[=jj'?^G2@]GGjE=q]13C&/FFMq(@Ja(m__\a07P^%lh\YWhRN:&K/`8sI-[Q:
hs.`KbO$=6kE78YPh"2G?\8<-?-dh`M<f)-FSY3UVdh),FtE=Y!1m#'ebYl\Qu?V@&Gb8Bk^p6KO1*jI
6;P8o]qa4@.p_0H.A1k,Z,/4+'[*dJj-kk>!e9>M_]\QVb^k#4nA9Oo.i1%Vje23J!BMm`HZ"I:/iX;k
aa5&,*-(?d<\dFK**8h`kQd#b"Ej\J`e+9coq6No7ig4iriYS'c["@%A)4F"bV(B1X^QU5=%oh:"MN,B
BISD^mD.r/[@>d_bh5&LZ=;Y*f1Feh^Gi9.ri)ihnA<'(.t/tn8/nk\cIcr?QoSngS@a28=l.F-jTW74
PimuY.*j!':VF,D_0HS-PQAUOYn1:sUCAo-<\F]S:'L`r!/@0)+9pSAb5^2*&7c,ZHn^=Zckf3Gh2#LP
LlIFMjCBc=P7q?IO01_#r8GmZ\%aftPE?An^:E^Km*?1!^$r(.O08K:d@6Id3IYK3e*R!!N^0QJ7pdl:
@shB];JUJamr\0KF)PBU]QNW%_fma5MYJn!nBnjR2h!NfC>T=jq:Z;'Bh^,@-.b!.XZ_-Dr64i7T5Qo<
4D0M344AegkNhEt`8Z8ta;`o^4@(An@*Gf^Hdpni!T<9=l^7c_[p6STMa6K.#u\.n;MR.A3NN5[Z50=p
8E7f.eUi0?"\=spK%Md_6nW0^C0hKcGj')AFY#cDa6R2WK6lrtd.qQgIY.!#S]c??`@/@%j5bt=9lgMJ
AWpdTqEaS_):s-:rQ&"T'C$Q-5WHLp,cDY>NZ7IN4eQn'$PDrL.#k`I+)BZJHJURk]duCPs8Pc/g&#gW
pn$pZ2sbnEfff8RjL2d`N-3B`pgiJ^/4`<LK';tj#`U59Ip@&s?R@0Y.A0KbJ6WaJf4.JNHKMG.>Y?k@
7Kqd4l6.e6%nn-t%)M'KL6+)&KSB_!R)KKmQ8#c([-l>(Z&AdIQ?]bKYn1f5@7Z38K#GSE84ngCiW3K>
j%DTWJ,@ZT&)NlQe^6<f52H2$o$<+">oVAd3%b]BQGZWF"Y&_`q^%7>c\k(5d6[hR.Xu$ir6G6G_YUFj
>gmig]tr!((UG$7G6j);f.Jpljhog4QV&#"7BF7kqSlK\(#-2qW^MdN5!4$C"U0KWVIm@`)>XRk2tZ^K
(PH$)\`P"FrlG>36T_IF8e<Uj"m&(ns"kqb(`+I9"c$pV(C5E\+[UD4;_`%5>-nlYaFQ4-$e2pc]"u^0
':?>bff`%lLm9!4E8DYs#k;Cdb68G!e@=oNQSJ,.S'`hsZ(-s(I?\`nheO'LJkpGgB)fr?k$V/d?XIns
o(/o84d5pCf^=BA5.G1`gX4k0s.7cKl1a_Kepe9,>f\G^[84tNBbq@[29,lP^G-Djo/,sca+E0o%!m=5
o)f2L*sA#h&8"s/KLH!jdG`.U6mVV[82I:eYp,.WhU)*4L^V.ZGgm;#,Eh'7+?;Xa2(i_AnF"1-\#)AS
Gk]A,O5-3&jl*hX5<F;\dO-tdcb>d63k`WQmCBia)u+ZhUWrK9\JGc6S.NG2!VfN_U)1grDP#eNkfP%?
p46V2#-oK6Te\2)HKnN^WR!$T,a]5f:h'QZbRFJk1Dl?bTU1Fc<e6]H+h$f]$e6B_qLb;V6EQ%^JW'6X
2%Pq9mpB\WEKnq703Sgb7D0,jf)r^4dA@F@KQnN3&&Ld&i9ss*SB+.R?O.!o!ouoba;1+pCf(qR,O._"
)#pd-*EJ60W!FmDB,7=4+6JqJ>G4+FiM*]pBb'h8;I1KmCF9tT[\HV86X<5"JNu_a6_)Ln\Fnh<g5`g]
Jh?<&cg>WI>i4E;^9W7T]CL)+s'EJ-f`*roG3TSc\"ESjVoOhsa.^nOs1<X$\gN@5/XL#82>^Wo93UKn
A_1s#isQtZ4H7VH+G>HeK/k3Cm0a($=hn\ZAbD]W5CZ]eA:r8_#k^RkKEgDHj*_sbPlRfRBonaQ%G<0e
CHJ)<?;$,LAQQb(lT%h(OqS-nR23erSSqhaJ+nS"mi`d%EV&I`06c6^IWF27Ym=\k+8rbNKKL;H0W%qH
nrX.YN6h;Bp[A?S]+:jM63];C`3*(s6[[g<Gb^i(`9.bpE[;Roa[%(J1G7$*kfCP-N1!S[*,'j6UE3*X
ki^HoLSZ/eieK5T0DA"J>YqsHK?BkgPY7AC(G:f`j"IJ<iM%6P3)kOH@lX\`=rA-PW%J$V>S%1`:qPjW
9([!rP%>_jAdaaP:GA:AJsgf_Jpm>H)aO4/i^/1=0Ea@O`n582r&iS_`2*dW'uR7koO[d\QC#i87_bu@
f_'+!lMdE1Uh5V>V<*`ik7ha'='e)!W293D>Aq\&iF(CtmDdFE7[bo1;qthXo0"jlME/fKfao*fL3>\1
EIl^@2>@D#02)og&BqK]c*t)(3%0`:G[Ws[FNPSZ$g@s8OHl=<\S6=cOBKZH/;T#P]I:dV1H3Y[qT,4q
?ei.Hp#<j]o3\$%2>o%*TGdrR*k6LSIEqQfTb)LbkCQmY""chc5kt0u-SV^tnn#6qb2kB"&Ekk!`e]^<
^?uiuGmP?)UqV;Zp.sW2LGgIj*s]*Z-[lmI&J-'\!2D@WN'an2^,[#pjFbIc'JqGmF'PBn0A@.BeA]4F
^@Ng.HLsOspM(!(m=?rW(PMA5+i(\nA<(6"+\L.[f77s7[8gERaLA)`[=Pec$RgH#+[UAQdR2<"E\'09
;?G0cU=H.bg$^+Q.8N<u_V.4D3T37&Alc+rLROEKW7%FY\EL\nk?W-iEq"9c#s/XsFl1Q[DgL0LDl=SC
:O3_@N6I?A?4L`M/@7dD+B-418s0TTBbVi5k!;m=0$rrV6;h&(g@99lkp^G/;abj]oC&LP6:8Z,'PqAb
d&%P1N$/Tf0$sHad?Y?\66[Si*5t0$,6iW6eWCCbE`-tP0Va_.>aE^X.DY*PH&)Y+@SF"7gNqDA.jmh6
mU*USn\b-.huS:1'hC_t<i;`,UJHu0ESVnMINgHOn299^;5sa$eLQNr(]t--p`ST'dFO6F.Us%cb(8`L
!Zs?1ppfW,(Sogti4:Fin"E3Gks=_N$7]?rBXrtY$O3uo2D1pK)qj'[m0aLSpTI`T!tr8U.2GHPm=n%%
<lP<&9-#E#.mW3$`NB@>dTQjU[V026+Lj";JCKZZ*9'7Mlo"[?jEDA:9gHAZ*9.*Ok.jf1Bp`Ft[0Ktm
$pf9jS\2?A-:b0\BSE^_^LeJBs2X/HGJ"om?Jqq!s#IN2oTQrL/#W2S<F^q#&huQV/\sE>&F\k"2Q+ct
9k?+e'T,0&W'a^+?*GcHf`UdW"S1s@j%98R[9j?#"\9"4ChmrnpF,)3Xa)JZ(_ASX=@0*:Ldg]%2M-;^
nY)tke@r.4LJq08bONG,Vn-3gZZGe]`>DVb^3gGfaF(+8>U?Pf8chJ0*2JodOA:CV+(%t;_,%mYoq#+b
9K_iH8D3mja;sh#!cJ+_s2bCIi-T6Yc2BqaZ+o'A%dck<Y'E'ah%NX)-@jH#d0f%N&38p(`&SoVHl6su
#1P98G3Fu9p7n!Nj1$!a%UBq3pRkeoc/SY7+mOR1(i$hqbYH6F2DM-M>@4)K)EX\-T_s@g.:*g5KDU61
B[-D/WB'oeLPE0C/8`X\k$/c&^b.k2^3rJl%1[s!&SX5IlH2ehSIhG6#+>^j;m+*c;?B<j%3-AdG2nFS
5JKECn`%FL`1P&)GQ,%QBC,jiql8\nRbCJ/W=OPlOOB's2EP-4"DUpR.+NkWPV44o[)!/3>p.US[[<0C
!K.8(rF9:\;=fq,9:/q)#$g=5JiI2f$+0]5[LB@8'/C3,R'5`<>342\<55ZOVJ?)CpLV.,pk#E)#P/8I
*Y'<VnI[sD$OW"L>?dYM#QAHM"T(b6go,m^5SZZjWPPN41(Xs%`#Ad.]c(Eb<YqTuTH4db6-]j,bn18&
moWip=Pu51K$l$;m12`N;iqkf/.RoSjFGGXrObcL-s\?c#7Y`Z+<Ka:].i+1_`3,tMt'e?]@kmBGkOG!
BS=4_K<^"Yo#>r$BO+XoILn>2Sa:PKQ`^Mrl4'lI.'0WJ?Fd?"V7sG*:P(H8IhT!/H/[27qokltjen#o
U>N?(%_lnJ@%%.TnGoUM%9/=;?F^BLb$HbNRNYqn!b8pY8_pZMla6s-r5U's`8NlZX/CHrmHE:#EQ<[*
0)N0RC'Y0k?p()G>3ZWro+Yl8T7Q)465^#a(CF.BlRsAEW3li,&P4bs%+`!E;b.IX0.CdL2Ls@"\W@Af
aOZg2TDS\?mXJDagN/irZp!<QIo"):pstN9)[=5MKa@IF0&Z'X#UZqnFAcJqpH7qa>lq0(Mh(-\"FOPm
e;nJi(OMnEpBIBf!$V=S#S3(cDG2UW=X"tH`!@Lj("s2!D:#7mpjH#sWsg8$5IN451IP6UD"Q$WT_'j&
rETS!Vu#"1CT_hpAi2mXV*iEVXSc^[OD9R+f:YT8bB08#aVpHU1qF0KRD4a3O_J(PJnu=d)#G2LhMa^\
<A+&q-bQ>tH_E(Rb+]oIhkf`.Ip"h@lJ)*Y*T'9p0)sY8[f.q[T'AO2)R=h[5lKV$1&((q/=/>^^iL'c
42tmOWF^G0]Kn2p1[r%/pmhS@<gA[`TF*.U]&up$6>PtM@pR'R"[tHEG,\&YF1RH\!UV?2Bg^Pn5GMRF
]D?59TL\n;YIDLV!N6e`<\P@!/B;9'`KgXM2?N^]nc?Z8Ri\5LSpZ'*h2)g;RLSnZY]n.06HU#`fR(&%
m-P"1+M='6@NJa'.;8qhTCG5lF9aPX%0ToP`X?.V"7U[Y6,7OCTtm)hLZkR4#W$3<3?f:qA&9BH1'F==
"!J)\DNJ3ZKGn=8XN-]2K(lu\$?09K5iA*UC<EXDhn]-i60Zl)15@n%0?)RO8L<*^-3bD*khc##/eANp
4U3*$3XH\(P>E6DJQ!=HCR:n[b3B>a\DGq@*725,YZbQ=4XN?hDM\(lV=j/Y"+r7r-FUSRhiHB["#!<V
ot3uU[,UtETsg:r?"JND24&^Q;3CCt`>K!Vk/E$]Hc:c8N"8BH0a)016%be(/kc912\Ltlk];B,0+7t)
hqHgV4k;HV0.J06nU\%j4f5c]@6nm@#u4m[5jGu4KeP+j#D``r!<EV++;9E]"LGEh_T\^WBu_<1#N>sP
"<0#bdgJ-(=[ek/S2,h^lk9#>@.bl'T(1joLF-qUQM\1EP33-4Tf;0i?;Lq_52^_FkOPt]D1PCA#stm9
IPr#?CfYLD:;@N'K<LV'G^I"Fn?Fq+%t$&+Q;Ebe7%7'2"@ke#?m]"RMnl-i!3L/CgAa4`"SEmXBZ2jt
@/$i3mnn\\@22>![=`.,.tbuY283],"$K\r["6j1[JSrei%M'^!9YL2pXp&8Jt6R*L*4ui-U`k'J\TeP
0QG-!k:qpCfYhAhlHikY^&(+RdKpPI51I;6E;8((/km>ap$@ftB,;m*r;Oq>]mnnHBA;$d4#_Og9=;]d
NA$MHlTX:Z(OY:KQMSFlm$N"`PCalr/D?R).%Xk\dX$$EBTuB8K1OSJUR$[d7M1N(!q!_M"=dsol9ddt
8bK/LPkkAo+$j\h@U,HX#FYrihcG&aKcquYog*OV6b"RuokK3/r^&j]"<.HZj<*kplnG=Z?c<EVau9mq
I@\PC*L\GrkEk@tEN4qsmA^LCmIDulS_,sOHt)[*Ud&SpUQc8i1',"MD:#"Hcq&PO>n@D!R;J$Vh-#^C
eI)p6$4d?/d$f:mE8?*.j+d:1qAZ^`!`-9!XH`!8,KB1ARKsg\/uX0?=<4B2eW$_@lYjCjl)I!UY&`e/
S_G%go[sL>YB;CNf=LXZI%psa"@;%O*+VgcV>2.Un#IGZJeV]&Xj]bH(YdR`@C5qdlUq`Mmsm[NFtebs
JY-laeD*@0"-\*oY$Ek07odCj]"K0>2Z+tAn'4.W*8:)YXokHV%?-9o^LF#%+3A:[^'S\XqAm=+o:mTi
0#SYL5c"B;KG[Y@^(L$8'.8S@8rSsF&r`$QB1`a=8pLEXj]4"TPh(:[V,kk7PZ1Q1!r-g=E[FUu`cX0q
*^k]O6``9X@`"jG!W?t>,XX]6&N9QK$S5<aqknlc%ZlDf]g0nF2m$97<ki\FWhtefKZ8n(q2L*Qo1htC
3->#H>Bb10dKa%,`Q/.X<?l8K\R$^o)N\]h(_gFpILnfQ@8naH2'nK6?pK&]5gGJ)n.@X3VlqUqG^6W%
@is"si4C;>]gAPCC&sB%d(*sY9fI[tIfT;K!H%N1g[>q3V1&AM>lR(q_0B;J7XZR%0o"Gu\AMNCp&t>K
lUhB/Ou?oV7#P)s?ss<0(6MneKcmR)(`/cp3:1FaTRRL"*+3bOJ9hW6Sl%CE.`=$\mSW6MFn4ODK:<Br
F&`dM:BIO(W@Jimgt-R4darGFdTQ=)E(.nG*d&?]QVn8jB'<5i9#(Ta)D)?uL'S!I-B.VHR1s6=PbT"U
#$QR_TRIN*Rb7g$"4a"W(N`86n5BQ7VZJ#,(PM\nA0<s!p:q;M7Xe_RJU0%'+q,*Z/<CPd_=YRYK%Af`
RpMai@Vs.hpW`"nPXB5AASXC(4c']%D1*J3kAGZ@#h"PP"Cm'\Ig(H2+&i(s(D#`JT\!AT+E9\"(GRO=
SXBKR5WfV<Q"l7+%[AJ+6&PAfeX6b5X;6r]'f<r7Q"LJo#=MgiI6uopJTr;Ceq`I$RZ@"\q0Mc=eSJQ2
Y]'k.e."aO#u]qe.h<Vgk'RQi"L8KT"i91n85Pn4_XKX13MEoA.A<(gEC"6a=&$u2>s[XU=Ft]ND/RV[
=`_54b<[O1J\.6LS=B[hnWH0,G#$)f\HO2U`n2.83TaI>60)>KU?IC(Ciq#FdFib/VEna#/-M^PoTocW
N=CPK<<tsJ-4i1L7,@5@HCEGsYk#Uuo:HVG'L*cHL^OEUkG5A'a/CdZ!,=sn#NQi@0ntK<RijaCK^jZF
RI5ER9cm:$R<52UT1!Z&]sbJ$Zi&b\e+J(.&#Bm\2Y:l$*8IhIme6:lB@j&br7Vd[J`o'V,UNX]EagH8
`W^r?6B?,ENpVB7nSe-QX7:,W+a;IXEsCjsUq^!/;M%q$!0mb2L<?!*JU@^Q+:BG]<gtT$7Xtd)7_*.@
>>O70`c3YHruL;22W;4X1:oeQ[\)op*kBZ%r5C2%CORMgKLmlAC]o7@Eo]P+ZOt&c/\(5nBEqS4c>7!>
7^Ss!'^gTM'DMLCQJBe@0)T*S8b1UDEoLujVao"aV+.)d99)$XM2dqa6q$D(cn#<Z3ZOCJhdoE0OO.5k
)>\KT%K7IclTsU4#9Plf\3&ul__D][7g*Sa3#3$$4tn`/m<E:Q,QoDI,TDpiad<>L<@C8.Xg%$5?oE\B
?6msLL&_=V2k[fFmF.FVSda1QInoG?-XVFtZ]RS6(deK35^6ZZC'PD?U3;J*74stPF87-:4p5kVEm(6h
/+Um:Pr'\!K>+cXf0]e@<_OR(*Sn>;,&;RNBCPQ3q2kmuci<^aq:TBfK+AfNKFep%@m!;<2_eVa`g\,#
+Um?T_iX>!r2a>N<e^=<k4hY)W7=Ql.Zk)sRm:3i.51sg9,SNk]I8m:A?pVM[<i_]%E&G3ZCRY2h8hRK
E*C;b_ul:J3n/qc^j!V8eq[ksD#pF#HB;MS_->=n@`K4B$cEAN,4l[H*QX'P/<8dE?4D5K<p2"1?f'W#
s"7t8r6hpFi):HX>kC)c$I[duT:^+76!DE6qj<b!S>_MNG#fYG0/#GMXfYnO_YcLgs&8ANc.*C#BL1Qj
AG*9,mmtfEPJLUf!R@8<E9![Pj@V]]eNa-""$5loh@Rm*&?Ck&M"-OV-rU7``!H9j_WUKEFClnOcADnJ
(t0*7L:/Cu]pB9BChB@5[t/d3K.UE6klfuKq$Ge>'`!QRibCR'N5Uk7is1`CbWL-%Hl1bSm6JP5o@H4@
2`('ec#_KcjX=@8DDF`?BlP^,"J?9g6Vs/1m=3-o7'O!$$)u<$O;+)cEM:Jc&JTlq[JE>pfaL*(8,`4U
p#CTmcXfr;`Lte\ff^Yu`diqR`9,"=0c!_MDZd,Z"R$gQd8+QY[Hfl^ro>$>8!%%R]<5Qs@$G+^ZO(C@
*l\A?@iNLZgDPeTU`o\bH<Ep.IYE.PoqIJR]sJ3Lpc`AanU"Pce)+/Be\;pM=+0.4=7m5fRd,+Q$VP@i
:<Am1bDI@H98RITs3ZN!3J7"t;r9h4J1?dGVO&TLB2DtUV3!`g>d>(>Yn4Q2(4r$64e!&#AqC:"h@ebW
+e6Lo=GGF=k^QGsL.X017#k+$._Flg@1X.g_=EA'Q7ndLOq\Z:nRu!58cQK`JAi5>c;_0fN*7uQ%P_D.
%(8.3Q?T.WJTsJcKPfV0lp>c)dfQfeA/EP9>lXT?\N:T;+.?qoGk'R-mpA'S`SKeMO$"-%i2Ip11\f$S
J>_l<M,F\$XW79;NHhXo+:eEPi^61/%\uO*6&HtZouN?CM@0(_9:0ith%V+:J"mQ3a:FP>`Tm!W4:$FN
'c?`eTZ+E+j"eW!i9,1jo[J*M29\=5O=]^,Z+jF$#3gTW+\]2,klp'tdM:dMY<M)]L_JhoKZb8O([*Sn
JM]l'pbf[9__4)qCj]C!^%Z+#E<"+gopm`fSZBIZY3u(kTk!cqoP7_2F+/,^eR]K[Hfc-B%GL!bol2CO
L^MFYOMD-6q[BEor,`"irGEb:4/;dX$rYIcN"[0bc>m?d)*t&]fc1<:.>Y[ukR1Dc2kj+@dY#=AFgdJF
KW\cBPC\$Y[5on?3MQF[7W\i%H;lYKY=Xfg8`tE=6_Yl]+XmKQS4L"AOc^&$d8@)T@Bei6IqT@/HI8T5
k]pr<l_8sUp"Zn&2h*Q/@J2Y#0&4'aD!'TF8!hO"Ns?JuT>!%.k,ap<4RhIW7if)BK_!)qgDrSQFT@9L
"6=cZ(!$\-l!LOnN.0@R#c*`kBob+jI3Tpb$[$5S*(6U@6Z>^#(d\n``ajWoT+,O@%;LnEe4(\@O8$1[
GR2gs8PjCS5i]BkjDLa6Oe!&_RY%&cLNWfYp*@_l7R2p@JaYc&>`V),H*.1A2u4%,oG?^I`'26mL],#r
*s./6&DEWTE*ZQKb6osbGLi;Y:,(9eho`Y1iO)V#]8#d@mbRU9b2$9O[UR;RTB'p,]A_@AIF>0+q1pQG
V'sH&[82W06[P:+k)a]GFUCM\hedFCfh>4b+Ibg:TJA8N"j5Gi'#'BUrV=4FUbUkA&ORs]`sC1uU_*sT
kGMqP=spQI,i+fF)N\^';j&p[.5;9p;DMAC>:/p]L,Ahbe)M'JeZD8-8kKM&AY<Xl1r5LNCW)!ONlKnG
\bPgboS"sdT"jp>m;nWO\p*l=o,Ga=Hueo$PP>*B$Y#qGLicB7p[\H_6,]Ec5<q=R5*5_BWrcDkPk([p
EN"$>;'3K?@1eio#4WSAls)NMh[59Z"EW41N.V@3,7fE52U8g?OIX=XlPpbOLJdAS"-MUTj+L9M#bq"@
O;MpKif,b\S03f1)os_9PkY_D*Y:_'rQ'o)?uS17ng1nEF,mT@A>+'-X=1XARM.KmnT#-@%_0?LAR^`-
/Sp_GF7IW:%4a*4a4C/JA]MS>niL&G4]a3WEEc;L_6L_UB2NYlMd:(F3BO9mk-dcLUp=.j!J+*a[dXfQ
5`]V[!C9BM#uG!UqC2V])u)/mHMg/..i5R%[%.7Ij+>&$g=&e[mYPTb)N$'4.1T`G_V?nA+kl^]liKq.
=q9kT-03(Ac64Db));k'+>kGW;H%'CZEqo]a+ZnLb2j,bY0;8[G(@)ABDTck%k_,blL*0g;rkg!L^TgB
N\"PYj*J!*OSTA7LHtQ=Vph:S0[@XB1hV_g(#)qk>%at[N<W4Q0%L3$*k#1$c:a!\?IQR:V">R#Hr;20
[$QuJ11Hjk]9a0QZ&]P6Y_0pj`/@12EHZe2J7oI,ICFcjMm4UYParI&+?bO0p'A:qpj59f]cCXt@j&bb
8NjP8`,c?O/r)a\YRbm::/H6HJ6p_1>tkjK!NIVOkTBm<f*k![&\)-sE-7IS*+7SU<VTDJ9GB<bFt[a8
=gOp+@D-/TrAo_rb#OACo,I'Q;@6MH!GTZKTIA=hB(l$,o[pTr8@&Y>n<<,SoWLM"Z.TBA$%Y''Y]7`[
WWf.q&&Eu#:s5,?h?D.d#Rq2nmcJ\J\ro+$6;;1-I5P=]b%g98$HqgWZO/Z0l+'WTPf6IL4s<!:Pp%B3
H62&h1Eup@16Wh63u'4QE]D[SS:="5\9IJudtd*>I.Ct5r:<"kKj1HnIX^\&K-(aCHot\bbOoCg.lK#A
maM&I=o:uO1c1,Il7_C<,l2DW&!K8,f*()c$KE0g2hbkAOcKc%B7`.D$t<^J!HB81H,;a$nJ"(RJ^,d,
$9S>4nq.LVS7DoF2><Hs4YGMRG@h]:N2N_B\!qA'`S5rKfa2E]?3Z,T!S!MN(e]egh[t"+ILCU[DorfH
*,tN?6[a_ETSF.B>c$A;IbW[Uc!j%k>;5PP9sD]i$]_A&2IE!""c3[aa1*,LZ(_I"]!CGhWQln<Jbi3K
=FFRN<"f'LkT1m/8NA&J;/'FE9PB^q_5+>f\7+ETm<uG;&q\M$Qtb-*edo+p'oOl"a[TZsf$i(+89s6U
LA%GqFXn7[Y?eE3Z*%Y8I<G.5b-G2ti^?4]5,ULp%ncBkb=g*5S>8"&5RR)l%-\'p<LV7U8;Mnh,9-T"
S3MGehPG9h+&,NqHT6HQq&<76O:+!2,;+f.r'9CQ!/3A7V%;GKJfrE56GTP.i854N+kd(K;Mf3rRlNTb
p!+4aDDobc%?*u2!7WV*e<Xp"?:Y3tOZ.$62$eXJGPD>SK#*ZR7T10-Rqj0*\f7R`]I7^UK$=!7G#W)k
(UfYtk?J7-8(jIfc(PGkFm]Cc%%9b`oA5IU?p?h=LcE>GnXTf8i"TMl!mc9PUmWSiou6)6^"j<OAuuUT
I(1A9?_sq3KO,kp0k03p"M>_"+Qhs>n"[n45QW!E63](R1%=\G'IUnqNhc@u*URcg;S)P8_oG?20e<PL
M)Kt`]ER[k3:4WB3n!kn?6Ml$cX;)@r!K./!![q4T&gIkUrUh7,bSJ>\=MXP_:<>6[gm<IUV+sBc9\(o
Ndg`Jem>8_VU`kY;%(rV2U8ML0BZ<`IM;B9T^Trn:M7bo8qS,KMoe\'G+g#n2/-S\9^UN$:U]60KrO6R
?C^lW0'\/F;qHJHlh'S:)['jO&4WpY_-[t<CCl?-:E6E,9F/aopo$;GN\,qZKE?shb@>T6/28"N1^fQ[
N#L9#pC)%on`//f_DITND+mEpK2S%ga@!^H"bD5aG^jj$HH[W^,BhKf1[]p%<np:Dba9jV<6GSCXQ_.6
(PpL8Jjjqf67'Yp82L?5!q[@^8Z"<9h?T1\a9f[SZm1>kc5V;&XBUV3U.73"DXjoMJTsG.H,KfR[mtjl
`!;mCneEi*U`NdD$=a8laO$!kV.qohOcMW!=[SE`UYK3cA2LpuMDDI\0.r7[C=6uKW9FuJ?<l,&2f,.6
s1\YU+?Cd<`K8#rW)*khr.EXEa/777rHjT,m+X7W4[+07G%BVCs1u+4`P&;W4BAk341*SJ/SQZ5S(CV=
D-pRFb+Vru"^+uiQ^J/*3LQs5Wj3n2P8J4h>4`Cu&SAP$me!I`(XB]Z0"cH#''$hb`e?4X4q?aU^`9lG
&BZY\E+(1`a\,LK<Btk$"(]BZ5^mIK?%2K>2A\+p[tYQ_;9=Yd0B:DACeJ4T6me-P=HX"g9BJN2C^("e
aB&LJXBZp/d/7aLbKe.QS'G@1'LdOSS]#>62#]_=Bg&!1N+)V=e1pjuP^W7>;*-`diO_,"DidNQ,PiKk
IE6$R0'(#IoXTb(ruM<FA/'.V6!.FeA"gZ?!L2RPi!BHeY"PXRZ!JF(0+n)-JIHt#N9^RTDblJc<=BMS
N7e^+^%:sYK=e`C\@Hm8LaPSCnA3`.)gm%Gd9cUP^0ZLm^iK"Qp5,Kj%*>1tOCF5]S4F$KA"_H<4bPf%
Qa&ggls+3C."@RkM.Z[[]na,%BXTQ3AVkrRhDO)Fam$OW'Ba]Pm[n4N]B`G\p+6MZLAT"J[+F*b2W2th
]41;fWoXWS9C(b<DR$8K[:V]g,*u5/Pg?<\7pV5q%on<dS<`34o,_2+HLZ7Bm.2S@c7n$<Hg/L4oFlFD
?iQCF?O7<rC7m(s+bWpQHmjSc8J+@(8g2ch$rSX!N!lHc?1UZ]<mRODq&)UqG,b:[S>>KU:3')S-T.fQ
PEJql8][uBZ^<:8\]BVDYf,_1=^>Q"aHmGSBJ-n<27gVg!&P(T\A4FYK;Th1gec>m#gu#>WWf`6#BCLO
fk8?"f]>Ml[*&rOZHG"qjj9Sa]`&2+=d!U8__LK'JtIEPpo?>>?d!(c*]G&9PQe.;JB`m<*NW8^fm\cU
aCDWI3fsE,HnKG)am*oc4:)+0JpM`S@L7[C0*6tqbkh'N+>/ba'%$PXDZQp1<f<3d(Qcrc5%I/06U&N_
3V^/L1"hPFa@&R[873D\^<lb5#IF_-qtn;8MBaR)0H,pIOHfn]P8F'CO'^[*EV.iU_hYE*m+X['7=:aa
%l^WD.dq+W[B--@jV#]^OiFIR/)aHl'XOAj#.+cgAHeUZZoD1>g?eV(in5-/VpBfX2W6CE"tLLm5'u>>
ooJ.G4+Y5W"6-kl(_V(1$o*nL#SC-j=]Ye+WZnAmh70]%DU[%.VY,kQ)Z&S.12>Cm'='+=fVb)0g8>^1
gF!dhk9T+HEoQ\Q(E!r-RaDb1S.-Wuna,$8I>!I%i`$+$5\a2J3)Bp/56Z$!;W+V+^n^KBUjD*V5<*t&
^fOoPBC$mHg7^3/aM'3:bIj"6D>$Eg47&.TNc>]LO)dqj6)^iojAK?.dRg>i?o)T_/1I\JOS,+=BbW+:
A5EZ9qlt/_gQQ85q:*;4YsKm:Y[.du!R7X/#R"uBW<S_4'D!'>*gk2)'M94@^Y8s=:;,Mmfp9`gOiWFp
-r%g:iah]?#o!Ig,#8go+XROOP*7%A3YKjR'-T@Z!FdUBO@:r=P#>CV!p,)1SUC1RWDcTq*n`X0I;o*X
l(6jj\1N-hWqG2cK&2dYgf?>?057Lk^7_@'IU5`[\Qr3LM-YC(%VJ4/eUkI#==DIRLXWlEVS7>$lF1\;
4S/KQR5<0\>WhW;d@!X7+J-;mk46uGT,pPm7;t=+')>i5/JjA7@]6CK=^'QBk$6TJeZifLVPPU+_oiCU
L)(G[lLA&eEFF=@i.@Ka:A_,u<VDgq/^/CbCp/N9@STT$C5dgV#f_,@(_m*59+\$gFW`K>6"EqL50ti/
^=!O>:j76m"+Vm/!A@arG^:LfUHmb*!ZFo:KP?q/=h>Pk;t`ZEf+qu;*OG'FGq<)qGL8JtU`(Gp$G[L/
EIfDB/.k1L#K,Fp1q,D>F^#'H@#bV9I#of?^j%";^B2qpM#Icq]a;(>2@eAaTV_I>GkJu3'nj/Kk,H@.
/=IUlK5k9;<+k<4aL>4c(NV?1d!hdg0b.%*5:8UXEImfr-tdqtm-S.TT6]qTj$t2`5C28Mk/09Y)i,#H
2CeN\eZCu0'PfPT2D;/6Y+/Ql?>`hIQHs9F/"b]qSR\"M&d>bB-RKlX(Z)lFqY?=JB>/\-B'S&"0)UI6
ON^u8KN-hpL,@e:8G25&,i<Kq(Nb4^f*^K:(&1qsTt^MZCX]:4IeDDnr6kS>hA$tWGU3I(ge7Kf\<Z^R
E@^;0m8gN-QZH%$\3nZ$D9E8i[k,Y$m@U"J]?3=4Wmr`$Urk;*2/d_/)VPJH&IB&BNDb<O635MBeG2CD
IgtVJFX#bDK[t2G6mD-Yo>&nGcY<kngemBa8X]8go5o4qU(9"2LF?('e.uq2F"*j#EZm6LP`q8lan#Fq
G7+eV^-_u*KkM@JBTp;"0W+FPAc'F\_pQ1KmDI?\6L+MNiYngOc6K9$c^mH#)JHi:K+*#KZ%=%O?>&k)
&[pAjoNJJ*%<8'g8B8K)HCS3/l5!:41\l:$n^IYJSmTFXc,bR#28c_81UCFn3HtFCiktRjDn^GdaQ)m4
pY?ZK[-^iO[S;P$K*0jc]q(X?3a1)o[PY-ldTBkgJG;r@Q-ZG5/t'2K\U7g3`Y)'"T6gA/dchQd:S3+0
q!siVhRdalM^QtdT0Ai1pRAWES:.!Oa7U6dJ.2E(a:\tK2EoIHXbRU>0-gh8+BI-T\tL.gqIXDTRHCsN
?dgnB?e/6gcRA)!cg,AT*0h(MLJE`-2]NL]Xue,3?8LPEeU,ZDZKHaN8aFr=`@KLk.;J9WQs8HWT3bQ:
(Q[8s$9r0J>!2R-kWp#[#)*qC[RpC(\DS^lU4!TYEs-0B4RF6>^7gUc!olKO/7*&m:X=:TE/h*I>h:9R
=qbW;4e_ZRa?,9cC#2?,rdW%HZp0AOIt/=4oa8.Z9Q``H<1@S-A=P>e$uD"(LS4H<"Kb/1TM^UboEqQ4
Ep4PkCcnBB$nD&mW&B%kIBPn^J+^sMAW=+Jo,DGEk-qfP?d`%\1V^3#Aq";g0kYOqWMUUjQ_.SGJ*kjS
cJJPFk1#$USN66$`lWjOm$QRWY%HkJ'<*4o#=8Xk[Yh]Nf=SN"Fulue2_M,6WL7*l?!pH5BWB.])t%H`
HP>$2ae_q^aYu>mI/;$1M$qCU-g/hTk,mmScSC.UO<kfuI*iK>LkhX"3"5W\+irb_KQR,pZEt/%Zs=7%
[i3uTmRZ)e56u2[r_?Sgp.#.KL[U_5-I;KD*4uhZ[=;@e[JdD.EpSC`@ect9@ebhfZtIOfUjKtlXSn52
fnu<rp%+@t>4&$l)EHb:AP?G8`5I0e/.?&T6#<t^SJB50X4_c,FC#*pC[r50fPEIonU.K^7M#<8Z40]_
JapV%bnjWt]YMG:(Spi^dp.Cf5n:5S5YPDsRn]-9Q,17V\1&;3DM>4eR-%LI/HYUC;biJ:'a"lJC(9e@
m9C*X)Dqf:?`j+d3nnoL$F\RM9(*/9WkbE/6\&@^?6_'J,Xk)XRT8dh]cCur>q;GspTNOuYA/9!De`Ff
]V]S_e@GHPDU2R8Id?pue(L_TT+K;<GjFa<#9FsK\`7GfcL'd%8&gV.Xl$WogYK3X\"eARCMR/?P,A)e
"gtbWo>jE9A]DR*'>*#VS3?gTZ3sH?:VD#9_T?GHVl1W-]fgH!Mg#`NKl$9K.$SP&@bDMFQ&\29BIi+2
NYH>aE]k]5qB.,X#<FpgqlLq:/?O3T7nL,cIM>e1l:8rRB5b^%l;"u(?[M-?9\k8HQJ-b2_J49W1=^8l
@'&%#9hmLslde`9R%7>>lB'KI4YO@?h(Gk/Q4oaF0kb#/(a>\>&JE=5Ei$*kq$J_K.`Kt%@H7JkB]T<7
G/OUd`W4NO8TWNq63E_%cd)(=iHpY6e-en34ODab?6Wa8;c)*1<8_[QZ.X:WcS-`U&H-_pL\?.0SkXN'
%OB(BZQ:FX9aXD87stXGl=D>L"U3@k!sA<'C>!k9_1#G3)Uhm=3r]c"[C=fnH;$MS5X10_0uM(uopW-+
_nfPH2e^7P8'RM-#K6RH4eCuNHG*pgYC8raiV'h*N!i^aDLP2_34o3mWRJIs%IW(qTlTJEj(THfG8pG1
DAID=Y4lVqk\t?DhR'5dTmV<)A*&<br"OC#mE@BG_;e\*%EO6I0:_t"m>E?aO`l!H_O7=c2h%;@>RT5J
!@X6B6(**'WoRYd+WG!_.$/A%*7\Xld]\;ei3gq>p8=UTHi@.&I.[.:F[pqF;01]W`DsD9jYP\:S6'_'
]ptP_+(SEEqIOF/jJPSW'>I/@h>V?TR^&If2[hq@YMFFj;:RhS/Sa2/QsIIL@9QC?I7ef5-T84E66g51
+.NcY^N>QOU-Pdc_tuKFSL6khG>R]t+goT:Vj]Z8a5c2Sq/\'>4AQO[4jd;TJQ1dLC@EK`&cOBdnBn,^
fn=68&\,pti(7S.W9MMLIn32QAi$T'hH<<_&_m%O+e+U]4?)kh&/uDpd4l4EM*=*I.NH;L_B:Zj!2<0g
&.rFU$egUpUE>m%oripq:9WE^6<>*:L_lc4+Y\@Q>O6o>#93D2m*+6DEM.EoNq(3X>=V'TmFn+OF8FlP
dL4!Ib>Yl6\UNi+B@@O_4X)LPmCBiGCu=o_XlIm@Rt`7Wf+!\]aYp6gl#Q)lg#900[=0jL&aNKJ4$H(4
nE)$o).1$6Hh'2ei#Ta?1T-l"CdXY1%HBd3C`(<[UJS'0A#PKK6]lET*#E'NqOtP$UPQ&T?e6hnp#kUp
WBV*K?Mdqojl?(SWZJiX=*<sZ23iALY,n2m[(LSYGu=P)h\FY5I$*0ns*8YF^+\K8a8RZjEV*[Ih7tmN
H.Sj)@E\(Mfo;I:A`g/':J0s2=CN2b(m]qs?oBG3i]sB$Yb'_tp&gFV"VRNW3bo^FIGt=Y?W4'jea8:*
DQL<?.e%&Xf\S_,ed!Nfc/FZNo9Adtq%)=#)0"!t'7<Ui&DXfoi*d%fd06k_jHGc_JG'$Pnd7CrKrFGr
Z@J%.T#,*s,psip&n;e<@cGXoLc-L7*"9(q6$'^6+b%KCiX:)rd)buIINo\PmB34rE[EE1(ccj;;"LAZ
a1@*<LCR,0*1]."j8R$h?P++B?C^h3p<9X7DbXO;ou3\%hOU6_lSA9mZ2HUc7sE5m$uJ1C=Z8=;,2:K#
fB_,#WmdfXXa(e(@K0GZ^n](cJ+k;C"OmeI?9J#eklp2oXB^!F>Y+%%6`tYC'W<rUZ#2@^BZHfKZOP%l
4/#!K)i>oqnG*PbQ4H;hc]<[):B%r=B(fAQdAPlEkPs:DC22Z$;d8)65HSgJj.#Ik45]`i]^_Vbof)p)
>'oqGosL.c=BT_=MqjbBcgkjH4NjZcn6pS+pjGm9VHI5;c]iLfMLu;3lIO[EQaME"[g#f'3?X<;"-L\6
I"R"3)C-daLf@8q2MmNA][1#IIc*hC$mMC8Jbl^S&;,K\!ZkFY+QSGe#HQJT-R>mE2pD`k8\O84#D3,D
?jZ?*MT+jRZ8`_Y;*_Ij.S;5Xib2+I3sQDHd[B6R92'oH=S+1b8U*[.&o4U8NfAp,\YKM;eUC?]&</dX
eS?kQe3FH4_AEI^LNZ,A5'Q\aV;l33:/;j6F+*oCY4Ik;eb?8>HL&DDW@ni:mU&*Njh6T8^:6<hqt0%H
CS+osIIkb.jJBPRqp2?'[-MDQhCUf5`Wo"U>P^6L2g'7gYA`fI=hD=i8S:KVr4D-9D5=h]gTr9!5/)(&
b9p@d]m/l.n`T@G3WA[<=nEB6-gCIaQ+IC`LE=N(>u7KU"@_Tm:oN*"G%)F`jkHJ23emRb$)u&Vd,"N9
cu\KAhO<cFY:9;6+);6JqFa3SrNCS6++CQ!l/)/eKZ8?l#Da&d2uhH+J)fkGg<9M&9t[EorqFk+URro8
m!17_AFp=6cG1a0[*B?.@N,O<,:hO9!qY_DS!""sr!k$H((g<]fi\b^e<(BOSCLciRL/&lfD+i2%`m:/
P)TQK?Ts+(0744.]DY).^Y&!C/oW+CXL;JfS7"?L3V&0u$:.,b(_%rQ^Ec%QJ<O&>^nKHFFQPnJeIuJf
O.k8@oIXcKl&_?Im:T.PNF@09d2!DU!SNPoj@$LDb<T=*4jB\o[GE]0YFW7GiUX0jc-1W]kPC=A`!>:P
N=-7LT)4CbiV`$YF'L\Fq7r*p;]UX;+"Q6XF_C@?NEZjeCGs:h]=NBG$iMZ"9@q`r07<frj?9jV^O9nk
`,dFF:-S[Y(ZphGgC@a5ZK:Bp?aTq*'q6).4[:&BTNt)i%mg)MgQLFBht>UVq=DbWcb:DNr:iK\CZ"s.
`k$B/)/aj!S#q\=r-^Y9XPrPb7d;%E5?RgHAUjBDYFDQ\r,$`@NPF"E9L$]K4n:m@_<u[8bi-b%.;M[>
-FO?-O/qTT2j^t'0teD\EN,T>Ns8`P-p+IsLA%._32?A;pg@;fhCCefO9[ZrE7t5A'g1p!5iDMX8<`U4
<r52SJnWJ^a*2%l5!H/8p&=S>qAX+ORV!p+\#rt&F7RMt)sp9jC@-ldb;f=.,oiA7QCXTLR42j3L73bg
2d%5T"VG<tKWlST181m:ha'/Pp9BfKj.J-9ddGi"$Wlc@>l=0ONAI3^\NW%P#]2VBi?@7"g#(4ao=o>)
kb7U]'73JRmiU;T8:+LoedO&fp\+/9Y$C(sY,-U3QAu^JU_OtY55c4:i!&/WPnT)aDdRpP$dTHu<rgp.
9^*J:;%,^MCl"cMZisrtXc*pIWbmisfaNitkM:L2I(-iX_:Lh]T78XbI\Pf7^MRb6mr.72DuX\#o!eY1
YN;<>+/$[!O1u]RHMm0=RKq_nei`lE]DBf3.k34NTs3n%8(#<Q+8b/9]tmJ`4Qhm]5.W_a\URpR`Cc.>
VZQMSY;Hp^TF;;8\UP`:IfmbHY*Z,!F8#Ne[c,!-$T=KirVtdWc'5#KQ#)1Gm)*ED&r73K"SiG2'7AjB
fcceOWseJ'i^%p([nB@ef<XP9N[676=4K">]!TV_*-jhs$/+P\OIMC>=\/p]*ZGL/0d3X]1`h&Lfn:d'
&&\RU%91r"mG,[=pFja<ok8O6q4juhcQ?D`qXW%q.4ZLehbt!,c1A9V\T.W&-WVkD*^4cB_E,h**8J7e
A_5;;i:6dYm?TVXJkbX'md!q43(sgc%j:m[N?qB7YjpXY\FAjeb9rq%H+!e-L/^_tAB?O&TK#iT!HJ@]
O=qM\SB/TMPIOFmE*r_"Kt93M%MBT!:XjgfT4@O9ro];rp]%t.nboZc2#lbmqrui0hVWN7]_B[2ReQfd
WV4#T$s,Z=\YeB3heGe;]uVTcq;\^7]ap>FUR/YM<pa(Rg:VDkFCgfP)?#5<EZXG=P!Kh!!EF[7T3T0V
J8tj9-7%[^GZ(j3YB,9biK[I=s5a=$W@Vt=5N<-Q5(^9e'D[.u6#haNf.t>Zat'\P1,X*naNEZSDAlNY
koUN3p'pQ(]%24*Cu<h!]<&QWBjkk(NBQA;bHg_"KkX\OK<Y]_=iL.\M0bd\8S@lcCeuBF#D>I%3=ao5
\bPOJL$:64>abGA3'd:K)].pL55X(>Qd3@UEUM!4<\E1=5BHJ>O^f%@f,r[iH9$!hD:doioCd<2Zs2.b
&Iir+Gn%2@3aFbOB/ss_jd8jl]RBGUET#NN/)p^$i5qgZc_K<b+l78D,RHLL+4>fE$sDAFONlOuO=o8.
Hph_tO<*S>L<&0]Q$rZ!7e.5#+9$\QpsAO02`n*+%aYr9;#fB:`fUKFs-3s<Vg]8M\,VR?F5&Qi<p/=N
kq,71A#jtD_t"b^R$'\S"f:aEG(DIPY.$_Q`rjI-r4dW4Y:oW-d*.UoJp9Ph_:o3u^96D]lcf8/onQG8
8oX<*b5+KI5B2Bd2R>M.3Y'1'9kKHF+,V*\h/B1cIUL('AmOj@@;f5Na/YGcAX$E%0.OH3bUqo:-7?,\
B&Wj]JU@W@J^3hkpkM1a:)W6?bfnO_(T5"l/j.)F6bDj[i@@)7(VY99q>=;Qc<gHkNXJ@[*rgds?sM>=
Ygm[H\pinbWZL%lX.#TO>b67Sc7Y2j]OKt&?#=n=\:AfFmSj9cY)O"YZP!nt=!Vh`fNqR8pH"$cn+HHZ
5LYX$@B6+!pto+255tFkZ3_hLIClZQUVC^j<;lI$Om8Qd2bI0FprD9/WVZ./6Y.@Rlmi&)qnA48]kf?J
n9%mmQ!Yp#T7&pLld,`Zb4oPOXR:M?EImJ.-6`bE6mOj4Pj1nQ)E$hPV6asZ-4g]$I_7VnFfIYM:sB<_
gP<hp%4-7Fq6HU;fAQ&q)Eb]\f^#-#pbP]InFCO-n8WY\O<@oO=8;W<^g^@mE-Cs[RT8Vh&.E'4a31s[
4&\,ElX]/??&.Hq`qNUo%ZgGY%h+<l3nLmF?Er4HqH'^j9/sI2kn"dO_Km-!VM$opYm'rZ0RX6!2g7=?
S!eR$nDa9$&I4[t5[Qf^+Pa_RpA+[?o=m^Hr/1>TCg:@o@IM<Ajs)dFKb,'?#1gmc<qlA!X_r-Rg*N%p
UAQh=&LZbOnEuS%?a)NL1@l+(s6fs8gmFZ~>

%%EndBinary
grestore
np
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: YHBBAA+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEF+CMSS12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B08A95D8E840BC3BFE75A638CC60EDE4E32C5F043D10AD74DF
9A133AEBB7526F4D0EE19DBCFB2DC1F38B66C5E23BE4CADA86F303D1868E0D3A
764094313DE70340C27818A6A5> |-
/u <1C60D8A8C9B08A95D8E840BC3BFE7FD458E74C0EB912A241B1F88DCFAA52
25CE3F72EFAB1A278BE54C990161F0EB5771E5D79169C0DB6EB976EAD3F48597
EA3C40C22D9C1EE6DA7573BB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEF+CMSS12 /Encoding get
dup 110 /n put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEF+CMSS12*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave 26{/.notdef}rp /hyphen 4{/.notdef}rp /two 
7{/.notdef}rp /colon 6{/.notdef}rp /A 16{/.notdef}rp /R /S 13{/.notdef}rp 
/a /.notdef /c /d /e /.notdef /g /h 
/i /.notdef /k /l /m /n /o 2{/.notdef}rp 
/r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
QKILEF+CMSS12 nf
QKILEF+CMSS12*1 [9.61581 0 0 -9.61581 0 0 ]msf
134.126 358.336 mo
(ausenscourant)
[4.50697 7.96483 3.60886 4.18477 4.83005 6.75323 4.18477 4.70782 4.83008 3.20007 4.50697 4.83008 
0 ]xsh
1 /0 /CSD get_res sepcs
.5 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B08A95D352586DE315E2D13A82271362A0504737FDC7C6
73B5D436245BCB8168D9D459C21B3042B64028551258D20231744E2ECD707390
092822AD1F59041258A204037D022AC80A915059BE208C5A6366CE1E182E9CE4
218E745B5B2E6F889957B39EA4C2C50EDE674CCC6660A49D70EF648D683615D1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen /.notdef /slash /zero /one /two /three 6{/.notdef}rp 
/colon 6{/.notdef}rp /A /B /C /D 4{/.notdef}rp /I 
2{/.notdef}rp /L 5{/.notdef}rp /R /S /T /U 11{/.notdef}rp 
/a /.notdef /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u 2{/.notdef}rp /x /y 
134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
272.288 394.473 mo
(3/10)
[2.83786 2.83783 2.12869 0 ]xsh
grestore
gsave
325.521 394.139 mo
568.719 394.139 li
568.719 211.741 li
325.521 211.741 li
325.521 394.139 li
clp
325.521 394.139 mo
568.719 394.139 li
568.719 211.741 li
325.521 211.741 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
486.316 391.267 mo
488.587 391.267 li
488.587 389.665 li
486.316 389.665 li
cp
.320134 .301427 0 0 cmyk
@
483.455 391.466 mo
482.114 390.461 li
483.455 389.456 li
.142977 .132937 0 0 cmyk
f
491.498 391.466 mo
492.839 390.461 li
491.498 389.456 li
f
499.986 391.802 mo
502.257 391.802 li
502.257 390.199 li
499.986 390.199 li
cp
500.54 390.193 mo
500.54 389.657 li
502.819 389.657 li
502.819 391.265 li
502.283 391.265 li
501.076 389.657 mo
501.076 389.12 li
503.355 389.12 li
503.355 390.729 li
502.819 390.729 li
.320134 .301427 0 0 cmyk
@
497.993 391.466 mo
496.653 390.461 li
497.993 389.456 li
506.036 391.466 mo
507.377 390.461 li
506.036 389.456 li
.142977 .132937 0 0 cmyk
f
.40066 lw
515.882 389.791 mo
517.893 389.791 li
.320134 .301427 0 0 cmyk
@
512.531 391.466 mo
511.19 390.461 li
512.531 389.456 li
520.574 391.466 mo
521.914 390.461 li
520.574 389.456 li
.142977 .132937 0 0 cmyk
f
515.212 389.12 mo
517.222 389.12 li
515.882 390.461 mo
517.893 390.461 li
515.212 391.131 mo
517.222 391.131 li
515.882 391.802 mo
517.893 391.802 li
@
529.75 389.12 mo
531.761 389.12 li
530.42 389.791 mo
532.431 389.791 li
530.42 390.461 mo
532.431 390.461 li
.320134 .301427 0 0 cmyk
@
527.069 391.466 mo
525.728 390.461 li
527.069 389.456 li
535.112 391.466 mo
536.453 390.461 li
535.112 389.456 li
.142977 .132937 0 0 cmyk
f
529.75 391.131 mo
531.761 391.131 li
530.42 391.802 mo
532.431 391.802 li
@
544.287 389.12 mo
546.298 389.12 li
544.957 389.791 mo
546.968 389.791 li
544.957 390.461 mo
546.968 390.461 li
544.287 391.131 mo
546.298 391.131 li
544.957 391.802 mo
546.968 391.802 li
.320134 .301427 0 0 cmyk
@
560.434 390.729 mo
561.506 391.802 li
@
.267102 lw
560.608 390.132 mo
560.608 389.687 560.252 389.331 559.807 389.331 cv
559.362 389.331 559.006 389.687 559.006 390.132 cv
559.006 390.577 559.362 390.934 559.807 390.934 cv
560.252 390.934 560.608 390.577 560.608 390.132 cv
cp
@
1 lc
556.144 391.802 mo
556.869 391.802 557.485 391.198 557.485 390.461 cv
557.485 389.724 556.882 389.12 556.144 389.12 cv
555.407 389.12 554.804 389.724 554.804 390.461 cv
555.608 390.059 mo
554.804 390.729 li
553.999 390.059 li
564.188 391.802 mo
563.45 391.802 562.847 391.198 562.847 390.461 cv
562.847 389.724 563.45 389.12 564.188 389.12 cv
564.925 389.12 565.528 389.724 565.528 390.461 cv
566.332 390.059 mo
565.528 390.729 li
564.724 390.059 li
@
325.521 218.196 mo
568.719 218.196 li
568.719 211.741 li
325.521 211.741 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
331.221 216.193 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83786 2.36511 2.75455 2.12866 1.41916 2.36511 1.96161 1.6319 1.41711 .121368 1.89194 3.38074 
3.31024 3.07349 1.01566 3.31024 1.6319 1.53732 2.2489 1.89191 1.95963 2.04501 2.12869 3.31024 
2.198 1.89194 3.05423 2.28134 1.89191 2.19803 1.01566 1.89191 1.45398 0 ]xsh
325.521 224.651 mo
568.719 224.651 li
568.719 218.196 li
325.521 218.196 li
cp
.870573 .840909 0 0 cmyk
f
.266767 lw
0 lc
332.691 221.379 mo
332.691 218.04 li
1 /0 /CSD get_res sepcs
0 sep
@
332.824 221.246 mo
336.163 221.246 li
@
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
336.831 222.648 mo
(Chapitre:Les\014chiers)
[2.7197 2.19803 2.04498 2.19803 1.01566 1.53732 1.45398 3.31024 3.07349 2.31619 1.89191 3.05426 
2.28134 1.89191 2.19803 1.01566 1.89191 1.45398 0 ]xsh
325.521 231.106 mo
568.719 231.106 li
568.719 224.651 li
325.521 224.651 li
cp
.539757 .507073 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: BDWBAA+CMTT12 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEH+CMTT12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B08A95D5761C3CCF93F0A9D90D1BEF46EFF0929EAD95CB6
ED648DDDD9642FC7E3BA9646B328A24A8C387C423FB5BC5DA63A3EA5A73F5CD5
255BC2AD2B0691CEFCA9A9BDE3D62CA693262A288EDBFDA53E4C809932F72C1B
9D0F2CA99BF54> |-
/one <1C60D8A8C9B08A95D5761C3CCF9304E5E02B1D7DFA584CF59363AF4724
B009650D2CEF5C2C6D8D40F3C0621A2ECC4E3135582CD216E23DAB4C5B681FC0
4A598E49B66D1A6656A9605633D224519D4FFC87C8A3EB83293CCFE773A7A57B
BF4431EDF95D60E15F5241> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEH+CMTT12 /Encoding get
dup 48 /zero put
dup 49 /one put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEH+CMTT12*1 
[48{/.notdef}rp /zero /one 206{/.notdef}rp]
QKILEH+CMTT12 nf
QKILEH+CMTT12*1 [13.8494 0 0 -13.8494 0 0 ]msf
361.599 279.082 mo
(01101001010010100100100)
[7.12695 7.12695 7.12695 7.12695 7.12695 7.12695 7.12698 14.2455 7.12695 7.12695 7.12695 7.12695 
7.12695 7.12695 7.12695 14.2594 7.12695 7.12695 7.12695 7.12695 7.12695 7.12695 0 ]xsh
QKILEH+CMTT12*1 [13.8494 0 0 -13.8494 0 0 ]msf
358.036 295.776 mo
(10010010000101011010101)
[7.12695 7.12695 7.12695 7.12695 7.12695 7.12695 7.12695 14.2456 7.12695 7.12695 7.12695 7.12695 
7.12695 7.12695 14.2594 7.12692 7.12698 7.12695 7.12695 7.12692 7.12695 7.12695 0 ]xsh
QKILEH+CMTT12*1 [13.8494 0 0 -13.8494 0 0 ]msf
386.543 312.47 mo
(1010101101101001)
[7.12695 7.12695 7.12695 7.12695 7.12695 7.12695 7.12698 14.2455 7.12695 7.12695 7.12695 7.12695 
7.12695 7.12695 7.12695 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B08A957A19FDFDED319B6FC21CBA72CCCAD76C9F46FDF
FC6CF68FD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 46 /period put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 26{/.notdef}rp /quoteright 5{/.notdef}rp /hyphen /period 16{/.notdef}rp 
/question 17{/.notdef}rp /Q 17{/.notdef}rp /c /.notdef /e 2{/.notdef}rp 
/h /i 4{/.notdef}rp /n 2{/.notdef}rp /q /r /s 
/t /u 138{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
438.438 329.164 mo
(...)
[5.79184 5.77798 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B08A950DB3141672AA80223600340D395A84CD5C8307175E13
EEE54AFD863FF8DBACB85D97235C63B7C40408A2DC9C4BDBDBF5632749921AD9
26E32E1DEE8826B089D9730BADFD2BB70DE611C358610325F3719E92A3A2A4CB
C161DC03E58012E50B798EB8CCC9A4D572027E502E8BF82CCAC4F42AFD7F> |-
/d <1C60D8A8C9B08A95A187A4CA88055502479B29A163EFC477CCC524F4F264
DD0220D51E56C6FF17923693693A8A440FEE0A3B32F5F3250E590619A4B4664D
33D14BCC67B978F900E64ACF7A6899774AFB78DA38D11F5284474102410334F7
C82555560E8048B074CCED9E82A46ED0EA6D> |-
/o <1C60D8A8C9B08A95AB3D485888812D53CC59BD116BAA89C5703233E7098F
59BE0C6F24D9FBCCFB062DE37528D581A6E8C859723132F3F15EA7EB52EA0B69
755512F51AA3FD834C03C29ED3877059D761668781D45AEC1E2453834392B5> |-
/p <1C60D8A8C9B08A95A187A4CA88052DDE2B044C1B132D90807D2B432ED955
AB6F4DC230E98BB919B605AAF258858DE0378445DA6745E39D5C42E863A75DF1
250582216637E752D482BE765AB9D6A842973D7EADD1057102FDB8E96F63E946
353967DA5DC7A98095B9B64B81CF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 97 /a put
dup 100 /d put
dup 111 /o put
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 26{/.notdef}rp /quoteright 5{/.notdef}rp /hyphen /period 16{/.notdef}rp 
/question 17{/.notdef}rp /Q 15{/.notdef}rp /a /.notdef /c /d 
/e 2{/.notdef}rp /h /i 4{/.notdef}rp /n /o /p 
/q /r /s /t /u 138{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
396.249 345.858 mo
(pourunordinateur)
[7.06183 6.51202 6.70175 8.77081 6.70175 11.0505 6.15192 4.43591 6.70178 3.08282 6.70175 6.24469 
4.70325 5.78757 6.70178 0 ]xsh
1 /0 /CSD get_res sepcs
.5 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B08A95D352586DE3151F7F7F9200DA38B821FE049B6D8BC
B649F1FF31891BD1479FC38664BED9DC5ED5BA6B037CD7D25BC87E5A78EAA9C2
A0CA9F82511446CB870D324872BC98A8298213A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen /.notdef /slash /zero /one /two /three /four 
5{/.notdef}rp /colon 6{/.notdef}rp /A /B /C /D 4{/.notdef}rp 
/I 2{/.notdef}rp /L 5{/.notdef}rp /R /S /T /U 
11{/.notdef}rp /a /.notdef /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u 2{/.notdef}rp /x 
/y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
554.528 394.473 mo
(4/10)
[2.83789 2.83783 2.12872 0 ]xsh
grestore
gsave
43.2816 580.259 mo
286.478 580.259 li
286.478 397.861 li
43.2816 397.861 li
43.2816 580.259 li
clp
43.2816 580.259 mo
286.478 580.259 li
286.478 397.861 li
43.2816 397.861 li
43.2816 580.259 li
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
204.076 577.387 mo
206.347 577.387 li
206.347 575.785 li
204.076 575.785 li
cp
.320134 .301427 0 0 cmyk
@
201.215 577.586 mo
199.874 576.581 li
201.215 575.576 li
.142977 .132937 0 0 cmyk
f
209.258 577.586 mo
210.599 576.581 li
209.258 575.576 li
f
217.746 577.922 mo
220.017 577.922 li
220.017 576.319 li
217.746 576.319 li
cp
218.3 576.313 mo
218.3 575.777 li
220.579 575.777 li
220.579 577.385 li
220.043 577.385 li
218.836 575.777 mo
218.836 575.24 li
221.115 575.24 li
221.115 576.849 li
220.579 576.849 li
.320134 .301427 0 0 cmyk
@
215.753 577.586 mo
214.413 576.581 li
215.753 575.576 li
223.796 577.586 mo
225.137 576.581 li
223.796 575.576 li
.142977 .132937 0 0 cmyk
f
.40066 lw
233.642 575.911 mo
235.653 575.911 li
.320134 .301427 0 0 cmyk
@
230.291 577.586 mo
228.95 576.581 li
230.291 575.576 li
238.334 577.586 mo
239.674 576.581 li
238.334 575.576 li
.142977 .132937 0 0 cmyk
f
232.972 575.24 mo
234.982 575.24 li
233.642 576.581 mo
235.653 576.581 li
232.972 577.251 mo
234.982 577.251 li
233.642 577.922 mo
235.653 577.922 li
@
247.51 575.24 mo
249.521 575.24 li
248.18 575.911 mo
250.191 575.911 li
248.18 576.581 mo
250.191 576.581 li
.320134 .301427 0 0 cmyk
@
244.829 577.586 mo
243.488 576.581 li
244.829 575.576 li
252.872 577.586 mo
254.213 576.581 li
252.872 575.576 li
.142977 .132937 0 0 cmyk
f
247.51 577.251 mo
249.521 577.251 li
248.18 577.922 mo
250.191 577.922 li
@
262.047 575.24 mo
264.058 575.24 li
262.717 575.911 mo
264.728 575.911 li
262.717 576.581 mo
264.728 576.581 li
262.047 577.251 mo
264.058 577.251 li
262.717 577.922 mo
264.728 577.922 li
.320134 .301427 0 0 cmyk
@
278.194 576.849 mo
279.266 577.922 li
@
.267102 lw
278.368 576.252 mo
278.368 575.807 278.012 575.451 277.567 575.451 cv
277.122 575.451 276.766 575.807 276.766 576.252 cv
276.766 576.697 277.122 577.053 277.567 577.053 cv
278.012 577.053 278.368 576.697 278.368 576.252 cv
cp
@
1 lc
273.904 577.922 mo
274.629 577.922 275.245 577.318 275.245 576.581 cv
275.245 575.844 274.642 575.24 273.904 575.24 cv
273.167 575.24 272.564 575.844 272.564 576.581 cv
273.368 576.179 mo
272.564 576.849 li
271.759 576.179 li
281.948 577.922 mo
281.21 577.922 280.607 577.318 280.607 576.581 cv
280.607 575.844 281.21 575.24 281.948 575.24 cv
282.685 575.24 283.288 575.844 283.288 576.581 cv
284.092 576.179 mo
283.288 576.849 li
282.484 576.179 li
@
43.2815 404.316 mo
286.479 404.316 li
286.479 397.861 li
43.2815 397.861 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
48.9815 402.313 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83787 2.3651 2.75454 2.12869 1.41915 2.3651 1.96161 1.6319 1.41712 .121384 1.89191 3.38074 
3.31025 3.07348 1.01566 3.31024 1.6319 1.53732 2.24889 1.89191 1.95964 2.045 2.12869 3.31024 
2.19801 1.89191 3.05424 2.28135 1.89191 2.19802 1.01565 1.89191 1.45399 0 ]xsh
43.2815 410.771 mo
286.479 410.771 li
286.479 404.316 li
43.2815 404.316 li
cp
.870573 .840909 0 0 cmyk
f
.266767 lw
0 lc
50.4507 407.499 mo
50.4507 404.16 li
1 /0 /CSD get_res sepcs
0 sep
@
50.5841 407.366 mo
53.9227 407.366 li
@
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
54.591 408.768 mo
(Chapitre:Les\014chiers)
[2.71969 2.19802 2.04499 2.19802 1.01564 1.53732 1.45399 3.31025 3.07349 2.31618 1.89191 3.05424 
2.28135 1.89191 2.19802 1.01565 1.89191 1.45399 0 ]xsh
43.2815 417.226 mo
286.479 417.226 li
286.479 410.771 li
43.2815 410.771 li
cp
.539757 .507073 0 0 cmyk
f
226.458 548.587 mo
103.32 548.587 li
103.32 425.45 li
226.458 425.45 li
226.458 548.587 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 792 ]ct
[125.601 0 0 125.601 102.089 242.181 ]ct
snap_to_device
<<
/T 1
/W 102 
/H 102 
/M[102 0 0 -102 0 102 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"-Vq6O)_\L6lpJ9)4A4O94A+<[U[&H]lg7mmKu!J>nY%O;Mr29$erEJTI.-5qju:'`2;jQ?0DDq&lO
=',&*\%4(i?'XjC]",(ameo4nIFd7^GhMG)<7D`uf;Z7Q5'pCI^!HFu^<c:4C[FUOPM69O(sj*VE8W*g
#+ob'[a/pgbM!/"GV!.)TR6Emf:T9Zor96$l1=/H3Ci+J@I*4DC30t)fU+d=>iXNI)nTF$oT@UpIcTJ$
6\c*G7#f33p%J#77LU<k2>i7TWq.1a3,-e"`iA'[DbQ]U@DIEYrP-pcP'piiY[NOMe`3lKm['HOVX`6O
^&R9a?[D8:a"3TBp;?7/HdJG*R#rU4dj@b)*'&.VA)>FtrQ<PMK.@ogNZ$<520i)0_=X.TNG"j5FmG;o
%_m;\jh4`e^UA.PBr<mB3p"l2V.ZFT3;')2#*'Tcr3$GInhL0l_hU0_:7BrtH1Bn6Ncj["hV.`#s8D?2
?MjI[cTLmXkKKGNlu;\`FR\5.UbSV`;oar;9V4;L0n9%Y`n%O6%Q^>1]mXB,n<bnUFEK4")GB5:D(M6%
<9(Lao,D<o41T@g%6';pn<TQaI.`457biF:[6q-$]<6.n8LN%L[,LX7>qkFP]0>?M6][:r1T.KnbEY5W
=*jW,Q[eQG/Df7Xg:JDUq8.3f>Ij*r079-sS:BZ=CObih"36Vmpeab5/m,NmEU6Qo)cJ6#S5IDcCS&FQ
hR%")*VfQFl-gSEk8qFYlas@7k(l+%\uPM%9.q7JS?Lgl8_;GcIr3<V?b>coCG+Jj[J?nF#HU/WoWCbq
a#6+ukeMhb*`M;JICo7Ml\>@Mn*C"a_W"Ak\F67YmX=f.J,8F(*riEZ:AMb^_SinVX>@<_p?/XXgEU))
ns$C(7l89p%V/me>4jka_SS9F`JV[_1M9aU*Ru;("k@Z=fIX(Nb)0\p1fc1k[_Z;Lrfn:L9S_K]]B9\h
H2Q'2mbG7!n<W[lDd:!TiiXr+G@B*Co+s<2]":06OaZS#:PHp3TgKd"O#t(Is0toN)p^Y=i/'[Gk^h(Y
LZb;Cn(+O`4?.K3V"'WqN1]f0pFSS/jNp=26O-\AWq'05QRm"?gq7n4\`5'-a_k]dSl51+Z:,.:^Vaq2
\G<!VE1'Y`FlLe=2`=b+4%J)hI.?OUb?$MqrS.^=02t.8\db.?T"O7SUL*oUG;c]the2hQSUF68a5(e#
(#A1N3N['f`JoAH>I]#NALBHg+7VRSkbQheY5J4[F_e0BXSl4M@n)DjbaU>^jrue/QoM(R&$NmFkr0qJ
q!E"fg,5"Qn(P(D)cg/r=PJ)fW@,0l#;3`?_YaQpGO[7=A1)?Uo.O4V\phqRfY#j6SFWd8IqeJN1X<#f
%;se#hpc6;J#OBZ91D9pHYX\emI"]\<4I&EF>jD)YqZ`5kNB&Jl(L1WJ$-pA5;4sQ+7'rlUP95]LKFU)
CsjFJGW^$DD,X56\?Ku0b#L<S/tP5<n^Aj,]-(>]41MMY7Fc`KCEsC?f7qc#W%l20D!A)C3sP/#p'3\<
[Jn\)C)jE:pUnL'lSipV]5hJbK7@U)(hN>qiJm=g?TYcOae4OCfZTb2??rmJ"+Rn(h1[d-c8!fQpoG'-
N%Nn(@af]52H.YWC[fYddq^p7Cj#0'Q$'19I.8qN=.XeKrL.<@p\Q#pL>-)@Qd7<j>4\--ng!i3ZZW<E
BtWu2++EJ.M`5gq#&\[ID6fXP.imgf"+F,e9^k1#V9?+5]Xte4$2OM[n]/q1aj6T/k'nFpjH9$Ek;^0*
ra6rEa`6N&%\a3t&TdIIjQO+`95MRrfnd]'YM.]Wmrd6CLs;0on2YmHBd]G'fQbE([1D5gfFOJI`iZj"
I.+-1/nB`R.=C9!^3AQ$;nD%(T6.2C@"l_LQ4B+B6#R#&p=+PZm6#C?=(]5=ZWI0;Cqk)`m=uYX=+4r#
MBtp\A$LqF?2;Ir2tsu_FqlO@qm5IWfhK3Q!ES(?CY0,FFrklDI^!2r8%*dR/qXNq@iMm`IRU`5_/m<o
/frugrqNP%X2!"8p`VO?7M@T5FnPIE4#Uml19Sc>*FE(JkM-7O(g(jmRKY_A\Zdd^"g*$)CtS[?qtBqP
[dpPIms8^?aH;7K5MC"gB#g8"&s](ko@l31qq$>QqpHS\rTL6\n`uO6s#n,Uf:j43oe0WrmNFL(Nl5II
aahR)K$3(]YVA9%I<HE3`!#jp/]#J?fF5B$1Uh5Wg<1883e(FFqmpoUQ_/>:A*'u9FUe7)faVd?>Ns&"
=gK&gX#\"LO2kB-T7XuEb:d6#n[IS?07;s;^R[Q2b/=g;m$!GomY"r\q#(/tc_%uA_r#l^e&IkIN>OB`
`JGt4rlPbChFGld$X`EKhtu\%7uIQ7#[Cgp3/gQW/dn#^KjPE"qb/fD=]iGYn$&2mQe2]f_j<?J0!]'a
cWrW8*kHa@P!;V,O)9oYoFfLAF"e/D[?"NE]=e$32dZC1Dt^pCmb+M/[eB[f+4&nZo(CZ7hW_(AT"/ps
euu2>H.cZ4??kOn>ph10gp?U0.qXo$5=9n7I.@#NO=1!70<*E^G=Er4j(IF#A8Zn%)7YL?@">Qlr$>F`
A`h1nCqFXlj5ruf)[IhDgpZmU,N_[lrimA9:C@gU`\om:0gH^T@4#'KfAD#GCHklb-BeK!&Kade2m2K%
eZ4"???Z/641FYqIeidU*78!/T/^8,-0NT-4gqENO01RQD',3M(7F\GGg*GR:MbaOq$IsmM[[=i*@3<g
EUb)7j)]$nI>GFA,*k=h`"VGRS8C6gs7%0mK9so0Y,3F=^Z!U6LQ<B;qI@?2Hnf)De"=F/r/I/W$CgQ(
IYZ*bp?hf3C/quh_^1e!=.am2RXXtfFm427NIL*B>K:=1]&h'Z-BB,'QoohFfCGb2#JoZuD;0f/(R^I5
)3Q<'*oDQRnJ,?lB7*04R91;<j;pB4I>lMI/0&T`F@g<_0OQP]Pt*gl/0"j5\6m\Ts7]cFh,$:*I)]d:
k?bd]giJ3u*-"6Q*+a@NB4)84LI]WNH$RXJ3!L_6iGWZkr_C+"DdI_cao=8?g=-G"p+P8dBD(PP@So!g
\D2H0ocq5aFmJPQf3C,krgRgEUCJKf`B?1[]UV(tmfaLEd9eY^;6slc`5"CVj2oMXfiGU6fJn([8EOq0
2WB.TVEVo<^mgAsT<UaDVWW>bI#39n7DF<;XlI[>ZKVrK03pW7e(bIX@k2"AI*:qdZD*fZP#bko[[gIC
?B8,=4O9KWbbO@6[J/cIY$ShYBlK_0@n2RE3apF1mOqnVDWpM(YGpmm0'.>NKo$s[V[(+sr%`PIM+aCp
=7Sqr/AC!a>PmsIU)%[P&+\jakWU*KF5HXUTA_e7$SLo]LU0/;_7.4;h7uAE!M:7TrMqm636aM=7tD!B
%dIr_LX"QnS6$G<e2h0T_9SuD?ceeMfT"LQlT9$trpF!;?[K9ATuf"@]'c;d4"fADm#LJf7l][N='p2_
LdfFl5?q*q`%trB%_S-qN:,/5k=**Eam^8cWQ?"!p\>5<:Q70?^g=Z)s2SL9KSd3+m`$l](#4;fc;BY[
H,g=u4n'][Bs8+QA=,$QF\]GNmAT_-"X^IH4(@7uG2IEfI?I+5o<['Jm2oY]l)1BXBHR3+M0XA'chF^]
kF"V2I'Gf#%[F:S)=oFL)3aSDjdI(%_G9;X%(mZ(!uEl8s,4q9Aoq\3;bq:.P>cu#^\e9ghu(p*l&4`L
qbRHcH9JuB;_RH6EYP\t_I(iDgH5<+]F+s[P(34i(Ou5R^:jRDXaPPG0E7($kR3;DFomj9re5i0^Ba%7
#@eu:`j]JKLYM3mb[EQOb+3K[1N\acp`>oUMq=,%-;LFr@^5CghE=q7%A3%EEV0lq/_tOE($""hJ.HBF
r2OhXfqmTYmlq.`Tu/O3kOApg;W[`S,-N5([IM<*\79hH-L\uM8mBCkG?bmlVR5@PHMt+3-%A]sr%VPc
qNq2#8Ue2lQ\l=;5]Dk[oAr.`VeO2*+0sJ9(HG!3-mf[mR=jtVX3,$$Ir<Z.hSZ`92.8P6r%W22-TeT\
+grS5WUfEc,n?L4Ub>EakO^8E/]LZZ^aF5eSEVgIi>I7fiT!)R)9mE9Dd87>>P=>,RNHZ74I)F*]\n-s
"de<LlHQht:Z5OWj/XiHpt!dbrU(IT^$lk##q"Y+3kFqRb9n8aAB5"9!SE:BU\<MdI<%kA5NcR+n`^p1
,NiZuEpl6!h>VdnJ$rf-E6-`I):J?1Wl\7iSU*JhnUB%tZ:<Ce/uaud8(K$;h8hg#(O_rliWjJ4(]k36
a`mM_s2,3s5$.X[9)e*uen^k(p_ta41Z3Csk%>aGmC)7,/m^[4KAt<`q%13`YK(:])dGh@fMTb)jRDd(
T=G2^WUD1R'#0d.021$/G`s5WIi(/:g4DiX0VVPpFUkoMh?Oj%>P`d2dZ-t@aK-hs$ci.d@um,d$h9H@
,sDMta[OF;DMY(X=DH$"gCfk&b2W<[5&;7rNl1V70?M2E*Ghn3\8gj?aYh1d<3+m8\[dlYD-1(V+5c.e
_RJG5>`-FjrPmHUf<X8DF!UX*?I"VgZu]7B9`E%eWCsQdO!Q-j>*t7^XhV(ZE>BF;huE*;&fYl*=a+s_
G_Z.%hTU00Mb[moPK]T$n)LcoASTD"%auJ_iBI/$A(Ws!(6@.@j7Bb2EULHtL'^jDo=bu(aB6-CT%1PC
9raX(H&0@W$CU"^=\lkPJ+qA!:Kt`7)pX^TdSk<ZQ?8BfAD>5l1W7ktGMOWC@:G=D-X?Sq^V`1=@W71+
O<n&1$1UStNc1rhI.GOqYQ!O87ispK4E6k:dIRO\)B!s9/,1a,YcZEt;K%K,";b;I(KgR93O:mHXIdJI
cqXGCme"st^)pV@iD[`lW9%CL/JT$\N"2$^4#_(uM,*)moE!>eE_Dpag5JN=rSW8(O0t:-J(s!7F+A3&
gE/$PH)Xq-5HgE^_Y0K-h"4.B&Miu>TCSaqI!l1Qf&$T8Fq*WQ@g9WEj6B4X=m/#`QejL+`;d=,P-qS.
(WXU%4Vo?uIJn;p7L^I=Sr"f.,6N7%hJ=0%YT*:GhPn>g2[b@NJLb+B/BU7rl:8U;j7Rm:Z\e'B>hBJ"
.*dgcKYrDbYQ>KUn]?c-"IIQO,Z_]fiZgS/O3eEC@k[3GNG!`c$dN,7=rU,)XL>sjaPV:5BB!@2PJ0#!
".s-\E(S=c(Hf^`gpHm_JbG:RRFaRD3?Ps+c<2MG?I\Fi+\I>Zf'7%?kik)Q-73B=/nMd*bh,&6m8X*E
00ElAL92^R#Ti,g.pu3MQK4,!S?,XNFae_@\Ml`/]['^(GNk(=SPJ)o*:J,_q<$ur^WI))q4PB@DUYfY
IIs+,JR*RXfF?ZR'B4Ue>]?5p?#WAQ#o@naiNhD3YC'p4V<=E$n!]sC%<7d2Oa$AZp)LBeM!T,(\MfZ7
FNiOj0A3`(FM?uCU=XL[oI]-`6hi/&2WP^8A'!]s(RAVAVGiFiO?&kno>8IjNVJP/Q87>n?Kp*+PBBO.
ADK]2kk!(UnJGMM-lgHthT:30,2SuRlif:+>^"f!hL><ki'LMi/bro=q-M\V(V[SiPH6DVA0%8H?[=rH
ATr8*f$e]%D]roi5[J]X^)+9Dn/f]_lr31"7P8JuE$d5%)un24o)3V-V<hE@9Da$UiahQr/eq1W*.)*)
@Uekg=A0.CL@Uj1UR1ldIp6><V8#'4Dk5brhk-At?hPgqE"40PM8f$M\N2D7mY"0_ch<Ekju<X1_H,S^
2K6L1Ac>U$p;*OX>jtg_[j7U<]NdrZqoF@`=W^9WTRE@q[:oQ1S:+1<!-btIf)GK=_uSd2YpfJm>IYM#
O$CA)*-:]'E<jJ!NmA5t2(m_"r`.oBG3%30lC0+*El:,3E%/%_^Rri:=MZAp(j(q4`U=mN#9.h_/\*ME
lO0&b#/acQ#".PFT+<;fHA9JoE@KMZI%Ke>+*c"NkFEM<s2'8CRpdI8k4<RPhkGl!r57Ds]kueaR=0)-
jKW4gk:Pc`SG6jm8-bZWN?$T!lK!2ADNR<;PhU%$]eY4D^&I_2oC)o"e@\,?d\iKqT.J26ECdW(8[e=Y
cQ3&!3393>"W-&4T@%@n`'sSEs6Z?7j85hIVamDu"b(JFG(Tb,Q9NON+uTuon29+YoqfdHlDaZp\k(]n
>jgEnj+:%>ZotO?7_BAk_QVrd[O7Al!LY<j+Zjb*Cj`]V>Oe4XM34@(GR@f>LY@`taP>hIdt:,n@Dc\b
:IiNhmeX)7B"d=)eA[qB4NN:_F1k#a@H>XV4)T"/Xrgo=#CRd@[R*/\lV*i8)#TFSUTX,gG%0?F`qmn8
%m@ErT)Hat[i[bNe>P`Ts1p;TaEkM>S55.YH*J$Da_=@RH7qs@p!X_K`O"ebM]U5&\]npIs6f"]/Umg,
F/OLu94%0LGf1-@:NM4URHsUd@:[^aL6o51OBu%Ar5D;mbI1"a9AcT;^a&22:.bHG;V#8aQM`%E@r`DE
UK/[!2*?BZhKtR4R6LS2g-;"S\&],A3<hKHgNi2`:L4g/CEA*9gF2[7:>D*Xa4@kk[C,dU_m/=bC7jQ-
>eCOc1>r>V[^fGlo_IQDcF=+oqKt@WYn`>0$-0q:R$>$gi%dE)5E>%kA0E9HIt!!njXp+jcE_rs9)iHa
0&cqX'0F#nEnNTO4h4jXLg6PJg3lU1cC&`E&Q<$?*uK9eJ$)X&2ocuh]&q'rlC-kNJc"ahAU`=SfA#bc
++4),ZH!D;"XZEG54T&n0(*DV];3FWZZ9p2&2THVo?[(FI;p*n,p2\McVAhG9Fo4j3Uu/)a<U'A*d^Vr
&o>5$^=\qm/@_o1\]RX3s"Q1I[?aY`nilcgR<0L"j"WHur7Ii9FRh)-4h$-'H-$0M55^jj?pj^);6+&^
NMi'fhB^GHi\0nMCYt^JQil"G;qt'%Z@3mbBWm26=u-Y4d:56)rNaJLPKtV+ZD?OYL!MA"eg\Q?jNgS?
)Oh"nFfHb*YIs#;^=h**mFNC&:>:'Y,m,c6Xo%G1rPahIFT:ZlNd?_DE#EK;=g`QDnE=VHhA2FdmPuCo
pqX`9?r=+W<AHJQ`'WNR5KtRd904I<k"Tdh46Ju_E76mem/;RgjB;<ok[!bEK4EpDR$9Uh6"XZc>l:4#
nP8VZJTKo0HsP<fauho?-^f</TAR@0`kL)]o>m@Mrpi7s`#5_SV0akFpY5$/=h27hGB6id]C^[_B"$_4
Ni0e:-c.TLcX(?rGV&A$)<(mBmt=3rB[2HP3)BD0SEW.`kT7:]FZ>VQoOf\2_dKI`60:A[M8P9W6c!r*
>d)piSf_4[qFfD$;r^s.PfJ,Hgs$VnVn`8JRr0.>VC[0ODg%khm@$bS1B184ErL@EpZ']EgW>kdAPHo7
CQ13"Q0Cm..k`V!3`sFED4"jq3B<1:Er,KPYg3/(m%F9j*?0V^iJq8n0"A]J/[00)NrSW5\`VVSp0+<=
``>.N?c\f[V<<HDYQn:gBYFjdE.F;,`F;"U?M56r*/r&cVf07^h>Y!kobM%8I6Bpg]#`rLkr$^C#QF0"
S&@._!OQ?G^DZE]Yl<3UaoMnJP\X<`HfGo^#u3Das-!h9V7qlF_jfePrk?h<QaOuo&o8O8f>"\r;l6`o
4:cMrK%&W[(U5^08LMG(kn14=/`12.qIm<CI.9bZOUc'XMD;HfLHpUT6heJsrcd5[dP9ma#/-gJM1OD9
.:_?MPP-l"EXa*+FIM"=HQ:-4^Yg%$'"c/=V!]4L2j[q24PR&bl&3IGLFgEgr.SXiqj-.AJ%1^tZ?*li
aX=d"p5Ep0?B%SmS$<d?p,/<tN\/k5D7IFXjuVMo<fhU074_r#K7&#i1DV[2i0)^8g19\u02,c9\iDo!
O/sMCT9OJ4gi'@pcZMhXonp0/.2,VuCaI^&M$odHK6[@Pe#sbK_Y2.Fj5;*sj'T`2@Y),jD<K3,hG`n;
h!9>=/9%"@4(H=NNJFUQN3;='*-9@>*D.;Z%]TDNN4#\;;L_KWIs_P?KHoi=XQVns9[[QHs):Jg>PaZD
P$3cpj7,Lnmh?_=7bQY9B/mBMG3B\Oo14$YZ'NF:8t.D\9DW%(#8`nqH`t5Nc,b=PMnqiA?4N]qlo8`j
=0B=%ODBHsLLi*`/(ZO5fD!>;H:.tZ+j51+l62'hHpb+$)ngkqoJ6A/pa8'oiaL0t*Y.,Sdsmm6EMo6[
]CO$ei,I?E^Pp"_CWGBfKC$S!H[kh?Fm9k:hV=Y\h]Ts91XQH#IjMV_Y]eoE8\nj#ppejinq+FhVUYdL
L?X,s@FJ!>?0Hc`k2u9\S(`nGW8Z!K/3G_ubs*Hh,u`u$cC#Ws?.?0`oJ@lFMD'flOHXsO=k9U*$QZ$i
A4PgHVmOL_m;'Z</00FQ@]X`W#rX)bnNg^+-ER6FY#"3NE-b:ImLQ'VA=ia>(gP#9jNQJMf8XXHHcPDe
a!s<-f3k`#%hn\M&Hf8(2(M`LdMkP4CKt%k6Lckn3dtN>1.cAL\:uWi7q1>6P-6u\94U>t9:mu6`I4.9
:*eTH8pe62oe2C"QX6lN6`J!-c=/_YcAqEq=Z^faR^`"Xq.I@Y-KJ:=L(;XYF`-priQ#BS+,?gWpb%Lg
:L23?iEH4e507]*a71tFZ-OMAr#rS3=mdLICeC12a/I3XS3O`&\!(u/a@I9WbP(VLfFGR<h)sdArN4ge
^mZh,6h5TE$7FjZ0f7_44Y3n)%j,i?^Is=@,Imps@0crm`]*Y+r&VAL\%Xh\h81f<Jg:);5)-2D$i\-B
Yk"_F-8'Z9hKp"kQp(>.H?)gUTR%[ASt;0%[V`LG`)go"rbSIuAI0D(/u^jnA\$@q$T\;mE\L"hK2ZJ7
LTX!&#?s&]HrAhAJj,)gjYO-[?+?I:cLiiK>BPGib'N[P=+6-)plP,M3#D8(o"(Gu,MjJsnLZr*LXZ!+
jETXeoO75@pl.J94n1=hhf\,[g!cf=Z7mW7S3:FUI4fVZ^YTd:*0Q)aeeUn`8fMKb-%1\r*FFX`br*19
=XT-b0B96Zr]5R&1FBP+fYG?DkUr:.:#F26MfZiZNpHSAl`6rSn+$kAQ$QQlQnimN`*pc'jcO"(hlYKV
.ppWJj>0p\K+!(b_;DT>qf_Ct?H'j<XGa&LNbmN)@__=I3M<pH75-4g,jO6[3i<s@#StN\i_(J2ndXcD
D>M#j3du@F;.iQ4Y(=ER9N/_#5!R\kX,oI^g,Jhk&WUK_jR0GL\k@N5IbBd@]C;!^j%m6af?5X;P.0rT
CeDt#2-]G>g.e'VFQt"SeF47*S!1?-5(h)@5O?`WO^mnO8/M*4o_bU'0<kPgG,h[/pI9ag62mk\O9>Lo
>hUn]f=]7KqskdQAZeqo=OgZ>kJ>,_PJ?,pAaR"?^BNB-<GWo3\tiCYFoACon`aij<c#r?4<D\R05<0*
k5(mmk]#4"p=YW?!N!375!O+aH[#Pi37@eh0>j[T_eW[JSj(J<aNJY=OD^nt6r'ulO(:jhkp\!D\sI0`
XlF3s=O#)OL%Xoe=!p\aHW]>I,NfnKb4X^uf0X-?WI:)aKB:f6\>7Fs]u:19d!t6DrR0T0#r)T)@unmi
E_A?@";`pMnM*%].q%Aa*<5!jQhHrVABF>TE5>2*B$I@%T:WlPD'hb1;Y(>nA^G-H8=W=:l%?n\k"cI@
+CB:C4uIP)2HO\<lRTZ-hSMZukP]RrdZ-o2SN$j01WV4t0)RK<G$YP[pLQm4dP9u!^L4:*>dKsW9(I*e
o(IOC2OXHZj;LZLj-\ggZ>3cRER3&#^Zs[DD`md<D0;rMpnLnd*':UThJp5$k*h`%gL\:h:S(</3lP:i
^"pLSEH#ZNp;pY1"+:gZ^]KhaqQ$7&n<gjMFX9.%hokk0-_JhI$%9sE5jDN``J9Ij*csNP#+mELBr*n%
b<B=l]=Cs,fBUaZguZ6A<s0'5SUG`'mW-FNos1:H7o17@9h^TS9[%_4[]>F7YP[:ZpSU4p+4(b-SF`UF
aj!Hug@N3;0C_SFI&-^t=)f%HfaBm]\)+HOa!Z1o^5I!gqUrT4,+&;sM\JhnIR1W![pg$@pYiIPl\t'7
NZr-!_7!kJWJ/0W^=Ws#W,oqPpR'baVY6JQEL,B+CM(g2s.6"]Pi./:/j/1d.K+kHB]f9UT,rb"Xh%Nn
jLr9H0]K^`;SeIMS2WHSSQs)\XppQWdPZ84EVJn3lF2#jI)Hm;%mNASagh<Gqsq>Kp_<M`R`#a8XfhjD
I['7HL1`1$RUkh:6FQ$=HX!_6oO]*,HeHi<IO)EKL[dLm/TOG<_"U(l_#9mt4*0P2?8QPjIo`WL_;?SX
2OphYpOs!C3D]GV4\Hd1O7J:Phf4g->I/CrM2TVQ?Ca8Ga5gb&NF_E=]uBAf5(cSi&BF>@6(#%1,"l-k
"eMcA\uSqc?)560bZE5.bbo]Wqt)-<]<ScpP.D#c"%V"opU[;>733n\`S^N$j=[oYh_sg!hLg)o,r`+c
B0;KK&t("ol4iieIj]B=oTdcNH<U"Xfag/Ap[CE)F&t48pF"5YiO+\GH>H>e*T'\&OrA=L@Q$\GSO;)j
Ou9F<CW'Af-Yn!d(r:[Uf=li,HORo[fFV9/p#,(#p,]t*<id1f1\q@jpmcBaM=:<_L<7\]?^l"]Y!!rc
"23FoL6srKb/m5rLYS(lVUji`rOhi"hW0pekK,]+jnS_elLne\K%nsPlJJ-d.JkR"G0ceB0jRQs3D=J>
K_G7QRBOs>hlG?P.h#>UU*KSaqRtqjlBEtW^:nC7K!?>B?i/QYA#:V9rDr0,0H]l0>#dTP6/pkO2EK['
V7bA3\]LPQYQ".5G"`<"JrT4FO"C+-[$B]$F<;$uKj6uOelu#W9CHlO,\&@((Y=)%eY?O^XNp::(Y:OK
HPc7L5CTDB.ip?(kM/oVoKK@O>5)'o>O3L,O"cX53m#c*d]6!3IGrSff%?t1dT6s.-giJQ])rk>6U06*
4G&3,1CrYEs)[(-,O8dB9+PSqJ#29/59(&\[ZWZt*9"i>W/#X-/fm+-b'39akLeHdVge.4>mqQPqu=U&
q+V-9UpKI^i;_R?n&SNoC+&oBKL]BpHm_TCZ9D">A5-sOKq-8;:-08t'Ka]\I_k2F)pUVAiqr*jnQ0JF
m)A_oN.'#7I=ljsgMaau0)pna`JsFWqb''oTB0BB\?+dn:?5Ja_l%BT]6<2mrn\/ga3RFqjYc*f(:fI.
`.f9'HO2l?hWLOrCt`a%rViJ#hQFR7?#*.[^Koc[*$(B)djs[4Z%BJ8p[]i;Q\8ME^J@On>QnaXi[Zbu
cg.-F4gQ!Ws*F;%>$1+%4F"^D->]W0^%+$s-p952IXM[r*Oj@c1LnF5h`+qjF&o=P5&9Dn2Epk*K9>?X
>$j'dc(49iF7':$CCtXV2']MN3hLcE[+e.:Q["6:i#W`fDm!TrrH?Wt<q[Ao)brt#CO8c2r@Ou`PHB(%
9_b7R]_]oXDnQ'&H?AgTj0#JeaZ]RA`Jq"c^W;u7&bG2^<^$Zklo.'\EYn9&'l,H>s'bAsHphmkj)YTs
^\^96_']#>k;2"seV\3ah+meIaD-3sf"@dOYJH;\Y.u@E*8g23rqKGp3)8h_HgUQHm1^)[))4(@9lEA`
p[-R[YnMb><ZAnYpaL?ko_$s?l:('=`h83?fnm5+cY#K'cX,ZgidC_/QW:T?N2[I;IO+Yc`&0N?bjdJL
j^.8DpaZ$`-gTRfWtTu.,[^'gIJ,enQ:JIEB<l+oA6[XPqnj\%HSQnFoS.M*V!N"krBBsE9O0FD(Rnht
GY,UN(U9;FEdB4r?1@MJDM*^,P(,K=eZ."="X^[L]!lTU*LAaG=stC7[s%d7WKi[1*Niif#BGprqpuXj
-FUI-:XA[<PdN+\O<Hi*eG2rfqtG_7H<A:\^9Sd:lO/n3-8*o^b5<u>4haP55CG0K5DlT$0s@pIjS$&i
]jq%t@7*9-T>):Ajn,U64g)L@T6dHI"l?%2br*OoA#f/-e'FfT]#sf#r451cil^mk[`?5+fAVebZOYY#
PG3i?`.a`O8`I4\?h]=IRA[FTO3Lj$X7n#*@?lno@s-+;bHJ]Uh'I78`4bo83-XN/O8MMOj?JjKN31Ek
NKP["V>hlbo:oMQQ+;&]^TghjfeUX+hVosS^`R*NIc%4;ZBaLO_55'pf>%02Xt*9H;;Y<`Ou%N[-_9TL
r7)+;>e:=VGaNF;92#!S%DVOgea[YF53$CsFSECkmlp$,eZ1nirbC?G#G*!#KijF!abeh72tOjkCkV5>
T6Q%Gc>!+H12f,"T:L,DjQ5Ij4#"tQ'(h`Ra=al/Z6UMI:5k\"13,QtYb1h7<I^C#FdDfee.9us=4\ZI
qt!t)0>71#a`F)J]Ag#?XoG,R`jr8Ij4qRco4Q:GI<sJNbgSG>pa5<\F?'":SC@&hj[a8[cK8h9WL!aW
g`)%8E!c@+*PpdHQQ\P:/GS2-nm7Z^9=A2#oNmpS.J[6V2Nk^0EO!$s]UT6(aLu?;T?gQr+u[/PqmNJ6
7udAOr"+h$RAKN;eanf>[bbf&oQ!^mr`J6RI'N;aEsa#KZ+fZ%W@,0tfeUK-EoYrQ""3jPs%+iIE'1C$
ns.^ZnWa-5a<)2dKaBu9h`nm]rqB`__li@b`uU3m`Rd%a0$X&tCQZn*pD:C?VOM0<3GmKBonSa.:7+l8
S)=-`\Mt`+:aNI'%tbC%([X)^o)8K@7/F4V'BX,.I8,Xf_aTQT:9uasc^IFG./N=Zp;kP3mX+bSo&di<
T'_HPE)kI2le^175',Vp\lRTiK7lUpq_Gn!HhYrWF6EMTJ)!pAJ3-e4Z60g$,e):)EkOm+:@pM'hsq\@
oUjT,qM(KY1]0YlY42i/8j=+eZ[N)lZ5'E#*nf_#5(#P!aS4.&G28LGca?0?D:rQ<-#:MW^!]91[BA"^
e;-9fp0Dko3bc^!SknYG?stjhZ@VqF$Mfl3=d(lCaE=@j5q_C<>$T"WMd,p_Q%-2fW0^ZQ=6mX0?GgLL
cu7")9o4_r'YG*oZ*hLiWFt@;F3"o!hX?+hEr!:Qh!/,:?#alDX2Mnum+#9<JV/#cDX*F#?Rq-umK;?r
pS6Tp7-0U[*5/#r7C'`%I!C*eJF(AgJ&!bAQa(FCd6<a8;gahqKZGsW/::IK<+8A.r\8Y^^'+2hIG`6H
.EhW74p6YWaSU*EE>p7h@r97S4T++h\'4d*U4ku6;L[6/X+eg(<fNE8n61gt]E<d[fhHS"XRWSFUKkQ+
%DH(O/:1@F1DmdIRW-grZ\H=tjF$[][Fb\1f\*hX76!*28"<c[pC`Z:G9)>C>J=VEp2N_A/GOIBiPXHj
N#5^ZfS^6N-Nk=0?W+(:#I#B3aM7(9a]`.$/BU"mCnn':_^#-_GEqoDOoMZkf_Ic+G_(L0qbX/VANqN,
YAa._#Q+:O:UsuUp6h,bO8n9iYk!3YH=d#o3n^@E2na3c(s.Rb;tp$Sr*FL)WmWdt4L/jTVdR;9A/ufg
I]a3::Y%m@c?@>OaW"IYSVC9^/)g^%<dKW6X9FNo*]Q?tm[:7Cq"ZRLZu-5!r%r6TSF^C=C7KT:;l:jQ
Z6^;3lVcu>bB8_SO+WR1_IFP\N?\3n^57@,,OaeSN76Af'DWfAZR2;J=7/#lO0FhtL7>T9>nc<Mif;g3
9b,K=*rX5_QCP4-q2!n!:FtinXKB3Ls-PO#'hb"k"M)KhaHZV\'[59$IWLt%bOn935^$rELAjup8ohkp
D6Xk)LBjE'8+$Uo,R8pPml>"%>B9MM5$U6sm5oO\53f!s=3NjKqXhUR.K99b[^m9'p5t?@:N$$gXPqNK
3ZTi2T?*\KA=.]X,u+hdnI<%DB7:Ml`$<k?M66OZZ;3+!LZDe0p5sY.mdiGYRuplbef3`>Y"]qbg\^4=
UtFmr?@e:V<H7LE%bsE,ZHRX8-*??@9h&9d.Xd"@hm3j^__CCXA\A[nlnU_Ji[^N6?]s;#`,Qj_JOd/2
hpLE?jbhs-n#Irk^Yj]8'??.1i'1'<.G.mhVLF04et:[g+h=5IOkP1n$E)DP_c`OVlq6$J=2?,$0UmRr
rX1pbMZ!9o"%S2tq2s=O'DL;LSh8FRcC!"#\@jDbVG5A;ht-Zd[qn++Gs>M<?g9cL_5F@`#(t\I-bkeq
NWoI1[#6O5CKkaKI6RE(cF"0lXa7K0\DjQEDng/:k4?lf4CdsC6(_a2Ek'kSeo.!.WH-*ReuTanD=+q2
G<Bpe8iS?q$8Z'iikPeA_?/$[o+79g^7RXaSbSDe^T_tLc8uj1giCBX;bp^XehodDMg0?tR_Nbr^9N(M
d]Q;WXr23G`>]$<Yjh]0OaH/]qlM^Nkl;4[+F-#n13,NsGn2.6_sadXl]0^9m^d0!gbl-59q3qLb2>Q-
_sc[c2/W3@`fD1s2/gKn`q!W*G&951bX("8YOB$aien&s[e5ROp$fI?]dW-;pUojjcgPO1FN^eM+1gRr
Bm3m3osAQT/foAnZ=U`@B?qVUC#$4iO5i0Ws&M&JK&:pF1j1FO\kY<KQl^Enm]+fif:I0>OGcjsD8<#+
B6S8XkFCrI_s[21S2'ToZd'J1eqt3[5.>3&cb,Z%##lEJXS1%!i'[4eIC?ihN@,RiG!EC\[a2D.[a2D.
[a2D.[a2BXbP(r@!**)&,Q~>

%%EndBinary
grestore
np
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: YHBBAA+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEF+CMSS12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/question <1C60D8A8C9B08A95A8B422CCD11BA2DDD9D1025D741539289499C
4E5809EC593DA5B52CACF394C77D2984A42B5BC848A79B621D6A4FD0C7AC782C
9262567D9F84759848454507510C2A88839C99ECF23591A96F7060CBD35CD2EE
ED50095EF88CE05BFF3EFC2F9E5A47E7464D117C0E5> |-
/W <1C60D8A8C9B08A9428A0D452C74C1041C978DDE9849F9351A9488BA1C297
89AF3A1B7E2DAA6030F079B5F7AD86899AAF71928F466EE1C362C1D20CD61DD0
881C16CF6A0D3E08583DFFE15155F070F7BA885CAE4F1526D458A50126A94A06
714128286FBCF3111483A2DE988372B068ECD2A6FFD0DE0E83CDEB24F099D63A
9629C5BB13A90540BC> |-
/p <1C60D8A8C9B08A95D8E840BC3BFE05E0D0300A335E53BBD0914F71156BC6
5D81FA1B46992C8A0F67B12F4BE8475BFEE70ADCA0DDDA81C9CCE4F75368AA74
7321535EFD20085E236EEA1D0F093031203CBF8475CC33A222D8474A0B14C7DA
1269B67E612ABC7A39689703C2A3A4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEF+CMSS12 /Encoding get
dup 63 /question put
dup 87 /W put
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEF+CMSS12*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave 26{/.notdef}rp /hyphen 4{/.notdef}rp /two 
7{/.notdef}rp /colon 4{/.notdef}rp /question /.notdef /A 16{/.notdef}rp /R 
/S 3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /d 
/e /.notdef /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u 3{/.notdef}rp /y 134{/.notdef}rp]
QKILEF+CMSS12 nf
QKILEF+CMSS12*1 [9.61581 0 0 -9.61581 0 0 ]msf
142.54 568.162 mo
(Wikipedia?)
[8.83701 2.21452 4.56845 2.21454 5.08968 4.18475 4.83008 2.21452 6.08397 0 ]xsh
1 /0 /CSD get_res sepcs
.5 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B08A95D352586DE315E2D13A820E5586B825C9B38105C08
A084352D3498866D70AC86A7B94E700442A84CEC441E1F687D95E1B685C4E8FA
FA4CD0DA927D0AD023ACE655160384E7C2A8856E5E18F0569C859CD8C70A8832
C05FB0A65511C27E7DFCC8EB0F8765731> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five 4{/.notdef}rp /colon 6{/.notdef}rp /A /B /C /D 
4{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp /R /S /T 
/U 11{/.notdef}rp /a /.notdef /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u 2{/.notdef}rp 
/x /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
272.288 580.593 mo
(5/10)
[2.83786 2.83783 2.12869 0 ]xsh
grestore
gsave
325.521 580.259 mo
568.719 580.259 li
568.719 397.861 li
325.521 397.861 li
325.521 580.259 li
clp
325.522 580.259 mo
568.719 580.259 li
568.719 397.861 li
325.522 397.861 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
486.316 577.387 mo
488.587 577.387 li
488.587 575.785 li
486.316 575.785 li
cp
.320134 .301427 0 0 cmyk
@
483.455 577.586 mo
482.114 576.581 li
483.455 575.576 li
.142977 .132937 0 0 cmyk
f
491.498 577.586 mo
492.839 576.581 li
491.498 575.576 li
f
499.986 577.922 mo
502.257 577.922 li
502.257 576.319 li
499.986 576.319 li
cp
500.54 576.313 mo
500.54 575.777 li
502.819 575.777 li
502.819 577.385 li
502.283 577.385 li
501.076 575.777 mo
501.076 575.24 li
503.355 575.24 li
503.355 576.849 li
502.819 576.849 li
.320134 .301427 0 0 cmyk
@
497.993 577.586 mo
496.653 576.581 li
497.993 575.576 li
506.036 577.586 mo
507.377 576.581 li
506.036 575.576 li
.142977 .132937 0 0 cmyk
f
.40066 lw
515.882 575.911 mo
517.893 575.911 li
.320134 .301427 0 0 cmyk
@
512.531 577.586 mo
511.19 576.581 li
512.531 575.576 li
520.574 577.586 mo
521.914 576.581 li
520.574 575.576 li
.142977 .132937 0 0 cmyk
f
515.212 575.24 mo
517.222 575.24 li
515.882 576.581 mo
517.893 576.581 li
515.212 577.251 mo
517.222 577.251 li
515.882 577.922 mo
517.893 577.922 li
@
529.75 575.24 mo
531.761 575.24 li
530.42 575.911 mo
532.431 575.911 li
530.42 576.581 mo
532.431 576.581 li
.320134 .301427 0 0 cmyk
@
527.069 577.586 mo
525.728 576.581 li
527.069 575.576 li
535.112 577.586 mo
536.453 576.581 li
535.112 575.576 li
.142977 .132937 0 0 cmyk
f
529.75 577.251 mo
531.761 577.251 li
530.42 577.922 mo
532.431 577.922 li
@
544.287 575.24 mo
546.298 575.24 li
544.957 575.911 mo
546.968 575.911 li
544.957 576.581 mo
546.968 576.581 li
544.287 577.251 mo
546.298 577.251 li
544.957 577.922 mo
546.968 577.922 li
.320134 .301427 0 0 cmyk
@
560.434 576.849 mo
561.506 577.922 li
@
.267102 lw
560.608 576.252 mo
560.608 575.807 560.252 575.451 559.807 575.451 cv
559.362 575.451 559.006 575.807 559.006 576.252 cv
559.006 576.697 559.362 577.053 559.807 577.053 cv
560.252 577.053 560.608 576.697 560.608 576.252 cv
cp
@
1 lc
556.144 577.922 mo
556.869 577.922 557.485 577.318 557.485 576.581 cv
557.485 575.844 556.882 575.24 556.144 575.24 cv
555.407 575.24 554.804 575.844 554.804 576.581 cv
555.608 576.179 mo
554.804 576.849 li
553.999 576.179 li
564.188 577.922 mo
563.45 577.922 562.847 577.318 562.847 576.581 cv
562.847 575.844 563.45 575.24 564.188 575.24 cv
564.925 575.24 565.528 575.844 565.528 576.581 cv
566.332 576.179 mo
565.528 576.849 li
564.724 576.179 li
@
325.522 404.316 mo
568.719 404.316 li
568.719 397.861 li
325.522 397.861 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
331.221 402.313 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83786 2.36511 2.75452 2.12869 1.41916 2.36511 1.96161 1.6319 1.41711 .121368 1.89191 3.38077 
3.31024 3.07349 1.01566 3.31024 1.6319 1.53732 2.24887 1.89191 1.95966 2.04501 2.12866 3.31027 
2.198 1.89191 3.05426 2.28134 1.89191 2.198 1.01566 1.89191 1.45401 0 ]xsh
325.522 410.771 mo
568.719 410.771 li
568.719 404.316 li
325.522 404.316 li
cp
.870573 .840909 0 0 cmyk
f
.266767 lw
0 lc
332.691 407.499 mo
332.691 404.16 li
1 /0 /CSD get_res sepcs
0 sep
@
332.824 407.366 mo
336.163 407.366 li
@
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
336.831 408.768 mo
(Chapitre:Les\014chiers)
[2.7197 2.19803 2.04498 2.19803 1.01566 1.53732 1.45398 3.31024 3.07349 2.31619 1.89191 3.05426 
2.28134 1.89191 2.198 1.01566 1.89191 1.45401 0 ]xsh
325.522 417.226 mo
568.719 417.226 li
568.719 410.771 li
325.522 410.771 li
cp
.539757 .507073 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B08A95127E5D23E7CD99EA7DE65045778C9D30B59A
E2CF0E4A3EB173428D338305DF8930D05DC51539BDB79655A7666E48496AA2C1
1CD72E509B08825F3E46EF4167069C5269A6> |-
/parenright <1C60D8A8C9B08A95127E5D23E7CD99EA7DE65045778CBF39AD7
40A4C98E79B47B8931CD969A87B664E3BE310578D9565146C927A8725B1D6B90
DC0195ECEC1DA817FB042166E81F9DCDF493960> |-
/one <1C60D8A8C9B08A95AB3D4858888125E0AD30D9D762E7A212C87F9AE6F7
A426D0C5D6F06E40646FF9E658ADCB7A5B259D1DD3215BC282B871E0471B90B4
CEA9CA7B59385AF1B9> |-
/U <1C60D8A8C9B08A95059D654CB8BF43C3EE2C2172FB00B6E6BD301BD43B3A
8B2F1CC767CB2B8323258D6E395670D36A456B2EB30495B6DAACAD3CB1F83691
4C84140CB6200F6755A4F5D56431> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 85 /U put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 26{/.notdef}rp /quoteright /parenleft /parenright 3{/.notdef}rp /hyphen 
/period 2{/.notdef}rp /one 13{/.notdef}rp /question 17{/.notdef}rp /Q 3{/.notdef}rp 
/U 11{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp 
/h /i 4{/.notdef}rp /n /o /p /q /r 
/s /t /u 138{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
382.162 479.635 mo
(\(1\)Un\014chierestun)
[5.06485 6.51199 9.39969 8.91626 11.0505 6.96759 5.78757 6.70178 3.08282 5.78757 8.78464 5.7876 
4.99277 9.03812 6.70178 0 ]xsh
.962158 .927459 0 .00399786 cmyk
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B08A956CF74CC16304C0915C1A3C2E4225FA06081C9C348A85
E553B8F23E7A3811F8E39DDA984E91D4BF40E41BA43C83E9ACD600919ABAA809
CAECACAF42FDC30015A4AA13F0934CD72BE6CDBF78> |-
/l <1C60D8A8C9B08A954AA63F6A570CEA745748B36855FB9B40979F8C61B7A8
D3ECCAD127E56A71> |-
/m <1C60D8A8C9B08A946DF6DDD07BCE3FFAE1040AAA2FBC971FC29EAC65DEF7
45A0BD140311C1859BEA61F58B9DAECCB119BCD54CC2272628AB4400E41F27CE
84D6CD520BFDA87D383BEFA02ADCC06744618EBD1405F00F9B8942D9F874BF05
E2ABB74120F0DFBFE7DADC2CEFDB5B18> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 102 /f put
dup 108 /l put
dup 109 /m put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 26{/.notdef}rp /quoteright /parenleft /parenright 3{/.notdef}rp /hyphen 
/period 2{/.notdef}rp /one 13{/.notdef}rp /question 17{/.notdef}rp /Q 3{/.notdef}rp 
/U 11{/.notdef}rp /a /.notdef /c /d /e /f 
/.notdef /h /i 2{/.notdef}rp /l /m /n /o 
/p /q /r /s /t /u 138{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
497.774 479.635 mo
(lot)
[3.08279 6.51202 0 ]xsh
356.112 496.329 mo
(d'informations)
[6.70175 3.61746 3.08282 6.70178 3.97882 6.15192 4.43594 10.3192 6.24469 4.70325 3.08282 6.51199 
6.70175 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
437.674 496.329 mo
(portantunnomet)
[7.06186 6.15189 4.43594 4.70328 6.24466 6.70175 9.05197 6.70178 11.0367 6.70175 6.51196 14.6541 
5.7876 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/acute <1C60D8A8C9B08A95AB3D4858888156324C3D935B44B75B781A0114BD
48D7026F259CE8347B6BE52285BFA4> |-
/v <1C60D8A8C9B08A95B44E2572D3EF460EB92861C55CBD59DDC460A22A8988
3B54B5E667876322C8870A30CD8C0D805FEB799DD2EC632FABFADDDCF9852167
80F17A12F74C0D34C312F5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 19 /acute put
dup 118 /v put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 6{/.notdef}rp /acute 19{/.notdef}rp /quoteright /parenleft /parenright 
3{/.notdef}rp /hyphen /period 2{/.notdef}rp /one 13{/.notdef}rp /question 17{/.notdef}rp 
/Q 3{/.notdef}rp /U 11{/.notdef}rp /a /.notdef /c /d 
/e /f /.notdef /h /i 2{/.notdef}rp /l /m 
/n /o /p /q /r /s /t /u 
/v 137{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
370.769 513.023 mo
(conserv\023edansunem\023emoire.)
[5.78757 6.51199 6.70175 4.9928 5.78757 4.43594 5.61725 .362854 10.1224 6.70175 6.24466 6.70178 
9.34149 6.70178 6.70175 10.1225 9.95914 .362854 5.78757 10.3192 6.51199 3.08282 4.43588 5.7876 
0 ]xsh
1 /0 /CSD get_res sepcs
.5 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B08A95D352586DE315E2D13A8D2A0720B9AFC26B7A79769D
F181174B2F173051A40C428927E73D47B1772F2A280EEDFE810F1D50D801CA3F
C3F4843B9A3A88645753E74E9EEF0C6D3866C8F7BAB01715E49032D0AA748492
C9A69B9EC381628919DA57CE53EA7E2CAE960DA32AAFBDC912E7E5E0AC9819BF
A7A799E6A3C060A055BDE84CE5F258A1DA7E026831D71EEE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six 3{/.notdef}rp /colon 6{/.notdef}rp /A /B /C 
/D 4{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp /R /S 
/T /U 11{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /q /r /s /t /u 
2{/.notdef}rp /x /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
554.528 580.593 mo
(6/10)
[2.83789 2.83783 2.12866 0 ]xsh
grestore
gsave
43.2816 766.379 mo
286.478 766.379 li
286.478 583.981 li
43.2816 583.981 li
43.2816 766.379 li
clp
43.2815 766.379 mo
286.479 766.379 li
286.479 583.981 li
43.2815 583.981 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
204.076 763.507 mo
206.347 763.507 li
206.347 761.905 li
204.076 761.905 li
cp
.320134 .301427 0 0 cmyk
@
201.215 763.706 mo
199.874 762.701 li
201.215 761.696 li
.142977 .132937 0 0 cmyk
f
209.258 763.706 mo
210.599 762.701 li
209.258 761.696 li
f
217.746 764.042 mo
220.017 764.042 li
220.017 762.439 li
217.746 762.439 li
cp
218.3 762.433 mo
218.3 761.897 li
220.579 761.897 li
220.579 763.505 li
220.043 763.505 li
218.836 761.897 mo
218.836 761.36 li
221.115 761.36 li
221.115 762.969 li
220.579 762.969 li
.320134 .301427 0 0 cmyk
@
215.753 763.706 mo
214.413 762.701 li
215.753 761.696 li
223.796 763.706 mo
225.137 762.701 li
223.796 761.696 li
.142977 .132937 0 0 cmyk
f
.40066 lw
233.642 762.031 mo
235.653 762.031 li
.320134 .301427 0 0 cmyk
@
230.291 763.706 mo
228.95 762.701 li
230.291 761.696 li
238.334 763.706 mo
239.674 762.701 li
238.334 761.696 li
.142977 .132937 0 0 cmyk
f
232.972 761.36 mo
234.982 761.36 li
233.642 762.701 mo
235.653 762.701 li
232.972 763.371 mo
234.982 763.371 li
233.642 764.042 mo
235.653 764.042 li
@
247.51 761.36 mo
249.521 761.36 li
248.18 762.031 mo
250.191 762.031 li
248.18 762.701 mo
250.191 762.701 li
.320134 .301427 0 0 cmyk
@
244.829 763.706 mo
243.488 762.701 li
244.829 761.696 li
252.872 763.706 mo
254.213 762.701 li
252.872 761.696 li
.142977 .132937 0 0 cmyk
f
247.51 763.371 mo
249.521 763.371 li
248.18 764.042 mo
250.191 764.042 li
@
262.047 761.36 mo
264.058 761.36 li
262.717 762.031 mo
264.728 762.031 li
262.717 762.701 mo
264.728 762.701 li
262.047 763.371 mo
264.058 763.371 li
262.717 764.042 mo
264.728 764.042 li
.320134 .301427 0 0 cmyk
@
278.194 762.969 mo
279.266 764.042 li
@
.267102 lw
278.368 762.372 mo
278.368 761.927 278.012 761.571 277.567 761.571 cv
277.122 761.571 276.766 761.927 276.766 762.372 cv
276.766 762.817 277.122 763.173 277.567 763.173 cv
278.012 763.173 278.368 762.817 278.368 762.372 cv
cp
@
1 lc
273.904 764.042 mo
274.629 764.042 275.245 763.438 275.245 762.701 cv
275.245 761.964 274.642 761.36 273.904 761.36 cv
273.167 761.36 272.564 761.964 272.564 762.701 cv
273.368 762.299 mo
272.564 762.969 li
271.759 762.299 li
281.948 764.042 mo
281.21 764.042 280.607 763.438 280.607 762.701 cv
280.607 761.964 281.21 761.36 281.948 761.36 cv
282.685 761.36 283.288 761.964 283.288 762.701 cv
284.092 762.299 mo
283.288 762.969 li
282.484 762.299 li
@
43.2815 590.436 mo
286.479 590.436 li
286.479 583.981 li
43.2815 583.981 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
48.9815 588.433 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83787 2.3651 2.75454 2.12869 1.41915 2.3651 1.96161 1.6319 1.41712 .121384 1.89191 3.38074 
3.31025 3.07348 1.01566 3.31024 1.6319 1.53732 2.24889 1.89191 1.95964 2.045 2.12869 3.31024 
2.19801 1.89191 3.05424 2.28135 1.89191 2.19802 1.01565 1.89191 1.45399 0 ]xsh
43.2815 596.891 mo
286.479 596.891 li
286.479 590.436 li
43.2815 590.436 li
cp
.870573 .840909 0 0 cmyk
f
.266767 lw
0 lc
50.4507 593.619 mo
50.4507 590.28 li
1 /0 /CSD get_res sepcs
0 sep
@
50.5841 593.486 mo
53.9227 593.486 li
@
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
54.591 594.888 mo
(Chapitre:Les\014chiers)
[2.71969 2.19802 2.04499 2.19802 1.01564 1.53732 1.45399 3.31025 3.07349 2.31618 1.89191 3.05424 
2.28135 1.89191 2.19802 1.01565 1.89191 1.45399 0 ]xsh
43.2815 603.346 mo
286.479 603.346 li
286.479 596.891 li
43.2815 596.891 li
cp
.539757 .507073 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B08A95AB3D4858888125EABD4F91B30DD6D57992C05E0A78
D4AF0E0B5E31B501BD0340B52763540DC74434496AE7D2F5C319DD00D491D07D
E882EF1069C3FB2343CB50230DD5C3623180A3B1ECF2EF8E5E294D4D7FCEFDC2
6AF3674BBFB801B4A05A2D2B623A74FE75E140EF63> |-
/L <1C60D8A8C9B08A95DAC19E7C0048DB4E2E98F10409848110CC490E559C17
D1BB23DA504AA5AE68C4E7B6E85FBAC67B173D172560> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 50 /two put
dup 76 /L put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 6{/.notdef}rp /acute 19{/.notdef}rp /quoteright /parenleft /parenright 
3{/.notdef}rp /hyphen /period 2{/.notdef}rp /one /two 12{/.notdef}rp /question 
12{/.notdef}rp /L 4{/.notdef}rp /Q 3{/.notdef}rp /U 11{/.notdef}rp /a 
/.notdef /c /d /e /f /.notdef /h /i 
2{/.notdef}rp /l /m /n /o /p /q /r 
/s /t /u /v 137{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
73.819 664.677 mo
(\(2\)Les\014chierssontlaplupartdu)
[5.06483 6.512 9.3997 7.04665 5.78757 9.3415 6.96761 5.78757 6.70177 3.08281 5.78757 4.43594 
9.34149 4.97893 6.51199 6.70177 9.05199 3.08281 10.5795 6.70177 3.08281 6.70178 6.70177 5.88457 
4.43596 9.05197 6.70175 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
63.6168 681.371 mo
(temps)
[4.70325 5.78757 10.3192 6.70177 0 ]xsh
.962158 .927459 0 .00399786 cmyk
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
100.456 681.371 mo
(conserv\023essur)
[5.78757 6.51199 6.70177 4.99277 5.78757 4.43593 5.61726 .362854 5.78758 9.34148 4.99278 6.70177 
0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
176.248 681.371 mo
(desm\023emoiresde)
[6.70177 5.78758 9.34149 9.9453 .362854 5.78758 10.3192 6.51198 3.08284 4.43593 5.78757 9.34151 
6.70177 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
79.3426 698.066 mo
(massetelsqueles)
[10.3192 6.24467 4.99277 4.99278 10.1224 4.70327 5.80142 3.0828 9.32765 6.70178 6.70177 10.1224 
3.08282 5.80141 0 ]xsh
.962158 .927459 0 .00399786 cmyk
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
180.668 698.066 mo
(disquesdurs)
[6.70177 3.08282 4.99278 6.70177 6.70177 5.78757 9.32764 6.70177 6.70177 4.43593 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
246.796 698.066 mo
(.)sh
1 /0 /CSD get_res sepcs
.5 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B08A95D352586DE315156F8E8FCDB90AA8545F8FA1C9C1
CC67D6ABC4F48B49E34E5137E67AF8CF1F7E77EA1AEBDBCD74E21531401CAE4C
BA7296465B65C4759A8EF098> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven 2{/.notdef}rp /colon 6{/.notdef}rp /A /B 
/C /D 4{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp /R 
/S /T /U 11{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /q /r /s /t 
/u 2{/.notdef}rp /x /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
272.288 766.713 mo
(7/10)
[2.83786 2.83783 2.12869 0 ]xsh
grestore
gsave
325.521 766.379 mo
568.719 766.379 li
568.719 583.981 li
325.521 583.981 li
325.521 766.379 li
clp
325.522 766.379 mo
568.719 766.379 li
568.719 583.981 li
325.522 583.981 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
486.316 763.507 mo
488.587 763.507 li
488.587 761.905 li
486.316 761.905 li
cp
.320134 .301427 0 0 cmyk
@
483.455 763.706 mo
482.114 762.701 li
483.455 761.696 li
.142977 .132937 0 0 cmyk
f
491.498 763.706 mo
492.839 762.701 li
491.498 761.696 li
f
499.986 764.042 mo
502.257 764.042 li
502.257 762.439 li
499.986 762.439 li
cp
500.54 762.433 mo
500.54 761.897 li
502.819 761.897 li
502.819 763.505 li
502.283 763.505 li
501.076 761.897 mo
501.076 761.36 li
503.355 761.36 li
503.355 762.969 li
502.819 762.969 li
.320134 .301427 0 0 cmyk
@
497.993 763.706 mo
496.653 762.701 li
497.993 761.696 li
506.036 763.706 mo
507.377 762.701 li
506.036 761.696 li
.142977 .132937 0 0 cmyk
f
.40066 lw
515.882 762.031 mo
517.893 762.031 li
.320134 .301427 0 0 cmyk
@
512.531 763.706 mo
511.19 762.701 li
512.531 761.696 li
520.574 763.706 mo
521.914 762.701 li
520.574 761.696 li
.142977 .132937 0 0 cmyk
f
515.212 761.36 mo
517.222 761.36 li
515.882 762.701 mo
517.893 762.701 li
515.212 763.371 mo
517.222 763.371 li
515.882 764.042 mo
517.893 764.042 li
@
529.75 761.36 mo
531.761 761.36 li
530.42 762.031 mo
532.431 762.031 li
530.42 762.701 mo
532.431 762.701 li
.320134 .301427 0 0 cmyk
@
527.069 763.706 mo
525.728 762.701 li
527.069 761.696 li
535.112 763.706 mo
536.453 762.701 li
535.112 761.696 li
.142977 .132937 0 0 cmyk
f
529.75 763.371 mo
531.761 763.371 li
530.42 764.042 mo
532.431 764.042 li
@
544.287 761.36 mo
546.298 761.36 li
544.957 762.031 mo
546.968 762.031 li
544.957 762.701 mo
546.968 762.701 li
544.287 763.371 mo
546.298 763.371 li
544.957 764.042 mo
546.968 764.042 li
.320134 .301427 0 0 cmyk
@
560.434 762.969 mo
561.506 764.042 li
@
.267102 lw
560.608 762.372 mo
560.608 761.927 560.252 761.571 559.807 761.571 cv
559.362 761.571 559.006 761.927 559.006 762.372 cv
559.006 762.817 559.362 763.173 559.807 763.173 cv
560.252 763.173 560.608 762.817 560.608 762.372 cv
cp
@
1 lc
556.144 764.042 mo
556.869 764.042 557.485 763.438 557.485 762.701 cv
557.485 761.964 556.882 761.36 556.144 761.36 cv
555.407 761.36 554.804 761.964 554.804 762.701 cv
555.608 762.299 mo
554.804 762.969 li
553.999 762.299 li
564.188 764.042 mo
563.45 764.042 562.847 763.438 562.847 762.701 cv
562.847 761.964 563.45 761.36 564.188 761.36 cv
564.925 761.36 565.528 761.964 565.528 762.701 cv
566.332 762.299 mo
565.528 762.969 li
564.724 762.299 li
@
325.522 590.436 mo
568.719 590.436 li
568.719 583.981 li
325.522 583.981 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
331.221 588.433 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83786 2.36511 2.75452 2.12869 1.41916 2.36511 1.96161 1.6319 1.41711 .121368 1.89191 3.38077 
3.31024 3.07349 1.01566 3.31024 1.6319 1.53732 2.24887 1.89191 1.95966 2.04501 2.12866 3.31027 
2.198 1.89191 3.05426 2.28134 1.89191 2.198 1.01566 1.89191 1.45401 0 ]xsh
325.522 596.891 mo
568.719 596.891 li
568.719 590.436 li
325.522 590.436 li
cp
.870573 .840909 0 0 cmyk
f
.266767 lw
0 lc
332.691 593.619 mo
332.691 590.28 li
1 /0 /CSD get_res sepcs
0 sep
@
332.824 593.486 mo
336.163 593.486 li
@
1 /0 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
336.831 594.888 mo
(Chapitre:Les\014chiers)
[2.7197 2.19803 2.04498 2.19803 1.01566 1.53732 1.45398 3.31024 3.07349 2.31619 1.89191 3.05426 
2.28134 1.89191 2.198 1.01566 1.89191 1.45401 0 ]xsh
325.522 603.346 mo
568.719 603.346 li
568.719 596.891 li
325.522 596.891 li
cp
.539757 .507073 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B08A95AB3D48588881D5D92E13CF580AD87849463FB72E
1107DA7D21BED259EF9E1F8CC03D32B285064B08C2075DD6BD1D98208102C04A
F855F2265AA5BD0CBF62C9153F91E6967546CCB4261431E9E60490BE05EC854B
6047E3C4EC1D6692FB7FC4DB297EAC34AF34F001CAB39D880D36D8C7AE4595BC
9EECCB0846B32C5BAA62> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 6{/.notdef}rp /acute 19{/.notdef}rp /quoteright /parenleft /parenright 
3{/.notdef}rp /hyphen /period 2{/.notdef}rp /one /two /three 11{/.notdef}rp 
/question 12{/.notdef}rp /L 4{/.notdef}rp /Q 3{/.notdef}rp /U 11{/.notdef}rp 
/a /.notdef /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m /n /o /p /q 
/r /s /t /u /v 137{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
347.526 651.322 mo
(\(3\)Les\014chierssontclass\023esdansdes)
[5.06485 6.51199 9.39969 7.04666 5.78757 9.34149 6.96762 5.78757 6.70178 3.08279 5.7876 4.43594 
9.34149 4.99277 6.51199 6.68793 9.05197 5.78757 3.08282 6.24466 4.99277 4.63272 .362823 5.78757 
9.32767 6.70175 6.24469 6.70172 9.34149 6.70178 5.7876 0 ]xsh
.962158 .927459 0 .00399786 cmyk
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
353.179 668.016 mo
(r\023epertoires)
[4.07584 .362854 5.78757 7.06186 5.78757 4.43594 4.70325 6.51202 3.08279 4.43594 5.78757 0 
]xsh
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B08A957A19FDFDED31EB27566F46E979D29F3D8E21F298
036E112E0E8EDE00F6A615D256F3FA05> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 44 /comma put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 6{/.notdef}rp /acute 19{/.notdef}rp /quoteright /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one /two /three 
11{/.notdef}rp /question 12{/.notdef}rp /L 4{/.notdef}rp /Q 3{/.notdef}rp /U 
11{/.notdef}rp /a /.notdef /c /d /e /f /.notdef 
/h /i 2{/.notdef}rp /l /m /n /o /p 
/q /r /s /t /u /v 137{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
410.205 668.016 mo
(,chaquer\023epertoirepeut)
[7.95236 5.80142 6.6879 6.24469 6.70175 6.70178 10.1363 4.07584 .362854 5.78757 7.06186 5.78757 
4.43594 4.70325 6.51199 3.08282 4.43591 10.1224 7.06189 5.80139 6.68793 0 ]xsh
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
345.571 684.71 mo
(contenird'autresr\023epertoires,formant)
[5.78757 6.51199 6.70178 4.70325 5.78757 6.70178 3.08279 8.77081 6.70178 3.61746 6.24466 6.70178 
4.70325 4.43594 5.78757 9.34149 4.07587 .362823 5.78757 7.06186 5.7876 4.43591 4.70328 6.51199 
3.08279 4.43594 5.78757 4.99277 7.95236 3.97882 6.15189 4.43591 10.3193 6.24469 6.70172 0 
]xsh
1 /0 /CSD get_res sepcs
1 sep
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
352.519 701.404 mo
(ainsiune)
[6.24466 3.08282 6.70178 4.99277 7.41769 6.70175 6.70178 0 ]xsh
.962158 .927459 0 .00399786 cmyk
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B08A95A187A4CA88055502479B29A163EFC477CCBFC9666628
6A648F2A864165EE866FAF485DF94C04B50106B2392F41E478FA7C9FC406A169
FD6DD1CA03C11511D1538DCF72E3B4E475044ACF3DEE7CCD4FDFAE648F6E5688
743CBA69E21A4D520AA15382E4BFE79C9A> |-
/g <1C60D8A8C9B08A95AB3D4858888155BA39B42DF8C1D661756F9A0F61CFC2
A0A87ABF1E8711063344639B1044F4C84505B4B4BD4872FC35169373F803CF22
20BCBF870435F0E868F1640E2C8D58888E025B4A9689EDEA8ADDC7EA1D230ADB
DE97C471A4CAF388E3E4FC7CE1041A785F8C1905C004A2BAA6A186C67D4E9909
CDB0E6EC74AD73A899B789253F56B50D1D16D1CF42953580EB8C03ED218E77A7
63354D353ED8A8C7EE8100231AB8B9F56DC8B52B7C2ACC03D4305988C4814FE0
AD80F701F2C1B1371136AD78676772F50D129F8062EF20> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 98 /b put
dup 103 /g put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 6{/.notdef}rp /acute 19{/.notdef}rp /quoteright /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one /two /three 
11{/.notdef}rp /question 12{/.notdef}rp /L 4{/.notdef}rp /Q 3{/.notdef}rp /U 
11{/.notdef}rp /a /b /c /d /e /f /g 
/h /i 2{/.notdef}rp /l /m /n /o /p 
/q /r /s /t /u /v 137{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
404.499 701.404 mo
(organisationarborescente)
[6.15192 4.43591 6.51199 6.24469 6.70175 3.08282 4.99277 6.24469 4.70325 3.08282 6.51199 11.0366 
5.88458 4.43594 7.06186 6.15192 4.43591 5.7876 4.99277 5.78754 5.7876 6.70178 4.70325 0 
]xsh
1 /0 /CSD get_res sepcs
1 sep
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
372.166 718.098 mo
(appel\023ee)
[6.24469 6.70175 7.06186 5.78757 2.72275 .362823 5.7876 0 ]xsh
0 1 1 .00173953 cmyk
true set_gvm
%ADOBeginSubsetFont: AUXAAA+CMSS17 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEG+CMSS17 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/grave <1C60D8A8C9B08A95AB3D4858888156324C3D935B44B775D5C5819FF6
F1E38EF194A9F2F520DDBEBE7E75> |-
/y <1C60D8A8C9B08A95B44E2572D3EF369891017C37E2ABFFB3963679206D56
4AB6E9FA9FB5BCADD3453E7CF99CA127E72EC14CE98E092EA8EB950B0FA74CA3
BDE1BDCB4DBB2D7FE19CF6E576F874A35E576131D1719F085600CDAB5F1D275F
D4D949870C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEG+CMSS17 /Encoding get
dup 18 /grave put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEG+CMSS17*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright /parenleft 
/parenright 2{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one /two 
/three 11{/.notdef}rp /question 12{/.notdef}rp /L 4{/.notdef}rp /Q 3{/.notdef}rp 
/U 11{/.notdef}rp /a /b /c /d /e /f 
/g /h /i 2{/.notdef}rp /l /m /n /o 
/p /q /r /s /t /u /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
QKILEG+CMSS17 nf
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
416.958 718.098 mo
(syst\022emede\014chiers)
[4.99277 5.97736 4.99277 4.34317 .362854 5.78757 10.3192 10.1363 6.70178 10.1224 6.96762 5.78757 
6.70175 3.08282 5.78757 4.43594 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QKILEG+CMSS17*1 [13.8494 0 0 -13.8494 0 0 ]msf
518.45 718.098 mo
(.)sh
1 /0 /CSD get_res sepcs
.5 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B08A95D352586DE315E2D13A82270CBFE4140D10B5CD97
09E7ABAD8DF6FEEDBA008C9468E9456FA28FD5CD2973E05F91E987EA1546AC6E
5324E5427B8BAA3F651CA52440B9F19D957CFCF30DB7C927D663BA561CBFE063
EF3A991F0275A02E18689B95422DE5BE5D892818FCC987D3AE1362B01E9E479B
C191DAF0C7E296A7B230A8051780C1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /.notdef /colon 6{/.notdef}rp /A 
/B /C /D 4{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp 
/R /S /T /U 11{/.notdef}rp /a /.notdef /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
554.528 766.713 mo
(8/10)
[2.83789 2.83783 2.12866 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 9 2
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/2 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 12 mo
12 780 li
600 780 li
600 12 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
43.2815 208.019 mo
286.478 208.019 li
286.478 25.6212 li
43.2815 25.6212 li
cp
clp
43.2815 208.019 mo
286.478 208.019 li
286.478 25.6212 li
43.2815 25.6212 li
cp
false sop
/1 
<<
/Name (Black)
/3 
[/DeviceCMYK] /CSA add_res
/CSA /3 get_csa_by_name
/MappedCSA /3 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
204.076 205.147 mo
206.347 205.147 li
206.347 203.545 li
204.076 203.545 li
cp
.308354 .28983 0 0 cmyk
@
201.215 205.346 mo
199.874 204.341 li
201.215 203.336 li
.138705 .129152 0 0 cmyk
f
209.258 205.346 mo
210.599 204.341 li
209.258 203.336 li
f
217.746 205.682 mo
220.017 205.682 li
220.017 204.079 li
217.746 204.079 li
cp
218.3 204.073 mo
218.3 203.537 li
220.579 203.537 li
220.579 205.145 li
220.043 205.145 li
218.836 203.537 mo
218.836 203 li
221.115 203 li
221.115 204.609 li
220.579 204.609 li
.308354 .28983 0 0 cmyk
@
215.753 205.346 mo
214.413 204.341 li
215.753 203.336 li
223.796 205.346 mo
225.137 204.341 li
223.796 203.336 li
.138705 .129152 0 0 cmyk
f
.40066 lw
233.642 203.671 mo
235.653 203.671 li
.308354 .28983 0 0 cmyk
@
230.291 205.346 mo
228.95 204.341 li
230.291 203.336 li
238.334 205.346 mo
239.674 204.341 li
238.334 203.336 li
.138705 .129152 0 0 cmyk
f
232.972 203 mo
234.982 203 li
233.642 204.341 mo
235.653 204.341 li
232.972 205.011 mo
234.982 205.011 li
233.642 205.682 mo
235.653 205.682 li
@
247.51 203 mo
249.521 203 li
248.18 203.671 mo
250.191 203.671 li
248.18 204.341 mo
250.191 204.341 li
.308354 .28983 0 0 cmyk
@
244.829 205.346 mo
243.488 204.341 li
244.829 203.336 li
252.872 205.346 mo
254.213 204.341 li
252.872 203.336 li
.138705 .129152 0 0 cmyk
f
247.51 205.011 mo
249.521 205.011 li
248.18 205.682 mo
250.191 205.682 li
@
262.047 203 mo
264.058 203 li
262.717 203.671 mo
264.728 203.671 li
262.717 204.341 mo
264.728 204.341 li
262.047 205.011 mo
264.058 205.011 li
262.717 205.682 mo
264.728 205.682 li
.308354 .28983 0 0 cmyk
@
278.194 204.609 mo
279.266 205.682 li
@
.267102 lw
278.368 204.012 mo
278.368 203.567 278.012 203.211 277.567 203.211 cv
277.122 203.211 276.766 203.567 276.766 204.012 cv
276.766 204.457 277.122 204.813 277.567 204.813 cv
278.012 204.813 278.368 204.457 278.368 204.012 cv
cp
@
1 lc
273.904 205.682 mo
274.629 205.682 275.245 205.078 275.245 204.341 cv
275.245 203.604 274.642 203 273.904 203 cv
273.167 203 272.564 203.604 272.564 204.341 cv
273.368 203.939 mo
272.564 204.609 li
271.759 203.939 li
281.948 205.682 mo
281.21 205.682 280.607 205.078 280.607 204.341 cv
280.607 203.604 281.21 203 281.948 203 cv
282.685 203 283.288 203.604 283.288 204.341 cv
284.092 203.939 mo
283.288 204.609 li
282.484 203.939 li
@
43.2815 32.0759 mo
286.478 32.0759 li
286.478 25.6205 li
43.2815 25.6205 li
cp
1 /1 /CSD get_res sepcs
1 sep
f
1 /1 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
48.9815 30.0731 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83787 2.3651 2.75454 2.12869 1.41915 2.3651 1.96161 1.6319 1.41712 .121384 1.89191 3.38074 
3.31025 3.07348 1.01566 3.31024 1.6319 1.53732 2.24889 1.89191 1.95964 2.045 2.12869 3.31024 
2.19801 1.89191 3.05424 2.28135 1.89191 2.19802 1.01565 1.89191 1.45399 0 ]xsh
43.2815 38.5313 mo
286.478 38.5313 li
286.478 32.0759 li
43.2815 32.0759 li
cp
.824216 .796414 0 0 cmyk
f
.266767 lw
0 lc
50.4507 35.259 mo
50.4507 31.9204 li
1 /1 /CSD get_res sepcs
0 sep
@
50.5841 35.1256 mo
53.9227 35.1256 li
@
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
54.591 36.5278 mo
(Chapitre:Les\014chiers)
[2.71969 2.19802 2.04499 2.19802 1.01564 1.53732 1.45399 3.31025 3.07349 2.31618 1.89191 3.05424 
2.28135 1.89191 2.19802 1.01565 1.89191 1.45399 0 ]xsh
43.2815 44.9859 mo
286.478 44.9859 li
286.478 38.5306 li
43.2815 38.5306 li
cp
.514061 .481117 0 0 cmyk
f
103.32 153.313 mo
226.44 153.313 li
226.44 68.4124 li
103.32 68.4124 li
cp
gsave
1 /1 /CSD get_res sepcs
clp
[1 0 0 -1 0 792 ]ct
[123.12 0 0 84.9011 103.32 638.686 ]ct
snap_to_device
<<
/T 1
/W 451 
/H 311 
/M[451 0 0 -311 0 311 ]
/BC 8 
/D[0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 2
>>
%%BeginBinary: 1
sepimg
Gb",kbE(CKHGI^A5MJ><NaLT`9maC!N%MNpVIs_Gh&C0O0gTHY4'62%RKQ.]dbC)klMsgX3TRsu:EYM2
CkD"^[/b9iTeF=4#(7_XK7Y4:GgRrV!]o\5&b60+^*:0nPa]S#7$_+C1g8]Zoi2`VWo?BTIBLOt)f-Z-
gMhkj_\Fp;=3*L/+nKZ,bek/N%p-h7>Tr]XL!7FL1(RI-4Bs'$9GGVu&^%15B>R%[:5N4bXZ6C`$B6lj
Yfdb^Kn)KAc0Jo?6=#g:ZR_rS'.4OJ(&n&`$Q%*D/9-e#:-TuU=_brJ8;'=WP)fR,o\%j<\97,gN@V>2
)jY)%58867'hl5li0Q(MDF^o^.*-5iWe:MMcka:g6n!Fm$aLm32%b!';l:ZlI^=>"euV246\^=8e?UB2
M1UH>?%A'7,,9u'=`Bj$PKCS0!f9aP3?iWGVr^I0(8C<cp4J4=>n'IPj9Wh?JN9q[g2bdZD6bBC-,G.\
Ub"n-lc=kmX2P^F:ppoNAOjYD,puUsnrP0)FQe9H[5;`%ojZX2aKn:_rFAXaSZl4*'I)4b1Pg:07o($/
qAYfBTb"V/P=XFC7>hSYE(iXmXn(]dc,iJG6HO,UZJA-O&.W8Fk\_$7Y'%g9WX4t6)kq)/]ci18`Olj"
9[jZRMVor.C*M+d[G=1b,/\6bU(.f[_3J_,r\%-4i(184&.'QM:09@+cO7W)`kT`Ze%UJK_h&W?3<c<g
(9ETr4P;B/F+k>PqhImN@7:HNjSRd%J$&_2D,U);_J0Y[il.>9NQ84@M0[&T<e;3C&*kZ(I@6R'!n.M.
Dl81;X9)<-0/'6a;L'#?*5fOEa?3]No5KE-_\Fp;=3*KiKh^#fG&>LPpp]do6U7>rLV74<NZGC;.W_JT
-rb2qQB]D13ccW!S=k_NP1X#ErAan4ef_66>&>@2FSXqLe)?7gckP#0T0..71/[9-LmoG,1`GlkgUMCd
lD7Dh<EDO+11\nAB()eYb_s:"KguL?\9kaKH)e=mD&>+aAE7Pci46Pp7,dTNXBiLn)srV:#o9h#VN.08
[6W:5+YKdho--RG`]^LI%Yj$&i1N:!%r-?>%nGILn?@,2nAh/=gph_E7eCU:D<XUBOUVr:D]CA4/+%!"
1WYKSke%1$kl3YVpNl3mHe?=qm/9<N4]2"O:[d,NHu_cQ>2DD!RL29b+h3h\l:.4f@HBPVV;Gh(%.OZp
]j@)C[kAd,'HU\>aHEn?q,Xu7W"s?+YmL__K2@8]a/9Y5jN!Km0\,8R[=Bd'/*u_I]6jM1@+;4d]RLip
dJcPmlR/SE$9J!6/ncnU*6kVT2nVpM_esX/KF!:Z-P^%s9-LLUYL_=WDdB1gP`PhuOXa-[R_>-"/1(_k
^?<MJK%>r:pb"#nh$4JYh52V`\]7s\O>M#e=E!:M\2YfBbu("?!'S!dXsj4](XF0u'RI6UHZtaU[bW5'
Qm6W)O/6X=&"=S,Ot9fATh\O-D*bIEc$P<8h>CFd'87&_9Q4.S8&N*oBl(L&$K(9a#Ugt-R!X%BM`)3M
URTCX)*+unm^s4+>IHB)(1`=C]@l36?0NZ\#ncs.U?O!h+$S?1H1C*(<!^eI]?58]gdl(@ZX%U`\KeI<
n)e1K2EK4L"A(@Gb948J'?qlhP]kqpnFOL-J,=/5qQlgo,+_"tGBOm/pYSDn@*-0ah#G:X=s+@TJ6a8,
2%31m]fYT1N[N-r07dG3hFHa-?UDDGo92\j?8Z'0ds1]TiLLqVTL'G8h,TKWnVZPL##in+/5\=I<!'#Y
ogWsV*sUA`mTiGl8t81TlAHGpL%S705MCJtcfW.BGLip'/?RV,$<9W71&(,dGKB16Z6:FQh/;)#macsG
BLrihP[P70Ig-ngG^$!Ze$HV:N[]ZTbJMNsg-u]=?G@po%f*nZnJ&!bgg]^/<PE5dJp3894D>^.;'7YZ
&BF:IpBq1'dCTp[]OZ!uUJ<WDor"WZbH"^.n\K7u8%p9Glp.!GZ"<'CGtqtd_00uN.95"2&h9Pn[o;G@
_:\c#@KdI3$WkCaQ4@!;^-X3n2eNQ%Y^H"jGD7WL!b[g;I'VGXaU2*O4qS.:o>MN\`YDMr:Z5>&H]#*B
^*E\[=?8k/]l7LNq2DUm_Hj=KCsFS=?X"'(gPSn,/.+ZBmL031)[\7%d!2N<,'Djt.pQN)S>@DYb&."'
$!"OqRt5cN+e<8'Z;u,hjpY>44Bs'$E.uNR'f$;$a?3]No5KE-_\Fp;=3*L/+nKZ,bek/N%p-h7>Tr]X
L!5`[iQ<r7fi+,RkBT2mrf\g:;r1<Ac$/aq!EU,_];9IZXW5'.h,ubfh_g+![0Cee-'__EUJnrC7_f`S
"BQEL<u:s>=:e_G1gFGl>[]p;L!aGWCHkI`8sE@uM2a-HJ3kd4Zia>]Kr#Mi@\X;UTJ0HE,qYJ#dY]Z^
d=oCOQ;hmE'W:F?@4>D,MCA=+Q<OJbCij)"VbdAr/n_cGZA>6/Pq3S)QItE<-r/_Ai9!-9`[,`sMnZl.
L-d;5,@dJV,@7&d$_iT5N[>rI(21$4CA@&Bc$Ml0KMlCR#/<Hu7\;Zn0=iikcr`kk!]u!@4DDR^qXBXi
Mq(l7SH*ifNbu@ZL)lZp8&O*9>D4T7C]d<72?_WRWVm!XDJU&c&/o=e+uX;]04)YYk-[C[jR#ZR'Y:/P
8K-/K8fS</lkHW7(17S$!'g)^&#&4SU(p;1UKY^WS%E"m6VH9E8"kel1$Tm-:'uOsL%JHm6Qn4h/t<XE
[m%00L(kibEQ,mIeGKZh%m>id>SNomCS)=0[m%007MMj`%&DU>8db/ekir66#&b8=OGYq)Uu'tG04+?V
+'LE5$:TnZN-*ZkKS:r+>^6"$NeM9S2^=24;P=Hb,mClW?TaJ6[6Cs.-57ZOgQ>-LA=WHD,c<Br+0l_`
FHHomj:rt6_;`@:c]#_/bXl6[U'jtgWar9:TVAt`s"CN/6ciSA5t,jKra/o=L6AU60IM,[jt/X+_VC-R
P!Vmlrq*Dnp8:.@LF*N0kAS*1Qfuqn3>=g-J+=D*9e/8rljBL,rQR8+E@"[Y+`RGGm<`'lTnrc`:m<Wn
Op,As#b52274UD"R2&1M>#E"o/\6fH?T#^qY+g;.F?tH4$H%cs^oP*T_b4$pG&5P@<;<C5at#pV,(.Lc
7l_;^MGD$`HjV;K/'<q49<Of%3u#+;jZBh\'65O\%j+4]Ks[5)o#(6S/+gdgi;DlJlP)N_P\o-[#p8;+
81ck?f079UOPXY>q*BUqZT#H4VA,W687b.c5,0boiBh.1$%g3Z;.2kf($0d6$I7Gj@US-&R.=(<]s=]#
!3S!WY)mq=6K[56R>3;'*j1TM\3f?:$CQZ"A0.n8H+63'i<l!..qB^(OEn?&k2?[15Z,'&P+a:2/[dp:
PhUjGKk4&I^CX:\'<\QcUtd<@.K$KM$jP5j78c1Bga:5o/F3A3R\;K1TZ\'N.hl(+Hml.Zq+t<>o:`Z\
k!O-Bb_O?;0^h0J"Z<!hC/cu'Z?!sJkmFIGhg^4-W+IGg3I,'O;$s?Y=aYeNW+IGGT+E[_Vs![3$5X__
_?p[>n%Y6)S1-'idC%-!n;E^!%S7@tfu@Uo'3WM1k5,[mL>Yct(giEcC7M,U9$1+k6>&t#RHcdfe.r!1
<gpniaW>0DAc*h\p;+;'B9FZr11;Se*\)4W3=$7(%=e//YD?PF[=el3RrfX-W\A^:njD5j<bT'Co,^h!
j55Gj+0DD@#k*-M2`nA\#<@tf"JI7iBa3Ldkpn$9#9p1Q*i2]!8AYLt,V_!WLf@RSK]>l@$9Q:Z8G39k
'`ClQ4OiD<d0^'3(.f??,P`&'%UJ%ST5Hj6T[;G63nA#Gj@aM)KVm+<lq&iUM$I_EBP^*f`/[P=qplc$
3EXg:%<j!`d1s4sDF#Ds5U?4/FtDH8\kNM(1e+2"\giAI\YeITq[Agkn0cu:1FnD&3c[ri(PFi2qW/eL
1j<ZafT&n/_ZE&]+-P'Pj%rST.FrZ"A<U3],.?#;(9F`a3=-Fucu5GWH?71uChjp'h0Cpnb1(1E.b$S7
jH9fU$'0?G,1U\H>*6Q'/E<sC3OqIi)7fa`'dcfAY8u#dA-u<f=XOQ=D8P-e4B,dDEcf:k.2;+]'t3b/
'U$ZD*A$D"P%`R*d].PG[c"h8m"n'HG%dQ^.[4nQ7Gb2aHk]bXUVo_UkGusaUP<4lP0=)]CVr?@8b,[0
Pk5:P$6b-p.Q1/&@Y5FGTgE9MY)Pj$Tm_TY:#Rfn`4>6)'`rE==!nnW]lRl_W%e?*I6t#%KLBhB'KgbE
QqZHn?9SOT\uG9MN+2bnP?&pE^+`Qc1tV#3=FRZB$=i!$,EnFHL.\5&&t:CF=,f1nBgWVU`LJGP;[ol`
,@"YNW.cYD8Poid<[49AOAKSI#o-:(1DX8i(-19%JkQ9c.#b;uK!YUnKt1DE;4'St7%rnBFO:'PkFlZ4
I.L'+XKSQ0;<3-)8LQu8F>X],*LJ8!h4fbCr1PGEOZ*ra\Ch-nnS:RM%2PiqF/FLn8IeKEba`k7eL?2t
E[T'ZbT?&V_O$rH[M:)HQkZYV=/LQ.']qtK0V^='Ml%6O$8nT?''i&F&g-FgPeqg9"q":r/+(.B(GCYZ
d99@T^/38c2^iJ?:f.kDU+<%cpRdCRk53JqG2V(B@GVc*RjcK$.]AFIlN`<1,Sj*_`-hRk.:g0m!n%RK
N=V;_70S@5.&='=4[hpVN2!QQYV?eb*p.ZZ;aoUO:W!oJ%'G\;\3f?:$CQZ"A0.n8H+63'i<l!..qB^(
OEn?&k2?Z8LFZmVY)mqO=#fC=s"gPn\6!K&k=>=TbFW"2"uDg:/#9ur-Dm62"1Z2^<-+d7XtU%0h!SEU
$ECYm\\]%[F1ZLI.B)BPk6b-ac0`dkVP'C4SL^4!2=1f2(u%O$1eU8kaq/*@$sOk[Z=.=CULT$R]9tsY
AE,tjQ_+0fS&2g)<?t"#+p8Pi%l1N'2o'UXXABcKg;A(c)uF,n?D/i(^OII"EAqC.pP'hIetuO$_0[%M
:oe=*Z_b!L$,qum$#>r5]ncW,l0QV'JE[f;K?P(/e]**LZ@(ol*'tC'L#?2JG=T[$_)Y\Ipi"OEl+8q(
/%#2&YjPnle`rB^p@]El>3#6'3V_2Ff<-`58/$m#F=<#55<4<k`8k]_('7q+/9QpRd>(6HBJAZ%e$cj^
^Gi>(="X[tVH8S#8&=+#l*0"4L/gRXr>p\N:2flVhme)5=C+T@MTSVkE.u,b9-ZKtQ\Ai-em]=s7q5=6
>!6]r[72X"peL5-LF_Nina\-IU]%o6K6hmZfC&>Nole%"DB*'4$]2`D:CE$tr5SoEG%:2SP#0LeHa)CG
[sQqSY8nF:VN<&n&3?7RV?80[6h.GnLa=If@nk]BqKJs1HYlL3,L(0!H9oS7r9<$uDdC$rk_;)4@bg8k
eRp][+,n6_go]W8d;^gUj8S6r\D@2Va[>UlLR40WWqF@pf^n.n#TjQ84TW;B6I?L1j9UL@@gQSu_N[G-
?5A,j'Z0?\i;\/Z:4JH:n.6*@U%tJBiHRuRdmnUH\pbrM,aVRU*ZW_.m7SDlgUQ\OH1DX$mf2t>ao.:(
>tu)K0H`Ti#>`-r()lK7nkgh#5RL#NY3&N[*]Y<a=UO[rUQ4)SdWX8(\@:Wa(KC0MldIpS=6?Kd5Nn)Y
r_BKWDtj:gIfAQVon3[cVl#qA)sTm*KpXHGjJcXCm8F@!Im,[L(Tq_LN""ZNd+dtM0-;QB3&pm)S-el1
];X(l*ED&nj6=&(k,PY:LY[eO%G1J5gV*,&WPZP]D&=6`lb2h)W-F"A3J+:Vgk!A2((1KJ9f<k[pY3Ll
+JA5sf%p-OXGq1/U9Hg&ir8RnJ,M4'_D^c/pJ77/(_=YCTsbU_,fpX?f60T9*@E\%"KIbSJ!1m'X:7[p
@A).=iNr>.$uFYFeA(CMCM69R:8kW@;ub*sMH>W3j9UouL+gq0^K!QCD3MB*/s%VN@IJGd.-VF8P#Pj&
WhhD,653Tnk:uA!:I&Np\qaNj$S_Ki:gm%rBHS"Y$FQX;Wc@qS;OUY\IoV"cI2$$"N<]CRTYe@8fMpM?
W@k/E1\tY`$Dkh+17H%_p0_*q.*N]h8VMb[r<&K0<XV_0m6/\e1#MsA^YRRg[<\K#Ijc'I_I<"S5?"WW
%e23n1uGhYU8EjTnNZ<acHbVGM8K1a:))i$OUB5)9sX;=Ifum&\XE3A*a&9`5M#ihon<?p:U^,FX0#/V
-49@"3`;>02o5V2U,1PRn9=mta`7s/>ApZml-Uk=0<bIM.lTET5PZjXQMsE]^Qe#-5Iu#`*hdW:7TcV+
jm0=$O/5p]dl4o/g#i6oDrgek!][f>D-_PYpt>6T.;/MWr;"f3pG^[+?CFB_S@K4IW=W>Jf'_=sD`rT4
12Fabk?EuhHuaRK%eNF%cWj_gEVn&;#7hoSV#Kl_[l2g@"[7#\0N?oa#`DZ,@HI@^`ngM&l`"+ei9m/j
-QdGWAG\:ZddkrSCU\*D-i2`!Xl'!EK1fk>&Lq^:KLL=ZJoLG3lEsj^2-Ql0W)he^]=*%`FVBgp?cYHU
l%;tZdnKeYlH7)B\V/+t)e!^ndF-"!<?Y;l"C^tUaVX[W=mr=LHg\bIb?;>sId,((6KQOQE,fk)d@$j&
fiih"_R\oG1,eSp7Mr]g-9YTWo5KE-_\Fp;=3*L/+nKZ,bek/N%p-h7>Tr]XL!7FL1(RI-4Bs'$E.uNR
'f$<S$<ISZNNcH,F0`Wj_R2^Cd=52?F0`UsEeU=k$?lj"K2C_<94=s4m9X2!"iD&j+)8W2KuJgN0O/&V
Tb\&<=F@%N_\Eq/C;FkC`J7VN$n-Kfo,o<Vnd=:#4:#Z"]YaD!%mh27Y42D6K91tj.ssSQ+Jbas$5]0:
+Tak=_UU.E]SeTi<EC$"#N94%gu)_Z;cDnWc@Z[ZQNuKp)HW;pn2puaDQd@3ii\mbhuG\Sm<ZH?Oog^m
-OSo*+Ga2+'ZsTL+MCVfrHnkoO?<f<pXZmljCfPe8Q^3YKS+7d[h%so)u%AX[1Vj#n>M=:6gr-I_Y?5!
Q=FB,`k#pk=;,\tZ4.e:S]oE4Yf.?S6-%V87EV^<LSO^=9BJP.OkI@[BqY>4h"N0d%OgsJ.R_OgkKUQO
X!-4aNmY_<58/ALA>VL*'Pd8'HW)iEK.8*ur:3pU"0FHZ#QJ%&'[bDT5mVm_T15&LC9(iPCrs&@KD3B\
[^Y#WNlH_3RJ;hUPRf1$c\(.OS$+lUKa^Uq]Lt48.hiHhMO*HdOp&lpVKB2V3_=,O01Mu,4m4ISogic@
,VPZVQ90*lm.onN>-8Zu1A>j"5\?$pGOaN4;IOA_"Ab_K--JV)2@]MN#9sRuZ)JqTM0-oVO:&`j>uN&m
JW6We<RZV6:"7RPMjbYRK%1=d#4&j;Mo]66bK5Z"f,!9VO[laW9=j(Q9uiC6C>a:sco8X;oEPNA5jIMr
k`Y9h6t*u3fWTWt:+:!A(8DW0IOY^B80r(pOK/a?pHh_E3fK9.WZb$$%JZi49?7lZ=9nik^`q1sJ*Egq
<enX(;KW,Gn.rnQlb+.,D0;N3_P?$IiS?cMJ:E2FG<0L;65AqKiOI\\%GL;2W9oXmT#1#2gjgcM'Q.hY
/(Cgk%VKSp8<F8b17IO=TbV$(Te:jK"F\=@*aj)$>LK2E\ME`!JMoV<[m1mIq)WU`J/:9Q\tJdS;/#_X
QH6!S4606s]\sP=qFMkZSW6l<b!=\S:D!7%Qf"GDc:iPT5U#\nm%qgA>,7\Q1SKmMS%rXEOeBV=l"HN(
WbGUf!(pWf(`ch49oM'glL4oU_V_$?>7B[ohMYeafedf/4Hao>9e:TPb@XGG4'fV^Gn<_HoUSBY;OC8d
@j?(5fmk;;(b3@t$9LD6T#6XUNN<e!Q3aP,0@O-2CV_`_m)ei7K5(A)L+M#Rj$CGei!k^g)JZ-$Qm*'X
C`i<@+M:JWAN79NFMUkk#op6163iN]?lR7?9o`11&CZ:R#JJ8'bK9%8-<R#+m1$bJRY:ST>B0rm]ch_k
QX%B?a;Wl&f-4kKSHn,%;Fo(D6rR/UEe4F@5PQPm,.)-R;H&5lYR/?ccnV"6r7Vn!eN56@FmG.>]uB%m
s2?"7eFWrE(e6[!$.&!.S933$Rg5YW4t3!DVOZ\cH1N/sS5c;_a8;r7c1U?/j["-@($9$]GnAuo$8]#U
49u8O$F>mQ%mhL@*eX[/iX.KIQokXGGf1>/A0H40P/4nXOc`)n5tDiS/'Q'9nfT33/*%BS=3*L/+nKZ,
bek/N%p-h7>Tr]XL!7FL1(RI-4Bs'$E.uNR'f$;$a?3]NoAoj^*iFDbIfQb4k5k~>

%%EndBinary
grestore
np
1 /1 /CSD get_res sepcs
1 sep
QKILEF+CMSS12*1 [9.61581 0 0 -9.61581 0 0 ]msf
121.838 173.346 mo
(unsyst\022emede\014chiers)
[4.83006 7.96481 3.60887 4.30699 3.60886 3.14059 .265335 4.18475 7.4456 7.3195 4.83006 7.32913 
5.03004 4.18477 4.83006 2.21452 4.18477 3.20007 0 ]xsh
1 /1 /CSD get_res sepcs
.5 sep
true set_gvm
%ADOBeginSubsetFont: WQCAAA+CMSS8 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEE+CMSS8 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B08A95D352586DE315E2D13A82A73A0BE92DFCAD942D0A6
DAC8EC224A8E13A7ABC9220E371E8D494A35B0B4B1057EBBF5882B9A044FAA49
264645FA8AE61A919970C49F4CF8B2B4A5F1F8105FD79A750FC2CFDABB94706C
4BE1ACCEC06CCC229CD7812AB9DFEA65D2C9C3B2B6B7D6136210F082C1620D1B
E9F1C020E3B985B5469FD926083252D04413BB0C8ADC168206F85F702A914077
E31> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEE+CMSS8 /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEE+CMSS8*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 5{/.notdef}rp 
/hyphen /.notdef /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 6{/.notdef}rp /A 
/B /C /D 4{/.notdef}rp /I 2{/.notdef}rp /L 5{/.notdef}rp 
/R /S /T /U 11{/.notdef}rp /a /.notdef /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
QKILEE+CMSS8 nf
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
272.288 208.353 mo
(9/10)
[2.83786 2.83783 2.12869 0 ]xsh
grestore
gsave
325.522 208.019 mo
568.718 208.019 li
568.718 25.6212 li
325.522 25.6212 li
cp
clp
325.522 208.019 mo
568.718 208.019 li
568.718 25.6212 li
325.522 25.6212 li
cp
false sop
1 /1 /CSD get_res sepcs
0 sep
f
.267102 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
486.316 205.147 mo
488.587 205.147 li
488.587 203.545 li
486.316 203.545 li
cp
.308354 .28983 0 0 cmyk
@
483.455 205.346 mo
482.114 204.341 li
483.455 203.336 li
.138705 .129152 0 0 cmyk
f
491.498 205.346 mo
492.839 204.341 li
491.498 203.336 li
f
499.986 205.682 mo
502.257 205.682 li
502.257 204.079 li
499.986 204.079 li
cp
500.54 204.073 mo
500.54 203.537 li
502.819 203.537 li
502.819 205.145 li
502.283 205.145 li
501.076 203.537 mo
501.076 203 li
503.355 203 li
503.355 204.609 li
502.819 204.609 li
.308354 .28983 0 0 cmyk
@
497.993 205.346 mo
496.653 204.341 li
497.993 203.336 li
506.036 205.346 mo
507.377 204.341 li
506.036 203.336 li
.138705 .129152 0 0 cmyk
f
.40066 lw
515.882 203.671 mo
517.893 203.671 li
.308354 .28983 0 0 cmyk
@
512.531 205.346 mo
511.19 204.341 li
512.531 203.336 li
520.574 205.346 mo
521.914 204.341 li
520.574 203.336 li
.138705 .129152 0 0 cmyk
f
515.212 203 mo
517.222 203 li
515.882 204.341 mo
517.893 204.341 li
515.212 205.011 mo
517.222 205.011 li
515.882 205.682 mo
517.893 205.682 li
@
529.75 203 mo
531.761 203 li
530.42 203.671 mo
532.431 203.671 li
530.42 204.341 mo
532.431 204.341 li
.308354 .28983 0 0 cmyk
@
527.069 205.346 mo
525.728 204.341 li
527.069 203.336 li
535.112 205.346 mo
536.453 204.341 li
535.112 203.336 li
.138705 .129152 0 0 cmyk
f
529.75 205.011 mo
531.761 205.011 li
530.42 205.682 mo
532.431 205.682 li
@
544.287 203 mo
546.298 203 li
544.958 203.671 mo
546.968 203.671 li
544.958 204.341 mo
546.968 204.341 li
544.287 205.011 mo
546.298 205.011 li
544.958 205.682 mo
546.968 205.682 li
.308354 .28983 0 0 cmyk
@
560.434 204.609 mo
561.506 205.682 li
@
.267102 lw
560.608 204.012 mo
560.608 203.567 560.252 203.211 559.807 203.211 cv
559.362 203.211 559.006 203.567 559.006 204.012 cv
559.006 204.457 559.362 204.813 559.807 204.813 cv
560.252 204.813 560.608 204.457 560.608 204.012 cv
cp
@
1 lc
556.144 205.682 mo
556.869 205.682 557.485 205.078 557.485 204.341 cv
557.485 203.604 556.882 203 556.144 203 cv
555.407 203 554.804 203.604 554.804 204.341 cv
555.608 203.939 mo
554.804 204.609 li
553.999 203.939 li
564.188 205.682 mo
563.45 205.682 562.847 205.078 562.847 204.341 cv
562.847 203.604 563.45 203 564.188 203 cv
564.925 203 565.528 203.604 565.528 204.341 cv
566.332 203.939 mo
565.528 204.609 li
564.724 203.939 li
@
325.522 32.0759 mo
568.718 32.0759 li
568.718 25.6205 li
325.522 25.6205 li
cp
1 /1 /CSD get_res sepcs
1 sep
f
1 /1 /CSD get_res sepcs
0 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
331.221 30.0731 mo
(ASR2-Syst\022eme:lestockagedes\014chiers)
[2.83786 2.36511 2.75452 2.12869 1.41916 2.36511 1.96161 1.6319 1.41711 .121368 1.89191 3.38077 
3.31024 3.07349 1.01566 3.31024 1.6319 1.53732 2.24887 1.89191 1.95966 2.04501 2.12866 3.31027 
2.198 1.89191 3.05426 2.28134 1.89191 2.198 1.01566 1.89191 1.45401 0 ]xsh
325.522 38.5313 mo
568.718 38.5313 li
568.718 32.0759 li
325.522 32.0759 li
cp
.824216 .796414 0 0 cmyk
f
.266767 lw
0 lc
332.691 35.259 mo
332.691 31.9204 li
1 /1 /CSD get_res sepcs
0 sep
@
332.824 35.1256 mo
336.163 35.1256 li
@
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
336.831 36.5278 mo
(Chapitre:Les\014chiers)
[2.7197 2.19803 2.04498 2.19803 1.01566 1.53732 1.45398 3.31024 3.07349 2.31619 1.89191 3.05426 
2.28134 1.89191 2.198 1.01566 1.89191 1.45401 0 ]xsh
325.522 44.9859 mo
568.718 44.9859 li
568.718 38.5306 li
325.522 38.5306 li
cp
.514061 .481117 0 0 cmyk
f
.90045 .872435 0 .000396735 cmyk
true set_gvm
%ADOBeginSubsetFont: YHBBAA+CMSS12 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILEF+CMSS12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B08A95E89BD1FA55F3C9FC54E2C9863902D6F75D05C264F001
7A0B5F36FB1EEF0F11263D359B596A218B0E0906D9CAF1169A5CCAF48E4FC013
81571B4E5A62FB5021C54228B20ECEF037A9A1D6C4A19F4113734CA5D977DBBA
DA1E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILEF+CMSS12 /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
reset_gvm
/QKILEF+CMSS12*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave 26{/.notdef}rp /hyphen 4{/.notdef}rp /two 
7{/.notdef}rp /colon 4{/.notdef}rp /question /.notdef /A /.notdef /C 
14{/.notdef}rp /R /S 3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef 
/c /d /e /.notdef /g /h /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
QKILEF+CMSS12 nf
QKILEF+CMSS12*1 [9.61581 0 0 -9.61581 0 0 ]msf
331.221 59.0998 mo
(Contenuducours)
[6.01559 4.70786 4.83005 3.40024 4.18475 4.83005 7.96481 4.83008 7.97443 4.18475 4.70786 4.83005 
3.2001 0 ]xsh
352.24 106.81 mo
355.489 106.81 li
355.489 103.56 li
352.24 103.56 li
cp
f
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: IVTBAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILED+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B08A95E5CBCB5155105F8988F9AFEF72D4ED646885BB7DE8C7
E8C204EF39896CAEAE260120B824957C86C847669EFAAFA89587DF4162B146D0
F0043DBAB0058C4DE87E670378F0402E39E25B24B07EFD192C0AC2CE9661ACF7
17A6> |-
/c <1C60D8A8C9B08A95B1F07368C45D8D45BA2821B5F2C4FA9D3A85E224B022
8E5FE35AB726CC4A33D25588EC7C48DA589632E55C3DF3C711B3593039ACD915
ABCF7631DC124554B002B7F4444201B431DF315B197FE5799F7C> |-
/d <1C60D8A8C9B08A95D5A79985A827220D46CBA17D951D71091AF2A64FDF58
3D2492D2B07E549E6F0F191740B84475A05D8CB502D6FFA02A5BDBC262D7461F
84CEFB949AA32E310EECB077C8C7052B181BF14CE47E6F9404B3FEBC4A576FA9
7D4D209BDF970697D6703F5C6BF334F97BF1> |-
/h <1C60D8A8C9B08A95D5A79985A82729CAE756D04899265F929F8923BB7F66
0F8BA9AE60D5A68E190A1C2D331328AC43A0120F78B2E91DADC6910D7E5CDF89
D74BBBD78E503590AE48EFA32DF8171C17BE> |-
/o <1C60D8A8C9B7A73DCEDF64ACF1D92FCD603C38194EF3F5934A984E60F2AF
9261930EDC731DFAE6DC0D65525DECAD56D01145F3205995C224947145FF19D1
982913BDB63436AA6C4E83643807117E1530260A08A6B9A3F353> |-
/q <1C60D8A8C9B08A95D5A79985A8275948A70A6BD8D1F2EA5F1779F7EEF73D
B4C69DC4A750C7A5FF66E5A9D159C42737F792DA6713542A7A45B37981F06555
9F1C88AFFC5E12568F048551E9BA933FF3994169ADDC8D6CA17C2978F26F1B06
DAA5D1F16677DDB46B661386765B> |-
/u <1C60D8A8C9B08A95D5A79985A8272207708A02D998439C3D8F5943D44B24
05B880A2E47A3923B4151C5A4934C03CC4787600BB3DBF41B100327D7717400B
228ACD479E7A669CC2CAE88F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILED+CMSS10 /Encoding get
dup 67 /C put
dup 99 /c put
dup 100 /d put
dup 104 /h put
dup 111 /o put
dup 113 /q put
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/QKILED+CMSS10*1 
[19{/.notdef}rp /acute 24{/.notdef}rp /comma /hyphen 2{/.notdef}rp /zero /one 
/two 6{/.notdef}rp /nine 9{/.notdef}rp /C 9{/.notdef}rp /M 5{/.notdef}rp 
/S 13{/.notdef}rp /a /.notdef /c /d /e 2{/.notdef}rp 
/h /i 3{/.notdef}rp /m /n /o /.notdef /q 
/r /s /t /u 138{/.notdef}rp]
QKILED+CMSS10 nf
QKILED+CMSS10*1 [7.31203 0 0 -7.31203 0 0 ]msf
359.146 106.81 mo
(Commentmarcheundisque)
[4.67166 3.65601 5.80872 5.80869 3.24945 3.77808 5.07526 5.80872 3.31677 2.49857 3.24945 3.77808 
5.68433 3.77808 6.21298 3.77808 1.74689 2.80273 3.77808 3.77808 0 ]xsh
352.24 117.894 mo
355.489 117.894 li
355.489 114.645 li
352.24 114.645 li
cp
.90045 .872435 0 .000396735 cmyk
f
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: IVTBAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILED+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/grave <1C60D8A8C9B7A73DB619E39FEF98FA771CE17F72D5A1CE3397B17282
2B8900257717E7FE> |-
/quoteright <1C60D8A8C9B08A957081098167591B8ADA9FDB96A1436396F7F
788EF4868A705369888EA4FC556D95DFAE0F72074> |-
/L <1C60D8A8C9B08A95CF0AD19F21AB368486DFF0EA52B92677B9DBFAB95E13
BD476D31E8E6AA2B86DF27A5D8F7A57B5295549F> |-
/g <1C60D8A8C9B7A73DB58EC4F5735257CF6484034BE48838869C792E77FEDB
2EDDDF87A4ECEA55DED30419BE80B9800A7A7BCC852BBF2F2E06BC58F5220971
E571F38CF807ABB277789A55600204E7D4F9D5B79E85F55DBE49717A60C2DBDE
EFC117FFEA09FDB25E08EC0D2C46945DC382E7BB216BC1ED46A53D7DCC40B2C9
9BE8374E106F137F672ABF5E8DC549748A999EC7C6BF9EB4A8ACFE131064AD2B
C89A39B533BAC508010480088F92C9E199DE77B0D5D956B2F9890F91DB699D5B
FE37A68F78A04CA9D3C85DA607FEC9886BB4D6> |-
/l <1C60D8A8C9B08A95414C3FF7328CB21E7486E3B6B5E1E357CEC11DF3B72C
60D7555125BC3695> |-
/p <1C60D8A8C9B08A95D5A79985A8275948A70A6BD8D1F2EA5F170BA20A3467
B97387D8D8E2E47D725A77E3D89E610463BEB33F2000963437F3E1548999C4C0
D771AEADC64008A4018EB255F27E32C5AC3E27C9FE47F18E6F6006D8F9D35D48
3D63730ACC150C4935A22C3C9F17D6> |-
/y <1C60D8A8C9B08A95A8358A0E497F05BF5F726C557A2E2829313B836F25DB
5900E849559FDA967A2F65CB8602740FE08056FF8447EF879526A4DF9E08F0AC
AB853F0CC97F5F0A2389709E18B6B2DF1BC7478B686DDE603D07DF69E90921F3
CB21E43826> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILED+CMSS10 /Encoding get
dup 18 /grave put
dup 39 /quoteright put
dup 76 /L put
dup 103 /g put
dup 108 /l put
dup 112 /p put
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/QKILED+CMSS10*1 
[18{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 4{/.notdef}rp /comma /hyphen 
2{/.notdef}rp /zero /one /two 6{/.notdef}rp /nine 9{/.notdef}rp /C 
8{/.notdef}rp /L /M 5{/.notdef}rp /S 13{/.notdef}rp /a /.notdef 
/c /d /e /.notdef /g /h /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u 3{/.notdef}rp /y 134{/.notdef}rp]
QKILED+CMSS10 nf
QKILED+CMSS10*1 [7.31203 0 0 -7.31203 0 0 ]msf
359.146 117.894 mo
(Lagestiond'undisqueparlesyst\022eme)
[3.96094 5.94913 3.65601 3.24945 2.8027 2.64035 1.74692 3.65601 6.22028 3.77808 2.03131 3.77808 
6.21298 3.77808 1.74689 2.8027 3.77808 3.77808 5.68436 3.77808 3.30948 4.94077 1.74689 5.68436 
2.8027 3.37161 2.8027 2.43564 .204742 3.24942 5.80872 0 ]xsh
352.24 128.979 mo
355.489 128.979 li
355.489 125.73 li
352.24 125.73 li
cp
.90045 .872435 0 .000396735 cmyk
f
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: IVTBAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILED+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B08A944AAF3A41AE50384710DF86C86BE2766CF1446A4725D6
14797E14439E776E246B31ACA2732981CBCD5021D679A5247C473DD16A69B54E
FAC72E86C31EB4813A990D17F639CA5A2B4A60C4A18CD2FF46228F08A0BD> |-
/D <1C60D8A8C9B08A9454CA4C75C5C97DA70820E758D9EC7227D310C19BB273
22DE84D89496D15A44ABC938EB4A523B8A7FBCC0A43AAA03C94C31F6A796EC61
B43772038C36D19988F6401B84C448C8A0DCADD6823581B6> |-
/I <1C60D8A8C9B08A9570810981675968A74FB02CB1E4D0254CE742213CB9B9
EBFAAD12A2DAE953> |-
/R <1C60D8A8C9B08A95E015B163861C24DA33073F0BDB09DA51CF40C05D5B87
C05EDF86D34E65C779063BDDCAB6BF4F63CC3E6D11D647AEBC7C9645B0B09E04
8FA42FE8B029B8224C09270FDEB45DD990D7B6CB098EC48E8A1D5CE64DE60352
996DD72D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILED+CMSS10 /Encoding get
dup 65 /A put
dup 68 /D put
dup 73 /I put
dup 82 /R put
pop
%ADOEndSubsetFont
reset_gvm
/QKILED+CMSS10*1 
[18{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 4{/.notdef}rp /comma /hyphen 
2{/.notdef}rp /zero /one /two 6{/.notdef}rp /nine 7{/.notdef}rp /A 
/.notdef /C /D 4{/.notdef}rp /I 2{/.notdef}rp /L /M 
4{/.notdef}rp /R /S 13{/.notdef}rp /a /.notdef /c /d 
/e /.notdef /g /h /i 2{/.notdef}rp /l /m 
/n /o /p /q /r /s /t /u 
3{/.notdef}rp /y 134{/.notdef}rp]
QKILED+CMSS10 nf
QKILED+CMSS10*1 [7.31203 0 0 -7.31203 0 0 ]msf
359.146 128.979 mo
(lessyst\022emesRAID)
[1.74689 3.24945 5.23761 2.8027 3.37161 2.8027 2.44296 .197418 3.24945 5.81601 3.24945 5.23761 
4.72208 4.87494 2.03131 0 ]xsh
352.24 140.064 mo
355.489 140.064 li
355.489 136.815 li
352.24 136.815 li
cp
.90045 .872435 0 .000396735 cmyk
f
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: IVTBAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILED+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/fi <1C60D8A8C9B08A95CD6BAE6E9C8355F692F0A6287CF13AA71F63B5E7E09
675CFE68D2663321A41A4860A9595B40356344EFA4D49130EC982B30F01F232F
29DA746D7A666723872DC256F0F74FDF6C998887E901CA2500D1DFEB17EC36B6
10CFDF9E9B1F3C4CF2E5037EEE5FA0F6104A728> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILED+CMSS10 /Encoding get
dup 12 /fi put
pop
%ADOEndSubsetFont
reset_gvm
/QKILED+CMSS10*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 4{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two 6{/.notdef}rp /nine 
7{/.notdef}rp /A /.notdef /C /D 4{/.notdef}rp /I 2{/.notdef}rp 
/L /M 4{/.notdef}rp /R /S 13{/.notdef}rp /a /.notdef 
/c /d /e /.notdef /g /h /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u 3{/.notdef}rp /y 134{/.notdef}rp]
QKILED+CMSS10 nf
QKILED+CMSS10*1 [7.31203 0 0 -7.31203 0 0 ]msf
359.146 140.064 mo
(l'organisationdes\014chierssurdisque)
[1.74689 2.03131 3.45126 2.49857 3.65601 3.51422 3.77808 1.74689 2.8027 3.51419 2.64038 1.74689 
3.65601 6.21301 3.77808 3.24942 5.24493 3.91998 3.24945 3.77808 1.74689 3.24945 2.49857 5.23761 
2.8027 3.77808 4.93347 3.77808 1.74689 2.8027 3.77808 3.77808 0 ]xsh
352.24 151.149 mo
355.489 151.149 li
355.489 147.9 li
352.24 147.9 li
cp
.90045 .872435 0 .000396735 cmyk
f
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: IVTBAA+CMSS10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
QKILED+CMSS10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B08A95D5A79985A827220D46CBA17D951D71091A804487D3CC
69BB9C43B70B1C054AE8BCF010FEB975725958C0171BBED6676C9AAAE6CFEE46
F69DED7901CD1C4DCA677E0DE526159ACDEB3DE152447BA9BBFE3963B6938BEA
3024E87A005166176A2DFF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QKILED+CMSS10 /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
reset_gvm
/QKILED+CMSS10*1 
[12{/.notdef}rp /fi 5{/.notdef}rp /grave /acute 19{/.notdef}rp /quoteright 4{/.notdef}rp 
/comma /hyphen 2{/.notdef}rp /zero /one /two 6{/.notdef}rp /nine 
7{/.notdef}rp /A /.notdef /C /D 4{/.notdef}rp /I 2{/.notdef}rp 
/L /M 4{/.notdef}rp /R /S 13{/.notdef}rp /a /b 
/c /d /e /.notdef /g /h /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u 3{/.notdef}rp /y 134{/.notdef}rp]
QKILED+CMSS10 nf
QKILED+CMSS10*1 [7.31203 0 0 -7.31203 0 0 ]msf
359.146 151.149 mo
(lesarborescences)
[1.74689 3.24945 5.23761 3.31677 2.49857 3.97549 3.45129 2.49857 3.24942 2.81003 3.24945 3.24945 
3.77808 3.24942 3.24945 0 ]xsh
1 /1 /CSD get_res sepcs
.5 sep
QKILEE+CMSS8*1 [4.0066 0 0 -4.0066 0 0 ]msf
552.399 208.353 mo
(10/10)
[2.12866 2.83783 2.83789 2.12866 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/2 /3 ]]
[/CSD [/1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 2
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
