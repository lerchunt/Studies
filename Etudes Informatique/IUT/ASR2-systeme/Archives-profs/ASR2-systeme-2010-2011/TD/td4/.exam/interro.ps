%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: interro.dvi
%%CreationDate: Sun May 17 17:55:37 2009
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX10 CMR10 CMSS17 CMBX12
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o interro.ps interro.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2009.05.17:1755
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 77 /M put
dup 79 /O put
dup 81 /Q put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2BF06D15
8CCD65D3FBBF9DAFA947B7075024C8509D113F8A7CC65FE35BC2246B52CF3823
997CBBFC1F7CA408BFA1FFF7FDA908B0AD37AF026ABB52FA10ABAEF2485DCEC3
6792A55CE7B79060C788036F41344DD889E4B89E35ABE37B6DF427B82BFE6906
EBF8F3DD8E207451BEC85AD59F955D7190262E5454DFE6CFE822EF42DE8BD4C3
B57082E82B53529524D0CFAA14C35DF4EBBDA1AF48C306512D44A6F876F5409F
FB897911E1F69CD79F9C4BD1205BD7C7197048A2985183D7CEEDB088C0EA658C
E095E9A2EC55A134AF6331D4AD4BD0CD801CA496BAC41483438314A99A096C42
2C9C25955671EDD188F21748B7F03013F201AD869433F4EB868F813AEFDA3734
27C8CBEE824D935D3BF5DA0971C33631D77EA3064C7C8DDA27E5015F53DD53EE
166FCBEC49A53F15B4DFCC6E84102F2294FD618A0CCAA1F93820E202BBFC57C5
E9A1A461516BF45DBBE06316554D064A51EB9A4088A5CA546F6E1C819F0DB362
78FAF82726FA9A76C6107F56E23F640BF67F29DC979A5DFA17AF2586667935BF
F90E10FDDC3C302543B6230E097ACC99B0C8C7E0A385A8F55853F5BFE4D329A8
EB0DF7D28B80A087494E7C3A6097C9A57A7F01B59CFCC8D0D1AED9E1E75F643B
71E66F1B3E09CE15E827FA7BE367D4315F4251FD75E74C2523420D79A8E61197
CC93AE905FC287D8FE66AFBE70293382FBDB7669F1701B2EF31D50F48298FBE4
D24E1CAE9CD1ECAB8CE65F27582D2635B278193B9BDC5C6BBDDEA87AA19761D8
AD05B11CCC47E6BC1A19329A7E0AA0AFBF27524537EADED345E3B3941A634369
45D09DF883F33944BF391BD37C7702C93E16B03A9357128683901A5289CDD049
FD040941BBE7D380B6E1A8F42035A40272B9B4D727D64954D409ED05D6BAC125
751FD5936ECD7134811B48B65616B4AD0B6E8133FBC5EBAA66DD38618F313A0B
780E76B0AAC17CA5B5F10DA68B5D6C13AECB9D15B5FDA4606E16CE3AC7E66681
93BD74920BAF3AA592772B3353A4EBB99071EBD9BA556D8033C377AC3BC6D8D7
ABB8D86CC567326F2CA01A06264CA70B1989E2373DA22E46B20D4AC1AFCA3C31
5EA77F3D1AEFD699E8AE0C07788D5066B8FBE2A17714F6EFC09E92BAC67DEE0D
1453FA503B18B96768A46DE95F14182F8EA538977666346F3FFAEBF3D633302E
42709D466788A6D4AFF5D1C62D3D583CF9E65F23DBDAC90011C8AB0EF58E10A9
48FE2D9FE062C126467094F8448F199FAD700C233FF4E10823E76526976882C8
581A3C3DAB6A8DA539DFBD4F5C0D295E2A8CDC03CF5B77E2AD958182EEE9064B
2391CDBE909B12C3786E80EEB3ABCED705973C3226313948EC4B23BFF58E1E85
22B83803AB327C39514D652A063890538266C29AF6BD1A051EFC014F27ECF2F1
A3ACB48FFF3D3A1C0E6FCB111FB797EB76150D7BED41CC609AA67A485DFFFAD4
A59546B1A076B6294C17A8EFC491751053A2CBA8A68E2B54DA4B4881605D405E
2908080A37E468F2EF9D6562314FFBA48BCAD8DBD9302328041FCB2EDA165107
31C9386236AF012B47C663071783EB19FF6FE7AD4C7166A8AC1FFE9635B01D4E
E4BE23642B965E8AD57606ADBFBDB7D5CDA3AC74B0AE8BD9D5F99B94A8A41073
9BD72A293C518D09C0605C912C201B048398E97EFEBD5B5350916786712D77C9
9D2D92D630A3298EDEBBE53E3BA2119D0A770D00DECF2A4515D6D72DFB7C8B3F
E9DE6670D105640E4309CF71D8D262B555F5B7A8CC8D2209B283D2B25E161193
EE95E5D22B72F49B6BA26C58726EFB61A9456E8DBAB412BEAE77FDA4B23FFD00
ED52711FD079E81B05DA411E1B9F26B0E1021172E726D568E5CBBB219B182D3D
D98AF2DB86E10A740BC8FA64AD4E9C56B09679B2813495F976C5DEEB38A04964
BBFFB9181D4B169DE046FF9AD2A68570D9B1F54BEA3C57D45F93C971445D31F1
67E259C97538A1176E4475D2849CCCA6160ED3D51165847EC175DA453655E1F8
A21EE862807A7168BBDC47C92B353A988EA2BF11F6D29AD0FF51B10C655669AD
B12B4D4C69DA53AF40B97BC28BA208C391F331364BB3309997755D231B20A707
423B1DACC66E758A1E3C306B45EEB90211D12BCA088837BC8FAE61A34852620F
0F87E83CEB4BC14F9C8D036B4867D93B1B3E436BCDD30899DDA9DC98A762B173
EB6F0E0DD51B0975E17490E048C06615C681417C4077A404CC99E3C99982E792
8BA59F42BC9C0FEB37C3EB72DB6BF4F343A9C056E6C33B6B1BC047585F5F6026
FD9BBA261E673FB1B3C36D41A0BCBA5F83CCFB5D6F5343CD4AF1EB0F16929E84
AA4DC9A565D7C6830B9CE0ED2CBC30EDEE2FBE2452FE25F14207DFE77A2404C1
250895C22A2891D327EA41521614CECBAD0F29F7EA4DB2CD123B3FC412E17ABB
85870B6E5B19F70EA1FE1070DBA324B15EDD11B0EA5D065FAF5A8FA0772BF9CE
97D4400A1806B765F87A32A331853748AE2CA51978497481362E5708AD0DD12D
1C52276DBAC0D4B64A0176E875B6C55F8A604BD7F0BE719D173C1D1C59E346FE
18E56E6BE15B5CFCA07464116BAC60EB695FBE7994855E3EA650E429987CEBB6
5CDEE8F2964A4E6C544F4B8E7525B6B5685CCC4BBD3151B78ED5E0F549FA140D
CBAFF8D3F07C7FB15F23DD550E6F0E3A98E1FD404D524E61C0B48EB0D2C7D109
3B700251FC4E6497501B09ABEDAF57FF56A42397470CE6BFCF64140346704866
23470D18FCF4C383537CB74C6B2D9F2071F31105C3E1D25EA8C810DF6E43E491
4C7D97A52A4425531FEEB50F1BBD957F62A67D40FE11BED0E62369BAC5E02B17
DE3CDCE1CE9915935F6A5B78965B1F41E74FC2BF6AD0B7E12F6E7B8C468FB55D
749C84A05584F47FB82440DDC7B2C3CDFCFDAD571E41A7AB68C2E52D0A9AAF7D
0241EF8DE1C7DEA848424212B087A2AEE0B66AF4A8AD860A001E528BC8A79A5E
F52BB3CECB78E8C43A4254ED8162601FCCEF11B4D4CBED2A3181F98057195083
E83100B82CC60DC5052AFFF79197D4FA6D1F23666A64C827860DFD5C9D78BDA5
37007B179EE2920CBAB5FD99C5C8AA31E87A50AD1CF69D1B2ADC39A197D05427
088580143D522385F23EEB26EC8678057832A218C85440C6883BBE18C8527C11
67C15FB766777E239C4AE53FAA3A59A37FA32C4FF1127C0CECC6761F8366377A
C094DDC5ADE5F90050AC9DEDE313664D999E2118A3FDD2EFA6CC85EDEA23E274
8B85BD04F45CCDD94C64DE30E08A11B9C006D6985DC77FBCB462C048532CF0C7
E3A42241971BCD4AD559A1C711DC2FF0EDDB2D1BB88F876513159E0082D90F9C
9BBF8B9AC55948D2036924D3F54A7629600B7ED745EDF3CB185FD90835EAEE4D
2DE177B5EEB1B4A580F35815646E09770C4445CD34503AFAE938F448C9ACC299
4B62CE10B936CD2F2F82787924845BFDA437B2366D36808FAE9DA7A78A474866
52494E62DB258E26A848BD88F987811E3D4DE9A5E8676FF29A14367AB506A03D
164D7F117A37690398D92A2F8E0C0DECC90F187C95F9E4D9CB2ABC626EA0098C
DDF3878336ECA46B08E0E496B3C7A2DAEC52A430A11B32BA3643300BA438282A
5BE95C78BAEEFBAF3990235FDEB83D63A81E56DF5B573DA948B6495304D57E5C
7ACE2FA890CC81ADC94D23C90340E96D617DC979EFC653E08CF6AC096756850F
9A0ACFBA3E1C045EB7946598C8D9FDB9BF836F17D75A7853BDDDA5E49906A8E0
05F29FF0FB0EB3FDFCEBB85AA3B100A7C9DB3F123F7344A65171B4E703F185B5
E72D6B8089427894F90228FC07EDC666CCDCE96936906DC8253F94A81EF1B454
DCF9CA96F044AFDCB56DCE38C707AB83F516862A4EF5702AE5FF69D068B4B11E
93D1A55B114C3AF8A79169F7C9E85396FC7797FE47AA1FDD51702D36DE3835AA
0337FCBB6FF4113BD022A0EF9BD86F60AECE08B286AF436B6B986EF1DF68BCAA
C5ACB63EF0AB4801DB9A6CB67406DB826091EB8C6E6F78D870F2D9771DEE6E0C
401405C8A080851A1ACFD6DBD5AE6D768B18666C9BC1672A9980F95C1072585E
883078A5B55ACB267DA02BE6178118CF138E0906F9828514369E3AF7CAEDA189
DDAD475186E69AC9DCD59A5B492D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSS17
%!PS-AdobeFont-1.1: CMSS17 1.0
%%CreationDate: 1991 Aug 20 17:33:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /grave put
dup 39 /quoteright put
dup 50 /two put
dup 65 /A put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-58 -250 939 758}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A14816D516A63DE166FBCFEA932
BF000C3B84394CB6E6A446D37717CF8AF9A27241D89E3EC12BBAA36A87DA0A50
B96DE87FD2565D6BB4225E150CDC8FBE654B16102FE8DF3BB5EB869ECD8E521D
74ADF974252C93C4FA50311485350B2EC0A92EAB44C9A8BB11852B3666C5F393
6BA5AE3D742F26EE549A603EC810A7528CDFC7D3A1580528936A7C291404D23C
A573D08407861ED401CA26626B04DC86EBB4547870BA7A03E49CAE3D0CA7BCD7
6C28C3A89BF4182CB84BBBDC9DDAA541448456EAEE89E87C488851D1235F3326
D866CED01587D10C2464C07E3DFB71E49317FCBCE83A4B85F2B7E544BFB398B8
5BD9355CCF9088DB5108E011959AC68F9A3773B17656F85521618D608D9F6450
BC4EA327B03E999BA05A16CFC2234F388EE7463AACF02EA3A45D5E65805C7ED9
4618D5A8669FF3ABAF8B41D76D11F4AC0DB848BA8A5D51CCD6D85EB6BEA99A54
80CA3DD9B7E9832296073E66AA9697E86758256A063934E0B30425BEB569D9A7
C37604DF22CD0A369EE007F67CFF5A930B5F77EA030E547DC635869BE5905270
09C91AEB22772C01412D78965DD2B489B4C4DF35FADD130DF1FCD2C59D0974E1
4C161E5FF72F790700E0439032D0240542B702A7520469411C6809C27B3AA535
A5ECD235FB90601C6492C6C3D2D38AB999445474D7E788097E247DE495BAF83A
7F1C70DD205967B579F69E764F4DDDE56AAC3D87CB837EADF755DB85B88EF041
AC4F754DE77B66B0471384EFEBF9D67DF6626338DE3D4C65A1831032D36C0B8D
C60513EA65E9AD53E4F1F1AE4F6DB85E249AC53396FF5DB2189F37D359DF0AC5
9369E07ACC443314B1A13CBCDC48DC2F95896CE74E346E7E94D94E7FE6AC0C24
2C491FEF52CBE382F428BB27C7D88438EA6564D8CDC8282CA1FB4132441F4F3D
1D727C68391871385AECF93762B7355EA68D4662D7E27F07AD5082248889F42E
BC1D4313DB5C6A23A7ECB2C6963922E41B104F2D578183B066B0003EE7787C4B
9C7FF2A3EB75424A2ACE06F5339F05DC9753B26770677F922E8B5855F5034C1B
7590D80A79EE16C1F22DB2167AF9C3E2A2233E7620AD7B8560A66BFE8F8B1927
CFF6FE76934194A6BE4F6679DA0D9136EA245A19F58C54155D0C1704ABCEA76C
69658D4400003FC9A85B81AA42963A6B642945BD4F3B8A63FC7C8860F70C294F
EF8FBB7BB8B01B86E003AFC23CB70352220E9F788B45C943FDD52FA4C19F07EF
6D33CA9179F36D20BB8C8F307FB4D439E8AC4D16FD7080AA6C741658554B0DEA
D828D08E34A95E27CFD803CCCC2106B183A28BBA1B30A2BFA2D4A2C8A359E699
2B657599DB0D18C12A4A648AE3DFFB9DE7C98A42F8F1984711281EA30A0F5F44
AF14ACF9628D9E3DCF332E36B690C823F497D993E534A866F3114945410B9BBF
820C236A6380878DFDCC2B339FCBC2BE64D3B0A051734E2AE59A20D5E20ED8C8
16FC64CA10EC9BC67634649C62190CE155DFFA1AE9E47CEE17C21DD9D5E8D113
19E04B9457E98873318962D6CE28FA9D59CD7576A28DC1431D085AA91C1BFEBE
06ACB86822EA8E52FEC34BA76B79BD778307B4395AF58D727DE95E9540F90323
00653914DD3E8B9EB4F0BA13823F20C7A47EEE406CB8103422DCFCC8D12E415E
DEE6926A23E1C025940081431CD6A6714851406CAFEA42BD9E2D453DAEC26345
15A8EE7E7EF179C185D6930BCEC43C53176A3863735BA6917B59B105353E916F
8A00AD5BF7F4191F0F438D86C8A1636D051E17287F8A2874647BA9E543D4517F
32D8CD5F6B3AA3031D496E9BA3B4B84694DDA137F1F11595A476DC3CA6B9EC32
3B6218E2C8E7D1155DBDC9B4D39356039CC436A1FEAD7E84575D264254F1FC16
94F0EA7DA122D7557949B13FB2D2DFFD704E84378980136029E26E5B42C4BB78
3548611ADE45223A3EEA50D9F0C96B0DD96245663ED9881E6446309AD7E3AA3F
FE065B6DE9481998DDF19E11978641625F7C92517AAC66C322860A961FE80DA1
3C973004D4A0902E0A2046CE959E5733458B1675C6EFA2D5253D48A59903B4E9
57A103250CCAEAC64DAEA91FE65CCABE698EC02185945C653387E5BB26017E6F
239795C5A30A8C9DD97FF0A2CFC0CC9252457A875235CC0AB09ECEF3C5AF1ED5
E336A0E9BD92EE72EB6B85C8337FA2C199E16D242BC8D654CB2523E304E996CB
727A518353E4694AD6EECE47F42999D0E677D5ED3F09EBFA9762A1E4C8C27B37
20B3C2373EA27DF4F90B6AD632DB38F027BC932A6C47B3ED16FDB28A3356C895
FCD0412170214B02B3A49982994C1A969BD4412B672F9F5CF47B77B3DD170477
896F5521B9829270CBA676162D70BC793776F11DA33694AAE5ECE00A55BC45B0
75E4048FBD9BC9451C2D4B5CCC8E2CDB49BBD6395563DB1B7C3D0713704C3F14
19B574B82CB9B2A58F60827A1BBE278E5F9EEC232E3E4F7C823A646403727211
6D7766721E0E7468BAE333A0EA4EE65EB41A486ECFCA27A9ABE93406BE2CC334
96DAFDADC686F4E4C696F61ED83AED12B0D91BDB1B39DFD89E5DAC2D526F28BC
4FADF261FBCD4838AC2B396A97864DBDA3AB35168347C610E760AA5B3EFB71C5
180775F4847501817A32FAA826D64FD7F855901D0DD099871C670E378FCAEF82
3E7D7E23A2CF1283C006F70AF780FDFDACA85414E7B69320EAF0B952B48FDFA5
39CBA7599B3FBDEEBF32C238B90D384D6756FD029B6DC549BADEDBCA19DF68BC
A4AE2CFA34C23D70154ED6927D86D1EBEB25F5D72D2848C798F1451D2A9B638B
4DCA08FC70EA7779C38D80BC4CD6FAF21F977182DB89D3ADBB8BC73E36453BCA
707D9DE3369AB89E7927234AC2DADDF0EC1EBCD2471B84B3D05C3D205E2771C4
3F8C6E1091DCEA909B186A63686ECCD84C2B9988145FA2D589EE3ED7B98AB0CC
8E25D4EEA9ADE52293444EBF20BD604ADA0CED53088F811A49DB9D495BAF5B47
288CAA62D361052AD7BEA5E53BED9481396D354C8B7384FCE34C06CADCCB12E8
C102CA3425FE73F5487BF80ABDDD08B9DCE366AB9827D83B76F055ACFD97F44A
051867F8D5F75AAD2E00A05B3C692621BF4CD677A0946C2C6ABCA066B87A81CC
0AF9D0FE6D5354DEA40479E11FC263E5789DD168FCC58F96F4D11CDF855A6BE5
A33122E3A5F6B75E47A003EE51D6EF185141E4F9F8368F3712ED447751B7E46D
C7DC39B154F653D2EE1E7B4321294F0DF50C68C112BDA235AAC8D2070054BBCE
D30A2DC876FB96CA31672A803656417B2BE4A368ED6DBEF05BA13D4AFF67B68D
3CE97136274FDC495533F0A12DE7B2EED76702F53230F0E4CC9A0A77F14D5354
C974485389129C6D6A6372A8BE5546CCD0BA0411F733FD9878C6301CE96AB9B9
F2F23DE9C3A8AABB901B8A41525609C0B81F18CAFD6FA30ADCF358D778ABCEAD
A480CF50230A487E20075266562A3628A7931B5FDE143CF30323FE09AA4ADD75
15C28886D1399F7DF58324DB3593E2CBB5FDCD47C715BDFF07B6C802BC48B565
F92C14E62B24AFA83886A6130540390ABD4D0EC0D9B97E3B080789743AA756DA
12120B19369E98CD261202916502FB08ECB7CF77B3BDA757F27F01DA0D4DED9B
0C1A77BB909A13197372AB3D17873108C687D6E7CDE4EE71927C6B9CD1757978
FFA69FB290ABB1F2E78674CE25FB388959FC3F22B2209E4E4F2E5E1E2622DAE8
E738CD31F86FEA9B5614B26BF335F9C5C995F07292B1054DF6D61237BCD73EC1
7DF022A880DBB132DFE5BEA20FB6993522ED37B41028B5B38E089ABE3FDD2D6D
8DB56C0089AA150EB10FBF8D357DA00A355EBEEC5A9AC55339D66403058D1BB5
79A93F5FEA97B084FD9B153AB4F224AB9A5F62C576FFC644DD26D36E4D324759
63CC4F2C1A10A2D0A136FB4244A56CCA74AD06EBC7E16D0DE5723C836098CE27
3B79BDF292E4099D2772
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 18 /grave put
dup 19 /acute put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 92 /quotedblleft put
dup 94 /circumflex put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F78C31FD635A00CE5D0DFC7B0A6BF9444B62C836087731D6D205
24A45B3C8D80983A67377EBBEE171DE0B4A21368F9B83AF7CB286D8389785E93
B11277C65D4D789AF99B1D7A3032947A51DFABA0DA3B94DFA8ECE2B7374827AE
168634FA007F8981ADA04F102ED9C2D115C27E27E6DC010FF6732239F392A8FF
CBCCE8A3EDE547451191D88E3360E7817552B352D6EC72053EB037E1B3456A78
39CBFD2D0B6AEA91BC7594958ED0FBF7B652D4C20EC662F2726365F8774F02A5
CFE926BD4891985D68CFD7AD774A340A57DCAB2B635F85832FA320CD9FE204CF
2F99B5E9376A65F2F8A60ED33B412E53E7106DF6948E0619D9A0EB2DDD3ED1A0
CAEA0DBDB8E20C47C783285A553C019F9BF0E9B31093AF70DB81A133E6B4D9FA
38C2D6B29AE51F806340A177CC1857D33EC8CFBB0C19110449CFDD61E0A4C739
D6066BBBE70D3BCB5ECE08BFBF3493E43E664C89515F2E475BCA27B0B07F524D
D729420527C52C093488DCC273143E753E0A204DF8C010D53C0D4A4A71FF7F08
161D693ADC98F6CDE9B2062E0FA14B40663701E6BF580508F60811385EF294FE
52C4BC24CC10F4DD4632F554CE5317F77D6BD7E525CD1A2CEA6C58829C0588E1
246AE06156B8DFF948E25B4BB481D67E3B466E6171AA639ED332AE6DBF0BD309
8EDAC3C0610A5C5D3761E296DCDA097E865F56148CC7A6C9F6471A97830E2309
6088E166EC7531017C600BFAE0B0F29211684FDD407E9819FE68FC2C4B8BFF29
60B26B9C9588B49C225E8819AA60DD36F9488F20C43E2200DBC1A8E3BB231F9B
2A3F1677441EDA83014D7534582A02C675ECB0DE30DA94E79549C64D8234DDF8
748B328D262A309992B33FE3EB9EE5056B839EC83B596074FE4D777E0412B4CE
CA7026C40224FAEDE7A2BC45DAF1BAEDCD442AB044493B6275645A8D0668BD40
26D40DAEB965DF1F1DCAE604E77A3DB5B8594EC0EEE7E1834288946F743B9F9B
F340CCBD71BA5EFFA67C66B881F85D0CF4F09EBB0AF727857D66AE1D1D1216AB
16C0E7ADFD36F600743E064A53A585C8FDB18CADAC222594D9112EB3646B0798
71CAD81E168701A5EAF164C0F440CB913E39C859BEFA7BE839A524C8B315F98C
BC35DEF328C7F720B70309C8D86EF7DA9E36E55F44252B5C881C90060EA00C87
82221C05DDFF25D5AA521D26E09FBE689A26EF6B5B4077B41229D54031FFD6BF
2F9D929C0DF170B577C8E5207892BF6B0E1670E1F6202DF44843E02218EF7CDE
B6DE6690E53B7DEB6A19A96D1D279BBF2066A362D788012F0672C398A66BBD33
F7FE1CD283A5C71C7A851B5F80C0AB4A12A030073F21261ACF33896D819AB60B
CF0399DFC7ACBCC703FB7B67DD78FCEF041F8FE2A3676F85F51C4364E52AA2A1
FCFFAFD4A668DCC120210AB19888C95BE49797616050C0AA082A1CA51F96B99C
9B0FD67EE62D3636D2845A76EFDD01A36E999AD439964180AD69ED3B362A23E5
C2287964F5A7C71C007321BBBA4612D9CF0BFD09E7B808E47BDEA68A0CBCB24A
24467D1DA6F6EBFFC2C091DCE5296AFD2CF8B1B59392557D5FC5D8A7F3347CCA
C788379806195023FBFCF898FAA6E38556732468348D70621D56A5ECA80AE288
D0FA8675AC9C8900C56933CF2903EA7B366BB36F39BC34BA758978FFF74BAE42
AECBCAE0D1C215B8083BC2107E05937476143784DEBF3F0359141C66B1B72D17
25041F5071684A80D99772576D20526350176611D53735437790FA224F563F62
FB7FFF54FFDD01004EFC9B96F7A6E9D9521AB889A8CFE1D1EA6C1A64DA0B26F9
77E7F4388CB2E81D0C429A060ED29AB8ACF3B0BE5A1BA3557CCB8A821C3AEDDE
47AA6FD0EB5D2FD9D19F0E87B569E8A502A5EF70FB3D7A0569797C8B318E4D51
5284F27559F86260744883DA5E3B43F28AC820822EB222067A0ABB775E964B7F
701B20B06EACDE188365DBB9867B094EDF436535A76DC39CA16C610274D46BFF
4C72E16A55D266057D8889D825AE33E1E97EC55D178966A03ED79488FF2499E7
43EB065D30CD54D968FABC01B68B40F3B3A0EBEB309F9D297E3F3190BA51966D
B1CF89EA2AC3CCCD6A62C758E37B7778C85EDEDE1FEC27CCB48CD6D298892298
0DE61DC9D2EDE31EBAA7B465C32B8AE5F1ADF587A81F64A489793F3710D2065F
F91BBA138FC4B1BB12D1B8F9E9BC1F5DF80B0F1BB457241A946CDCABF0A41741
289AD65529E21EC5B21AA0BDA4A801A22CA68CEC031D5C84CB57B12CA87C4B90
C6E344984C5F2C1A9DD3ACF88A8B814CA9E719701FE51ECA647CB3B3FC4270D9
D916B2DCFA150B903CF234204119BBCEB37B949AB459A1EA85D5815FD52F8C74
6D30A00A74871D489F4CE9F710E988E07316DAB41C9B5ADA30CAE2D347D557E2
6057F44FCE60D10DBE2F7B152F6A312C3AAA9F7A914E76BA80050594FD9BD44E
E788BCC6285CD1E9893B473478DCBA3C00646509E9775B0F33FE59E87ACA8FE9
E05CDB991B1A33379F5FCCAEE4E41537CB449065C1AEF0C157AE0913E14B0BD9
688297B39A834BB9464C013BEF3330FB4917D06ADAF2B32AC581032081A443FC
72965A617D01E0A878EF9D914E5F61B9E8C0F02F1A6CEAFA6436C2C706DD8429
E350AC64DF532BE1CEA42A6A876D7B1AEEC778BC5821AD4D99982035EF333E07
CCB6C4F3A41A95FA775B20FA3812B3104DC74BAB21C3253C220D2E7B91544738
A66FA25008E63EC353A826B8E2E000A161A0D783C3B3F2AB0324CCB2D234A68D
9A60DD3C20B3E4B8F98EF0EA68E9C28AC76000153DD2A911573406C4E86655A7
7AAC6EB6944461345C0519EFCE6DB99B5F59194DA1114382D342B8E9C2F22CDD
DC0116379D2F0B3C79E026A892B5F38968C65022D99284D7C9940BAEB248606C
85B12515C5385405A81290B4DCE5F53A21ABFBF0AA2CEE78E76CAEC7D2AFB11D
9373582FF8C671A0630272527E2FC312431DF26C8D92B2BDCBAC17E22576FD97
F8A8F5BFCD468A78AEE906456AEB57662DF997985604FB414049287A094A8A00
486FEEEC0725A18047244BAC421EA45040FCB918F4723313B354E4F34C1458DB
A817B137549153E3DDB177BCD4641B2DC5B389953F771A8AAEE5010A05A016DE
E12A1B8453B2664BC8676123624065B02762F59C07DD686E06E192C31BE399D6
1F2FA8D16BC1A5457C6353E98FE9FDAF4894FA3E1DDE907EC2F72456CC1B1912
36D1A672DE83892946CB836DEFBF5CAAAE0F1D54E2E13E5A06C601CF20818C07
073A6574948C7823689586E4EEA28AE9B7C48EDC315B5176C13BB7C6B8B3D628
A038A79FA30A3A1F1E033B51E1D0051A51AE750755686E8AFB4C68CE1B85912E
F0A252431DA51D9F1D099F6444C6217D5ED405C04EE20DA61D48F27F7A830E6E
DAAC48E7353335F21B9FE9B5D6483EB4DDE188CB2E3BFAA5C1940AA8A15155DC
2EB5965CA1FCDA39ED0C8C4913202790635EC75A7A63E4EFAB485546589FAC76
BD4D64913788C9D58C2BD09E3A4658FDF3C93FCF67C958554621A995F8B99D93
3B6223FD8EE5586FEE71092F93136692C4D7A2B23C31AA6D3BC64E9DAA3282BC
4BE82E76FD54EFA6AE6A3622F3493134A27E05AC53C30C897836B0B70E97CE5D
241126A251A1AB00D89CB8FBFA32FCBB4F48D5FD3E5025963EB4202EC7233954
9BD957A80E1498D59EDAA37B07A333048A58D2DFAA99A8CABAF91F5629E8CE5E
04BEC6A328F2CE8A9650D51A1D9AB26A36F46625884101F66063DDA70671D26A
27FA095467FC0DE3374C4A956D598BA2E7CB1AF6597577601FA0AACAB49FE600
BCCDE172BB697EC6E80F1200B9D1B220FD2568CD9A18D8D4D2148CB81E3EB94A
71A6A5EAAA92EC8679EA73DB113FF282890079FEB700C8BA46B6DB5E2EA6C9DE
7741323E604878BF542F01D0DABBD8DD687960090B29B5669C217E56A37361BB
A3B1EF1C57671162BB0ADE5E143E226D289FEA77089D770689E71729CF7E3756
EE518243E3E4CD3DE44E1ED3D14FD27EB37F996ABA7A932F8EA3E7BE299F3F4F
7C3A3CEBB6ACD84FB6F4F0BA37BE782B8961415392F756ED328DB9E3EB630701
20FD63BABD88339378FA479664B8653483099635F65E11589F825B266C90F7C5
E66E6C8CA984E9F00A8CFCB1FBAA9714E829734A13825DC35F8C29340E2CAA42
4A3B76843098843B8BB37050B95974BADF6FF29E636AE2714148CB6D877D0F9C
D3F5237053FD5D06149557F95B9FD52E5A3CB2293E7948194D2105EE69459B53
5397805A19AEFED0E51238C56103FAD11ADABDB615A642C8DAB97E9D56B7F3A0
F8CACE5C3BF046F8D249D3C9F8E01A39C585ECB754CEA049D73A2F93656845E1
50C182ABB305AA67DB3488F29B51BECD1ED8AD6E03337DB9D1D8BF36108436F5
73CDCBC1AF54998143568F49800C3DA5C86584E0D5F64A53CACF57A56FAD708D
318EC5AD7E9FDA7103DA05DE06C7B5CC82374DCD075440BF1DE672CAFBE3C5A1
9A3B73F3CAF63FE897F1EF3FAF0D773776D9DCB27800BFB7643A99D9022FA8B1
A4360132F79E3628BCB4FCFB9C7CD38914676A9F2BC2B6742CEBB1DA227F6EDB
A2D720A524B956348975330A2B44B52D1EB8D5D289E12E18B5436ED0A71839AF
9B1E3216B5E4C7D9B39A6A9019F0A136BE324A7FB840C8F6EA9946874EB6BABD
80F33D3499496FF52C2DC2C7A6B11885208BC00B9E69FB62F43EED01439424A8
F4173DB029F9AF934103F3C11B5BE2EEE7CD9ABBF785CB58F546B51BE7042C02
ACFE48F705FFE5BCB86BE4A4BB6F2104DA1D89AAF30D7BD5AD11FEE2E7617A84
E3B0CCDE2DC199F3ECB80CB39776325A6012C44E9E10E0123AD25267475AF72D
A45AD1C347E0468D1BF7C780D625296C5F93B625B20E2616F8828E27DF9B77F5
C40626AEB1DFD8EBE7788E27CE035BEAB44876AB461762493942AE3191276262
C28D86D84DFB9A4D35E1D77DCB9D7DA76180B35BA0500597C28FDA181CACA789
9A2D8A5DE99B2D4255CAF084A034A0E9AFE949C5FC324028C184667AF4DAACF2
D25403E8F9BF9306C2B57E43EBA8CC41C1A66144F8169A23FC24C769F12D5887
E9B379DB968DD97E221BB84BB646F867E1959F9F4E464159EB40F67A8EF20E2D
E2E08E7110BCFFF009FC181443C38C9B19CB99363668F4FDB028AF6C09FF1C11
2C9447679A5498BD32FC3F8DFAA460659F8D0418534A63B861515EF6BA0777DD
1A792AFB79BED043DA73E26C9FD7478A391B3456AC4F95AA6C71E10866E1D156
208F986E0FD0115A3A48E6BF4895AC5B47B08037711A81584FDDCFA5A2DCF330
DF9BD93B8E8C622121120F8B52E0ED10D29849F0E5869F6F35096A47573B6463
21F7AFC0160348504B1D49347CD948E390DA839FEDE1C0A1CBD806154C3A655A
4128B1AE0E94642FD137E6691A4695AFC62C5C1E95FC6993618B0C335A822796
DB6DB40EDA5592196CD57863ACE38EFD67CE2A7293E6B8F5C98D286A29219075
4FA843E5FE401226568C23286A9F2043C59139FCCE0C1A71BC5B6FA0058D6EEF
89713887DC4DE7106869AF6D65925912B4E000E5CE79DA1ABFD7DF99EFB3EF45
7D0B7608967B495BE99E4D910822840AB596913CCB329EC9B0BFD3BA49DF409D
AAC7079CBF7BA02E572D1A637ED1FE92DA191DD3AB7CB3E3D550755F2DB5226A
3CA40268D4F51D4E7BE90ECF478FB87C67647C55D169B0AD5E74F62775265CF9
360975C9AE17F5DF6457A78AB0853F2D3E84D27F33DFC9B8FA3BC871356A7B82
B9DA150361180E3D4D162D9196D0BAA78AC5540E5CDECDF136997A9B438C8CA1
C32614A25A2FCA2E514FDE53C17CADE0A1E0407E0D6C24B0BC08AA5A61E280E8
2888D3EDA426DCEDB2AE9B0B51CE770556DC1701A8FFABFA38EAD56D0D6E10DD
6E97B4F9A3FDF8217FB307EAD27B0CDC6B1B75FB3379FEE02A5E166FD6AD3699
CCD3A9B864D9D08C2EB39E7FDF60494855B5FD960EA0ABFA56F55B8F63EBB06E
DD87FA26B57AECD94547E5366D2C62CA1E4035BE8CE0B5F39165E1A9F546B039
E02558AD1D5FE7E0E57F3583000ABE0E7BD569178E6133156FD04C716CFD5140
B0F1F22A45F97983096DA26932528746AE8FBDF6D803C783C82028FB6827E002
62669B1A3A06308F7E57645425EA7FB1F06CFF85807A9548F19C949C25311C86
8DB5F54DA6AC56C62F7482C76F63C65BBE7DFB41B25156FA0DB4FB0DED58FD16
28620D64E5565180836BB0A2BBFDBCA0B46A9F4C01F64F10781B760D19F7E747
9593A4BE0FD755476A6DCB73BCAB8604CF3135307E053341E30B2CAC2A075F07
42478CC6F3F1DF42AC609E753E4EE825BE3AB29D684F057AE1748A450DB8CD3E
DBABAC62A3DB2E0C7ADCCC7BC11FFE0E906828375055D00888AD2CF0D1EFB7C7
65F2A1E45F840ED84047D87550E4A5CD67A9DB2E3AE19081C730E2287740D703
72637823EDE19509837E4981EE253AD11FA984B29AD2BBABD204E0888371DFBD
900198C5020F6BC4C3E1DBDE0506DC3D3D1216979D9457C2476D6F60CF728E0E
7D9D540A317FC9579F615FDF744533A986C1D0C41D2C16AB910C744F641F668B
F9220881B2C63D45B977937208ABDD81A2FE34CFB2552A960B23952A02BB54C4
92EF918768C13CEFBFB64CA4CEF62F6B1AC91C6E62D6DF1B28CC0C86BFF5C4C3
02BA6BACDD5349AB5D7D62F0F49778DFB83181E5BC3A4C25CCDDD1CCA1B79705
3287028D8BEBC4D3977FD859EC4157686960A1BA9C120EDF9E390240F6CEBF40
26C77588800DE2758B9F9062E7618A0352EA4CC69ED767CA8DE1925E004FF7BA
F76AEB196784C149E575197BB0E304CFD8D8E1EE43C6CFE35FD7823EADB18D1C
27F1FD9135AC1C256CAB92A80E952FAEF6069ABB07DF0A1DE792D6383846FB00
A1B25F4215D96285B7C6C867A004CAD1DF070D64A50BC75A474ACD6663F4C45E
23EF935AC3F4EDD480A0DB4B5D1ADDC96B251EFF7179DBFFD2968659EFAF0C22
F2297E87017F3D56BCEFF7B2903F4EFFACD722F48710A3AF5FF35F49FCB1BD8F
2AEB239E340265150083ED4826266B80AD6ADCA48106C90458CE370ED9050D95
1144685B7AF2A59F403EAD4209954BF9E1904A7FA299B4B5CADD2623ADE70010
D29E2FF61873B2C4B1A5F36A9358E871C4442F6A08AB3198C926A6AAEA549036
2F5CF7E3E284251A479FD43AACF34C6AADE2DFB64DCA6217F4A90A206A1FEE51
9F836A37CA1182070D56E55A36607755A43B4ACF0A1B220375F71BBCC061B6FE
CEBC12E244169EF37404894F7A4E278B6E5F82F4092521F84AC14C3BF8F911B7
235BAAF28EA35F96EAFA891B915EFC76623014F0A9AA8965B5BF1F129250F427
38130257B7C99F8192D42EBD941FCA73C9F984339A6060A5DD7CBC0F9747E49E
07502B598AECF742128E57478942ACC3F458A666F45C444021C1083A70225630
F42ABEA3D43EC0790568CE5D67E7A8457BCE8EA1FFBBFD3A863887741C3859A6
2F1F7F5498E5E427932103C89D4769F8AD62F8AECB32A7BEDDCE895CD7A62E3F
5E59701C7B7DC064B1718AB6A7BA7030EC0DD4C3FD473DCD347C816BD78FE756
DD3A9DF9DBC5FD702BA1DBDD98CFFFD72C892C9939A9ADC3DE1A8D991AF988D4
68140F5E2AABD0CB74A29B7CE2A0B27643EAFED479399B544F235F462D7DC00C
C682A47ACF9F7EC8FDCA4D2E94FF2E5FFE1134E4AFD301F8FE90CFC49F6B2009
8D38546DFCDA95E75BB1CCCC7EEEF6E95F0A6855A42A1550FECDB1A716B21C8A
84C3B11A341CFCD42D4261C2D4B36BA582719D8B7EF42B0843AC5D58B176ED90
61A21C15E0A80EC9BD24F7F30225AE1EB97E8B05D5347FF14C7A3425E098DC68
82C190A984C84740367E4FDBA7592E018D76029387067FB3C9E009F5D086924A
3F614EAF6C099F48790B90465EA932D1C38DA1BF75C3E016B70649AA74AC4FBA
3E1707804E898CCF721FBE92DA49AE50F11A56FBC67F1A6DD5CD0B1C516B53CD
EE5A8A2F2D6EA94BEA7B69CFD899527A00F55DAF4277A8D3B8BBBF31E1CA33FB
5DBCC8B0A00D3D16C6FCF294A6CE0A4663C76F6A9C6391014AD75C95961FBDD6
2EC2AA53ABC35228DD6BDFED764AEEBD8A0B67600D3D4E4B155070FFC7171196
B0C9C869C51B899AC1B743A5E13A3A3C88AEF69AF57110E6ECC2B0B4507B1BAC
18BBF421A4335DF686B957F7164FF88B20AB3E97BFD39D3A8648C7C2A4698485
94EEBFCF8057BFDD6BCB7898C12A76DE79C83E90F262B5C17F914221F19CE4E7
82EA38D0ABC21929D64A7A4CE8876CC732ABE2CCAB2C111E01052EAD069EB592
E5C8B1DEC39CDADCAB1AB200239A8EFA767DBC8937F725A67D144DD8DD44A45C
62CA390AD19A2A252CB8B984518AA877C74E0302303308DC0EEA4A109DD6E660
CD57317B0086062C0F2AC76EA3866707BE4B6B4BC0D729E3DA05F40A54FDD20B
EEB4A5847AEDF9E907C1DD01ADA0F2CDA11BC327F461B8841658166DF3F73A54
6EF3777F8F4672416EEA97DFED95046B956B216D3EE3F3AACBECDFE884F9F952
569B901DEEE8D50D548AC287F6750B1B1C6F941BDE143594AF59341EEB501E25
A1ECCEEE03D3C48C80F4656709BF1965E99CEB55D61FE27F08B4BC56BC2DA98D
A9DDD49BFA578A42C473C97C7E344D22DAAB542A342E6DA26E2BDA8840543325
474179022B49D9EB7CAA46FDD03DD3EC80A2A2D984C3A4864C5E424931FE536F
4DF0A2CB0AB3E9EF3E67103F7B9CDAA551C833D56EC822972BCC8EE7169C17A8
BD4B1930D115FA2ED8D123CCCE7D6BC9ED16A6BFAABD3E245EC52D2966037E9F
70C6B2E2CADAEB0067F21D43505D8D22B837AD81FC88B7327038CA342F77EBE4
BA84860BE498F5F1DA3C3F8CF27D26E3611CB8CDBA21F5D6D92CAC70E64EEDEF
2C03666CE1F1BC0A6DF77F8A3174F9F525A6E72C2FB7EB856D8008CBE078794F
5E417330749E71A27F9D16AFA86D44AF92CE0A8B02BFBE4FB3C1A0BBC7A2670B
3577237C36EA63C46A8673EDA1477EE4B23E7A31ADB76E62DC0BC9D00528B4BF
23959752504066DE9AB4CCE8799185F3F920F8D42865E0FF9E7E76567A59B0D3
FD282113F2D6D72DF07300005063F0515B7F774CDDDBDB20D6A5FD32D3A02522
3E0BEB352C32237734062E8E26F54E14585997DF8A009CC9C38B52DF7FFCCEFC
E6542E714D06C5089F76E8EF92BCC5BCB571A4A657F5F225FD64B42152180B08
9255B840EE3554DF2CC1105133F1BF39BAB3E67DC8749549614491E969033806
2F6D4104AF8A6ED305376CC4153EF3FFC571F014BFAF842A8F7968A080162673
5C0DAD256826E108FEEA2E17A3A63CED599B67C5715459FC6678D7C8D04377B8
B48FB8C9EA826597B070F382657416B259A8B04BC6F6A7CDFA3122D984BC7CC7
03A81552F700D91F222E2CB0796EB10D197C9EED8ECEBE72528537E502CA4D69
F150F85E8C3B50F34558E39C8404C9572C690A4FDBD1E6C91901FEB6480A1B87
B474C3AEA75991003227175E460E7B5C4919DF61669D923A7F904D3B341EF17B
3509835AADF07D02CCE5F4794DE5757DE3A787B516D3D8BA4F625299659E7267
AB605350D7B208C9AE1D4CB213CE602D4654FE12957EC99F5CFA6C0950490442
BC3315FF367FF9A7525C8294A063674AB6A82FC7BE5105383C8DB6AC85C153A8
8A6F75CE3FA10510265119D80F579D3D7375E4B22D6A39524F12E11F5A1411CD
789AC46E838E6A530ECE60CCEAAD45CA047D6B5DE9759CA8C94DB10B82762945
349A928D15E07140C73EDDA8A63593DC966EE9B2CA5F115D2478659AC806915A
7B0977E388889AB6826220F414DD458DB15D3DA042C5C66809E1D04AFCD97334
E31EEA36F7720FAF77DDEAE7486A412AE8659DC5795590C450D6FB2AD4B74314
F10B7787ACC9B4B01586D7DDA0B0101F7DA442A07499294D04200D23CE315B14
3CD60BA53EE1D4963556D60C135A0BD14F6DE4ECE9B0336361F14D4C873878B6
B0C18664982AB78FD8A2F2FB1F7FDB4C3E84B09394D3FDC87C84785F4633E0AD
0FC14A9D78C84955402CA7966B3007C87D6D153E99C295A66D2513A3ABBEE979
24ACFB8D13B32F5518C97F4FA551A649489A999EF5D6327FA53A31B9B820B8F6
1FDFAC41FB1F9F1228BC0AFFC445EB6561F96EFFFB21C33D6BF2030DC21195A6
F393945DC121DFE91DBCEA64C55E58ABE50C48D2DB342A5C641EC9E0748ADCEC
1BC8FD9141B7D5199C7D8040683719DF1DD5A4EA291BDCE6A408E200F74AB903
B544D56CE4D291CBA2B6C1B5557B9BA83EB83822B4A49BE89C88EC34726B1056
92E967CD00FA0AC3FD39C3F67CD00CFFBDA8166CF3D33F74DF32E4AE2C93ABD0
18DBAD197574479A7BFAF405654362B7F46396EAB02ED830BFA98143D033F840
27B2E134B3C246687D7529AAFCF2F7ADDA464464BE5D8EB3ACCB7D981E63EEC4
1EB823A711BFFDF3B9CAB934FD140562054C40067643A5BFB13F3135ADC6A5FA
88C8A296069AAB4704CB6DFFB25D4A545A8A6D099BBCFADA64A15C09234BD8A5
96CDF261DF0A744D1A3AE810A0D69C1E1214DC19EDE4987426960063AA3A9735
47AAD9234C3E35D588CF8EA8B037193BB6C4140EC89EB1244CA1D3405CDBD5C3
EBB545C9ED1D6558D38C7948C65C6E051F08F71253CA219EA1A2DB59A1DB15DA
510682B3369958B31E873239DAFD6944DF4AE111E78AFC1727FCC84B256CDFFC
5BB5AC5AE2DDC823F12DCBCD80FC564A247C8DBB41445A1601BA25B097A167EE
4FA123174BE00060BE20C9F14E3E8057B352E204F5F64F9001C7B68A2431D085
AF6698766EC9F574FC408CAD4B42350735825873DBE59B48B706D13651311AA2
B40CCFF6EF09F7CEAC776072F59E3F3375ED8BB3F68A7CCB8E4E8C2602861F5B
939B257FB1364E2A78CAC22038EF8D06A4DE5B1E311E07F2BC35E1D4FEF33182
8CED8A17A8F4978E6B3CD3A9587B5213BEBC6F9DDD481E8EDEE5EC26514D8B75
F89F1581DACDCE47D3FC4E0C5FC7129B0D609653F7408C43BF1543D9BE510811
3560F4FF863FD3E8EEB4E0AC4672839A4445942C423BEA148085B78150CFC0E4
193B8603244BDB5CBB2888D586AF8527832AE63DA9D5F8EA000F4E1CB87165D4
5E9760A7418119DA7F5E3E94134F0EDFB64CF7189517E8FFC5FA276ABCF2CE80
FE5E393F9C999AD1AA87686A427E36FCE07BBE069149A4BA60B3BAC15EED5466
BFF1BCF65FB5223435F822A050D508EB18182C31437317356049D05EC7768B01
22E932D8DD0C7CAF3CE63379E0A306ACA001BB6C1A7C6C5EF78D77551A7B53D9
E0B47ED1B39B8BAC224692C393516F77D4DA4213F82CA805656D90C195FFD035
BFBB38F363FD0664EAD84F6B9E27A73B0E671A9A32230F099BE9916B8671EE4D
1F34C0236EF6AB40BD3386E5B862677AE312AA2699811EC8599B9F7A49B874A3
07BFD14C9A9865887D27D3484F69A1D9A094DC3E9F826D5E76A70111377B629F
3EE56AEE23C76636C8BDFAE2710F39783AC41545A9886807800D0C0B1B407E21
DC8DB9220D1D0CD401A644F4FCD1432005E9ADE082EA8354AD852FF015F918E5
0A25453CB558AB8E060D83FE909B9BD4A2C61599CE311EB542D23BABACC1DBD0
B868505443E8BA7D148480789FCF55F4D8CAD67328D276FF98C558B0003E8983
5125871F55012EFE07E306DA832A9C5BCBCEAB307D64DF6A619804E6201272A1
5909F35883977B4CFE460489EA3286EDA5C10C485742CC135FA41A5F1FEFCDFA
FEFD09026B5FB5FE6F1A7519FF6EB44B55B4781D1FD1B8B8449BCB82A7FA652B
DEEC20583F143233ED5A34A6AA5845EE670D3D9D23D793F7A10B57E0DE04EAF3
ABCCF9CC46B491005CC36FE3E1AB718AE2637BE4FABF1E2DEEC5D115802E4B5B
8DA3C9BFB2DB4AE1E25C56E6626A221258CBBD13C6A2E750B69A5212232FBA26
342D0D5532FD0DA1E3398BE81C15C1A4EE59E6FD8EEE581E3B8C24B15FAB3586
BB44B43E86EB6FFE0C5B0A929E9B4660504ED656647B2DDCB0C76A32C06F251D
0CE4B2958E1D4B40AC95F4B7C978C86A52123FCAE5B65795938C730D3BCAAD35
6EDFCA72FD3F1DC5399FE9A1B8614E777CD061149EA22D5743F211294528B5E0
8BE083FBCCC2546070DF3908035B18D0CEF52DDCDB7EB72D90BC602F169D3EB7
5CDEFA40394CDC138E7861C0BE66F84C7C0E636CE9ED19A1C373ADF094DB9C33
7F66B2537EFE4C9F7C9E924E6471342C7B74BD549F6C7016D48DC0D7D6E05C44
FCE18AAD995DA02FC2075D34B5B5E6710C08D6AD139F63F3785221E5E0DF12A9
D06BBBB4304BA79A8DCDC074837171161FA6677C7B59B1F25C93CE245616449A
3AD09B7E9BC17506C16EFE1BFDC4E84C75ACF464D8521DC36D03CC7253C229BF
469235A8E0757924C55C9B58F63C2AF73365E16F818A05E67FF33B1FAAB89589
70F5DDFF9FA31A1EBF100453584722C8791F28E6B468A4C9B726DEE6B3F98ADA
E00FD67CAAF75C830417D99E1C58D15C2A71CC43E1C22DD2728A08A86F7A9DEF
B9D4FB6621A80FF852150759085635FEC2F10A9D3B9D25BC908700E6BB6A801A
503285A3F3CA04308F2A4E22E8F6E6C1918E6FB616006596909A60E010F55CD4
6B0E3305A8C4972CB24846E0748173967B8B818EF0324227C81E822F634ABF67
50B92BCD6E08C9924436EFA5A85F77C88ED08AE919D970995B7F11A9892FC4D1
B3C81CF8E9310C9D0D3212B015C0A909143B65061391CDD04D5A55986B56D636
BB745A070172E585116CDBAAD4AF9185DD9CEDE88B2E79F2381E421E85FE00AD
4B457BB9F5AC6B0E381DA2ED4A073BC13C744C7F5F19525524961E3F54C7B304
5BE9D1A97BB2F3EC16D6280882EBBD68CCF426135519A8C69D7DBDC7F190ECB9
D33273CAF2F10E139215ABB00873E043FD1469588119C3B25352EE0A6C384EA6
CBD0D7565C7A7A67E8A7ED18B0CA286314C43A4A2110EF201993828DC65F46E0
E8103F87DCF441098F1616A46D6006940F658C27008C4A0C97C9A763A9352614
FD0B5AD0C5B3133123C224AEA2851F7E5CA12D8AC64B4550F667EB07416AE678
D1A8287ED481AC64D73DAF6333F8315EF8AFE8060D57A8003958455A2EEF051D
ECC7FBA101C6FB95067373889A1EFDB638F52287DD108022AEF401C74D3C8FF3
90611798BED0989B54AD54C73DB0A04855021B60D6F0AED868A5FBB4CF302F62
3B4B00EB58B43DFE8E1FF72B4AE434473D3D25C2D383F430BDB4F18D240905AE
0E4C5CE618AF0FF84D27642D8A78F5894FBB08D981A5F9AB1C778C2ED0ED38BD
3749D555D57CB240CB650BC7B94A5CD8B39423070F405E5B460B1D32A2B00647
E18741506C4306E1E6A4FA693887DB9BAE29A3841C7D1F1B7320D80DC0492C37
64DA832CAC9C52AC37A6CCD83DEC7DDB385682B27FB66AE04C65B909D98307E2
781216C3F08012D01D2F0464E569B515D34B2D2A30CF69F93D14C735651C225E
75FA4461441DAD004A069A7CB9D60B0B5093EFA84D5A51049A5E666FCD23148D
FA549161FBC56B3C78A86CC610639E5B170EFA7A404CF3F78DF3F18093FB8B9E
083E4FEF985A2B77326BDC4B9DC56D99D7503F82D1524B73470C666F6D961220
02070F4E6F208EB53E768CF5F351A53BE59AE8FB607DD20CB430847DD11E9135
662CD5E16ADD929551C40B282998B730B2115CCFE93AED378AB024738B143B87
412960F3FBFF7EB9616C2357DE2A482018BF4347F2D708BF2143005B22797B22
D4324EF74B2D5A9F62192C95D4F9E0CD75A598FBF98389149D84760B3A00855B
6B221B946B3F8A824CD21A05A9EFDC629A693B14F47B46BF314335EDC99F4AE2
3C89B02FDC619E66150A2BB4A0225D87D0190986009EF75A8D310A8557E577BB
19BF9F95246A265C823CD5665AEF6734AEAB98DB2FAF9E6A74FA979C2FD154ED
D534171B43EA4F0A14368DF164D7F2F95302BF042E7F59809EEEF729725D1C26
E25E15C7AFA1B91BA5B23100404424A9BA096DC78BE3823803D345C94726DFAA
94FFCB5E7F9DF1A3E9248E6576776163A4A5A11CFD9955A9752DE8061E38585A
BEE1AC63096B98CAF982E19EEA7364981390B90E81D3DCD03B58E3D2F718AE6B
B6D15E487E0CDCAFD4DFE6AA96D8D9372B72EA750216229EA8268FB0CC220128
9CFF045F0F58D94C596890B0F78BDCF3FE5C64F175C3C11F36F12B7204D17E4B
F1E84C0AEB23D7F5EF3E32CBA14354EDCAD828641592DB21025DBE266D111E2B
DE396CE28B09F66EC25E92602B98019B8737B686162FAFCA77B5F9DBFF205086
37A6DBDC8B9047ECD7D56A5DAB8DE2BEA46BF6C4999655D8B03006E36B1F9880
5BD347D48ECD8EB84D19027956F19539E6E91BB81932FFD0FDEAFCE1C796BBF6
F2E1BDADD3D045F4B35C700D927D793AEF9459C666C84E3C8B58AFAD2DD66E35
DDCA808C360858C8058A24365A2D9474E383A8A9B669D8F433D0A23A3CCA2FF9
01F298676A6C194E0BDC7516EE06E1F38AA638C07F240B2C8680734304DEF4A8
3EA550F55C8C5E340AC82F5BD934E5644EAD17A116F65AAB238D2BFD73E1E196
C39353C93DEA46869B76AC1E68DC15DC37B6D35B67D526B6A20D3E0C0AAA7508
2390A809B550CAD7218E05D5A1CC17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 94 /circumflex put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209608D3976637A
DB9C73EB3A28623DF758C25574D740385B2C3D10086AEB904A33DD76DA2CC4BF
7E37F9117E9D81D3EFDA12D5BDF0067450C5A8A53959C055C5D6087F1FE6FB5D
8306F16FAD71AB986320F1229440C63ACB5FA24E41CFEB12C2BEA2C25E59A3F9
6CA5B7A04B57F2471D36F5B41E6363DCEFF2DFFE9131F044125884739392333E
15418156EEE8DE92EF4C176742032FE8889839755D8D821CD7F8FAAF8A22C283
19F79216C6D454A864898EE9F830DB5F3372B8F47C464DF19C69ACB3BC0566E2
F25E7FF148B2CDA2B90CB5884440F464CD57295728A4415963CC1BC0635BBEF4
E812CA5E0E788035873D05616F7B0F6A30D36BB285E7955CFD860345F16D952A
BF2F7D2702DB352D0874442B2074859EB49313BC27E1067D627362649D82A5C3
A57DC5041B1A13FD2FA89D875019E23C31650A25CBEEC6B93C575C363FAE2164
76ACBDCDFEFC8B7BD24AF41D55196DF6FB2F28DF88349947B448513C7E832EB9
F35B28EF86C231336351C1F89AA9AB1F8C02D0DC35746E97C2B29B7A44CF7418
89DAE02563F58C453F45C231219FC9727D5D477B256530D4492AE7E4E3CBA90F
50E8BAF9435EBFDF819DA9EE1F6F67A0D65D35E3D0EF63274B611B25756461D2
BFEEF8BFD513B0380993B8D52A6546D69773D67A15C059E6A89CAA2772162509
3B054860006DEA20685F5E2937C95B50D07C6316ABC08495EF319B36F8E48FD0
DA482F82D2D981C70ADA2E467608364EC664D151BCE2FDF571BA63FC926CCD72
052D4F83933A9582AA6642773A62555FD57DCF1448BEC02304B798B7E47B93BE
909C2BA1351EF483D0E70DC23BDD52A91391172D27150A70444B980E59DA01E4
6A79ADA80A1660351ECC1541F80EAEABB72C4CE6818C162257480EA3612ED810
C22F1915008ADA791282032FBD321BDE25F2DC4906B1A90BE3AADD483D833E4A
E962A7BFCB903B21DBC69038675B8C3D3F281FC03B9DDFCEEF932D43B782EA86
05F67C15DECBBD1CFAF59E057B1A71343DACC41CBCDC0E30F2E76DCB7723C97E
E994D92CFB878BB725B0E81E119B3C1DC388C75DB75D9B390B0FB0E5C3F4CB0D
2C1D1430C83390DE0D6E67F39E6386060B48C3F3D264B0677D5C82E913154196
B535A9BF5F10A873E6F7DF8F113C15BC1CE8BA67D0B660E9289A4285EAAF4935
94567D18DA345FB5F045225C94BB5642ACBB24B738DEB7E6ABD6F1CCEFC7CEA6
753D5E64195E05F893839FEFBD1182FEC56B74B3A49A1713C9B0AC672EB1AF6D
9FF317A1444B4C2BFD4C1FE02E73EBA72AFE3B48ADC5ECB1D73D78F46ADE8C83
FC671207932D1F7AC324547ECD764BD52BF608E981EC109805AC720CBE40C75A
4BFD852B2ACA26944AF426C0D55A58BB3CB6B61E6A0C64E989DEB75DF229AB8D
A9820017F40DFB2F5343493A44B6B071892ABC2D9DEAABEADC3DD914F78AE785
08A716AB06751BAAB348E495421EDD3A71C213F15D409E904AB74D330312F87E
0485180C6A8FA29DEB246568968848AE805F4F5058C796EB689AAA6F7499D2ED
98C295BEDAD8484D2427AEB35638E7A7BA95C73832E27677F4B789FB75D7257C
D1F4F615E390BEE87E95D4113A43CB7F3CD53A805F0BB81D834C23AB7CC5E57B
846C9B80746B3A3E99716DFE742D2BCBF6424EB68817010CEF52A007AA0966BE
850B1EB8F45497C20EE44845A7EC0D3CAC72383AA62B69251A3D510DFFA37B6C
E037C0C54983F94276E83ABFD83037DFE4F25A179FFE4DDCA43C10589EED6A1E
9D5D7D40BF4B6A110F100D22DCA6D62F6EF07BECFAB68763E34224145F08CCE5
94DC0D9C88EBF4F5B791924481209A93C6FB0BEC777B17711895F0A68F3B827A
592EDB5F368515E40A39FAC3FAE8EB43106BFB532D6ED361569E7949574F1A61
7CA2E43A46352F0E24C6721E890B68A457FC8F77BFD6986A0FEFD8DE88E63725
CCF71ED81631C6FAD87A139DD5E3866620C726C74BB73AFE049ED78FCE28F3C8
116DF62C827290DBB9F02ECD5239B999183473C126531A799C8B1B5D201BAD25
02E154DA9BAC013756E700280CDACD0B675A08C71C45F41D4D2C739A3A33D5BE
03D9FD4E851C4FC8E436F257562E67F241622C81747FC410CB12141653078FF9
9572CF8AC768C17A21834406EE27009A63161129587179438ADDAC7595E564EF
97DD3282A5A0230F51FE1D42505222A2A2A3762E71C70E4F4B4E522AA182A4F8
C2A5373E8B576CBBC947E14F363741BD99B16B283372B39B380F5B44D7A8C8C0
B1381306172466D23785AFA095631312F88996D982B30114A90C6C835F3214A8
378EC9DC19C64C6FDB4AFA5748A95589641336995EF20965D74C3C3586C37F55
AE17D703D5B5639A07358E80321CF69C1D2EDA95491DCAD9C3D827C0FD9953AA
6A9D048492BB8CAA55D450C221357E7BEE3B8C66E682E931DBFB5CA58DDB358C
B12E718221582BA8F249E11C050049F170FFD6BC922B4B4C529EB7BC96709436
32DE259BAE6E3D176544BE5681ABBD95B27B09C6CC528763E407D1D456D9E75B
4283E6483A48214610162FB3CFAD211E3C802402E788EAD75C5C83B91B02372E
01B28471B6CD9264C6B9C64BD4513E5624A468CF81E0C5A34F2649F7DADA0580
17D8611319C080B963DE59EE52A55A99950D8564D70646280EFFB84AB5FA1F63
E699B4E81DB0DCD24A6B6372D5DB05DA3451BD8712C0C17C096E7ED9425B6D0D
DA9D50EAE28B394001381385EC95EFD9E21DDB7FCDC5BF8F5F37C48FCBD27B33
B982E306205386920ED8C8E8294223E8B5A61FC9E24045FC33A11EE267993BDC
124D1CE9F31A3142824F856DA39D481CFA340330DE8E2D54090DA243BBB70E4D
E8CB934745A46784BEFA7EA118551CB922D25C8CA85F36A009A1BF37107980BD
86800DDD19D3DF2555E8F7CB8EC4131B90BE81467D8FF2762DF4680E7E6313DC
CD08AB243558555C545DC24AD0FC41376DA9BEE1E2A3E928DBAA5C56047DCAED
5FB75F88C01BEA166ACEB2F139296DA42B2408CB984BACEDE318B06329EC8F12
BB24CAFB2AD665C8C48E393C7BA9A80485BD8BA4A227F66F34FAD846805E2AFB
0DE84BA0B9424E82229DA104D980D7D69A36AA227A5A803E662EE9C9E730F02E
9E56188204010D0E643140A540E8130657838A1B13517F180F3261BC35F20E4F
E4DE279F422DC3F32415A3B59E1242E4827A23F30765DFF5F6219EA639346D6D
4F4481BC0CC49BA138F60CB638522D04A9A1162BE287985D2F06B0FAA8C9A557
A4DA43491E44E58AC6CC0F12383B8F29F505F89F4C03C3BEC79A5746B5323E49
5758B599F8461C31160DDBD51B31C2455BBD8339B3DDD61EAB463EFF9DB6A6C5
4BADDA85CAACFAB383FFF422007AEA2592FD9467E00F9CDEE59E8D854F4C6CB6
D280781280090B7628669910E9F2122249500FDEBC0AF01B10A219336485BD4A
B220595DB36DB9B738FEA3313F3033E7B1157C4878176CD84A4B140B9CF40ED2
3EFE81610C6FD54983787F3D57DAF01DF171A746A315D7DF0386CD8DBE271BA7
D9CFD7C6CA4F1880E3737ECFCDE4CC2BEE3C80D521804D386A63DB32FA0383D5
EC80939F63121056C4A1FF443B41FCB1019EDD1C7A7D43A270424284ACF34CE8
3DDBAE5FC21CA8C128B951022FD10EF8597D5305EBE9F3072A25C2F0FF59D3C9
8AEACB986402E98F33146A9F41A477F4E4FA2ABF7261274DF57C0232141A22D8
63BC4DFC5C5327D5805DD082DBF6BDA5CFA89D1C447036F5B72BF3B033ADB39A
B5E7BCBE4FB338EF13B09B384EC33D55948A7D73716692BBB044C37876B66652
A62D5DDA4637F335D7D446FB56BAFB8C91ADB8C1081BC690D3F25F922C3688C3
C24BA95286F81DBEADB8F8E0AF2AF7A3AA469B532E6319F7FF164ED5FC66DD72
77AF3DE15C7E0822E1E569E1F1A9D45DB94DD5A88D4AD77B2B2C1CC8D3926CE8
4BC747608A121B75D281E9ACFCAE7F5FBED20D85B56CF423ECF61CA297E04104
16D039B6AD412921DE183B0EBD02BBDE4649F300AF985E2FC7F97E6FC0E93EFF
6FD396A2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (interro.dvi)
@start /Fa 138[75 52 53 55 2[67 75 112 3[37 3[61 75 60
1[65 15[101 1[101 1[128 25[67 67 67 49[{}18 119.552 /CMBX12
rf /Fb 134[89 89 3[70 74 2[100 97 100 154 46 2[46 3[86
100 2[93 13[108 125 16[129 14[97 10[54 20[97 18[{}19
206.559 /CMSS17 rf /Fc 133[40 48 48 1[48 51 35 36 36
48 51 45 51 76 25 48 1[25 51 45 28 40 51 40 51 45 2[45
1[45 5[68 68 66 51 67 1[62 71 68 4[33 2[59 62 69 66 64
68 3[71 2[25 45 45 45 1[45 45 45 45 45 45 1[25 30 25
2[35 35 25 4[45 14[45 45 5[51 12[{}62 90.9091 /CMR10
rf /Fd 139[41 41 43 2[52 58 1[29 2[29 3[48 58 46 1[51
2[52 26[76 67[{}13 90.9091 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray 1301 384 a Fd(Con)m(tr^)-52
b(ole)35 b(de)g(Connaissances)1041 497 y Fc(D)m(\023)-43
b(epartemen)m(t)33 b(Informatique)d(IUT)g(Bordeaux)h(1)507
b Fb(ASR2)p 75 575 3675 4 v Black 0 TeXcolorgray 75 1062
a(Syst)-5 b(\022)-92 b(emes)66 b(d'exploitation)75 1505
y Fa(1)135 b(Questions)45 b(de)g(cours)p 0 TeXcolorgray
186 1708 a Fc(1.)p 0 TeXcolorgray 46 w(Citez)32 b(deux)d(con)m(train)m
(tes)k(des)d(syst)m(\022)-43 b(emes)32 b(em)m(barqu)m(\023)-43
b(es.)p 0 TeXcolorgray 186 1852 a(2.)p 0 TeXcolorgray
46 w(Citez)32 b(les)e(deux)g(branc)m(hes)g(principales)g(de)h(la)g
(famille)g(Unix)75 2138 y Fa(2)135 b(Ordonnancemen)l(t)216
2341 y Fc(On)29 b(consid)m(\022)-43 b(ere)32 b(une)d(mac)m(hine)i(sur)e
(laquelle)j(v)m(on)m(t)f(tourner)e(les)i(5)f(pro)s(cessus)f(A,)i(B,)g
(C,)f(D)g(et)h(E)f(don)m(t)75 2454 y(les)h(dur)m(\023)-43
b(ees)30 b(d'ex)m(\023)-43 b(ecution)33 b(et)e(les)g(dates)f(d'arriv)m
(\023)-43 b(ee)32 b(son)m(t)f(les)g(suiv)-5 b(an)m(tes)31
b(:)p 0 TeXcolorgray 0 TeXcolorgray 1166 2566 1493 4
v 1164 2678 4 113 v 1216 2645 a(pro)s(cessus)p 1637 2678
V 1654 2678 V 115 w(Date)h(d'arriv)m(\023)-43 b(ee)101
b(Dur)m(\023)-43 b(ee)p 2657 2678 V 1166 2682 1493 4
v 1164 2795 4 113 v 1521 2761 a(A)p 1637 2795 V 1654
2795 V 377 w(0)434 b(10)p 2657 2795 V 1164 2908 V 1525
2874 a(B)p 1637 2908 V 1654 2908 V 377 w(2)457 b(4)p
2657 2908 V 1164 3020 V 1524 2987 a(C)p 1637 3020 V 1654
3020 V 376 w(1)g(7)p 2657 3020 V 1164 3133 V 1520 3100
a(D)p 1637 3133 V 1654 3133 V 377 w(4)434 b(12)p 2657
3133 V 1164 3246 V 1527 3212 a(E)p 1637 3246 V 1654 3246
V 377 w(3)457 b(5)p 2657 3246 V 1166 3250 1493 4 v 216
3426 a(On)33 b(app)s(elle)h(temps)f(de)h(service)g(\(TS\))g(d'un)e(pro)
s(cessus)h(le)h(temps)d(\023)-43 b(ecoul)m(\023)g(e)37
b(en)m(tre)d(son)f(arriv)m(\023)-43 b(ee)36 b(dans)75
3539 y(le)31 b(syst)m(\022)-43 b(eme)32 b(et)f(sa)g(terminaison.)216
3652 y(Repr)m(\023)-43 b(esen)m(tez)33 b(le)e(d)m(\023)-43
b(eroulemen)m(t)32 b(de)f(l'ex)m(\023)-43 b(ecution)33
b(des)e(pro)s(cessus)e(par)h(un)g(diagramme)h(et)h(calculez)g(le)75
3764 y(temps)e(de)g(service)i(mo)m(y)m(en)f(p)s(our)e(les)i
(algorithmes)g(d'ordonnancemen)m(t)g(suiv)-5 b(an)m(t)30
b(:)p 0 TeXcolorgray 186 3909 a(1.)p 0 TeXcolorgray 46
w(Ordonnancemen)m(t)g(FIF)m(O)h(sans)f(quan)m(tum)g(de)g(temps)p
0 TeXcolorgray 186 4053 a(2.)p 0 TeXcolorgray 46 w(Ordonnancemen)m(t)35
b(suiv)-5 b(an)m(t)35 b(la)g(r)m(\022)-43 b(egle)37 b(dite)e(du)f("T)-8
b(ourniquet")36 b(\(Round)e(Robin\))g(a)m(v)m(ec)j(quan)m(tum)302
4166 y(de)30 b(temps)h(q=2)f(en)g(tenan)m(t)i(compte)f(des)f(dates)h
(d'arriv)m(\023)-43 b(ee.)216 4310 y(Remarque)34 b(:)h(lorsqu'un)e(pro)
s(cessus)g(termine)i(son)f(quan)m(tum)g(de)g(temps)g(\\t",)i(il)f(est)f
(plac)m(\023)-43 b(e)37 b(dans)c(la)75 4423 y(\014le)d(d'atten)m(te)j
(A)-10 b(V)g(ANT)30 b(un)g(pro)s(cessus)f(qui)h(arriv)m(e)h(au)f(m)m(^)
-43 b(eme)32 b(temps)e(\\t")75 4709 y Fa(3)135 b(Memoire)216
4912 y Fc(P)m(our)35 b(c)m(hacune)h(des)e(adresses)h(virtuelles)h(suiv)
-5 b(an)m(tes,)36 b(donnez)f(le)g(n)m(um)m(\023)-43 b(ero)36
b(de)f(page)h(virtuelle)g(et)f(le)75 5025 y(d)m(\023)-43
b(eplacemen)m(t)33 b(p)s(our)c(des)h(pages)h(de)f(4)h(k)m(o)g(et)g(de)f
(8)h(k)m(o)g(:)g(0xbf7e72a0,)i(0x51a5f0c8)p 0 TeXcolorgray
75 5610 3675 4 v 75 5723 a(ASR2)2307 b(Semestre)30 b(2,)h(ann)m(\023)
-43 b(ee)32 b(2008-2009)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
